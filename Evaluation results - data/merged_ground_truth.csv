vulnerability_id,file_path,cwe_id,fix_commit_hash,fix_commit_message,original_commit_message,vulnerability_type,created_at,repository
commit-b5a670b43d28507d8f37e20bfb8a5b951e01533c,airflow/timetables/trigger.py,CWE-502,d1bf9c5dd19555e01b0def9900978c66e012f949,Fix MultipleCronTriggerTimetable deserialization (#46886),Timetable that runs on multiple cron expressions (#46451) * Extract cron trigger timetable serde logic * Timetable that runs on multiple cron expressions * Add documentation for MultipleCronTriggerTimetable,deserialization,2025-05-14 22:43:11,airflow_security_analysis
commit-af130c0df1cd02bc0738504c1af63522d4f5be41,task_sdk/src/airflow/sdk/execution_time/task_runner.py,CWE-502,2dc236576ff790df5bb14aec2e97eb0061062354,Fix XCom value deserialization in Task SDK (#45254),AIP-72: Push XCom on Task Return (#45245) closes https://github.com/apache/airflow/issues/45230,deserialization,2025-05-14 22:43:13,airflow_security_analysis
commit-242323829502eece2f6c7748cc9db051f9c247bc,airflow/providers/fab/auth_manager/security_manager/override.py,CWE-352,d029e77f2fd704bec4f4797b09d54c5c824a8536,Bump version checked by FAB provider on logout CSRF protection to 2.10.0 (#40784),Add backward compatibility to CSRF protection of `/logout` method (#40479),CSRFcross-ssitesrequestsforgery,2025-05-14 22:43:17,airflow_security_analysis
commit-0e134580d89cbb981529eb483f672c9dd28efef5,tests/providers/fab/auth_manager/api_endpoints/test_role_and_permission_endpoint.py,CWE-352,14deaa2f1fb8d5dbe4d2e1d9adaa390c5e5efbf8,"Add CSRF protection to ""/logout"" (#40145)",Add readonly REST API endpoint for roles and permissions (#14664) Co-authored-by: Ash Berlin-Taylor <ash_github@firemirror.com>,CSRFcross-ssitesrequestsforgery,2025-05-14 22:43:21,airflow_security_analysis
commit-da9d0863c7ff121c111a455708163b026943bdf1,tests/www/views/test_session.py,CWE-352,14deaa2f1fb8d5dbe4d2e1d9adaa390c5e5efbf8,"Add CSRF protection to ""/logout"" (#40145)",Add a session backend to store session data in the database (#21478) Co-authored-by: Jed Cunningham <jedcunningham@apache.org>,CSRFcross-ssitesrequestsforgery,2025-05-14 22:43:21,airflow_security_analysis
commit-faa8f543d5f7bf7113076dab5f579493ec2860ec,airflow/config_templates/unit_tests.cfg,CWE-502,20cb70b316e4efcd75cc68e98c1ae28e14ade573,Fix broken regex for allowed_deserialization_classes (#36147),"Store config description in Airflow configuration object (#32669) We would like to use the config.yml approach as our main source of truth for airflow configuration. So far it has been split amongst multiple files:   * confg.yml -> descroption   * default_airflow.cfg -> JINJA template to keep cofiguration; examples     and description (used to generate airflow.cfg when airflow starts)   * default_test.cfg -> storing test-only configuration used in some     test cases - used to generate unittest.cfg   * scripts/in_container/airflow_ci.cfg where dCI-specific configuration     overwrote the unittest.cfg This change consolidates it all into unified appraoch; where all configuration information is retrieved from .yml files stored in config_templates. No more additional template files processed by JINJA; no more special CI versions of it; no more unittestdb.cfg file where such configuration would be generated; no more unittestdb to be used separately for tests. * The default_*.cfg files were not real configuration files; becuase   they were really JINJA templates and it got peoeple confused when   copying the files. This change leaves the file empty with the   comment that instructs the user how they can get the default   configuration. * The default_airflow.cfg is gone and instead; we have a way to   show defaults via `airflow config list --defaults` command * Unittest config is generated on-the-flight using defaults stored   in confg_templates. constituing a single place where they need   to be changed for the tests to use them * internally; description of the configuration is stored in   AirflowConfigurationParser and used by the parser to generate   the default configuration when needed. * we got rid of `{{{{` in templated config defaults by marking   the templates with ``is_template`` and getting rid of processing   those entries with regular formatting when generating the default   values. This only concerns defaults from config.yml. Reading   those configuration entries from file is unaffected. This change aims to be 100% backwards compatible with the previous implementation when it comes to functionality; even if internals changed. It also does not add provider-specific changes that are coming separately. The only changes visible to the user are: * generated airflow.cfg is slightly more   readable and displays names of variables that can be used to override   each configuration (which is very useful for copy&pasting) * user are advised; instead of copying the default_airflow.cfg to use   `airflow config list --defaults` to generate production config. This   configuration has all the entries commented out; so that they can   selectively uncomment and change the values they want. This is now   promoted as ""best practice"" in the documentation.",deserialization,2025-05-14 22:43:38,airflow_security_analysis
commit-4e55d7fa2b7d5f8d63465d2c5270edf2d85f08c6,tests/system/providers/google/cloud/vision/example_vision_explicit.py,CWE-362,d676f7c3e50cff943c9b7a36c0f002120432debb,Fix race condition in the system test example_vision_explicit.py (#34076),Migration of System Tests: Cloud Vision Operators (AIP-47) (#26963),racescondition,2025-05-14 22:43:59,airflow_security_analysis
commit-bd2f156bc842f201c736709dae65d04f08573bae,airflow/providers/amazon/aws/triggers/batch.py,CWE-502,75ed3bc3f80ac03c301535f38544a4923ee6d43f,[bugfix] fix AWS triggers where deserialization would crash if region was not specified (#32729),D205 Support - Providers: Amazon/AWS (#32224) * D205 Support - Providers: Amazon/AWS * CI Fixes,deserialization,2025-05-14 22:44:02,airflow_security_analysis
commit-415e0767616121854b6a29b3e44387f708cdf81e,airflow/providers/amazon/aws/triggers/ecs.py,CWE-502,75ed3bc3f80ac03c301535f38544a4923ee6d43f,[bugfix] fix AWS triggers where deserialization would crash if region was not specified (#32729),Deferrable mode for ECS operators (#31881),deserialization,2025-05-14 22:44:03,airflow_security_analysis
commit-f0727b379e6c954a48d4c0b52b0539cf57bffb3f,airflow/config_templates/default_webserver_config.py,CWE-352,543e9a592e6b9dc81467c55169725e192fe95e89,Update CSRF token to expire with session (#28730),Change provider configuration keys for OAuth (#9759),CSRFcross-ssitesrequestsforgery,2025-05-14 22:44:14,airflow_security_analysis
commit-aefa482051ec249f42095286a0fe4cf0eec1f6f4,airflow/serialization/serde.py,CWE-502,12adb5e8c0c1e5f7eeb60afd1189150cdb04bb84,Make allowed_deserialization_classes more intuitive (#28829),Refactor serialization (#28067) Generalize serialization and deserialization Seralization and deserialization (derser) of objects that were not under the control of Airflow of the dag author was not possible. This implementation allows for extension of serialization of arbitrary objects by putting them in the namespace of airflow. Selection of serializer happens in order of registered serializer; custom serializer; attr/dataclass annottated object.,deserialization,2025-05-14 22:44:16,airflow_security_analysis
commit-d8889da29ccfcbecd2c89b9e8e278c480767d678,airflow/config_templates/default_test.cfg,CWE-502,542cfdc270aeb9b05ad150df28bc48b0a84c0f38,Add allow list for imports during deserialization (#27887),Move the database configuration to a new section (#22284) Co-authored-by: gitstart-airflow <gitstart@users.noreply.github.com> Co-authored-by: GitStart <1501599+gitstart@users.noreply.github.com> Co-authored-by: Egbosi Kelechi <egbosikelechi@gmail.com>,deserialization,2025-05-14 22:44:18,airflow_security_analysis
commit-ff64fe84857a58c4f6e47ec3338b576125c4223f,airflow/api_connexion/openapi/v1.yaml,CWE-502,41e48aaf4dbec24c924a03198b224a0b81c432d4,Move the deserialization of custom XCom Backend to 2.4.0 (#26392),Allow filtering DAGS by tags in the REST API (#18090) This PR adds a change to allow filtering DAGs by tags,deserialization,2025-05-14 22:44:20,airflow_security_analysis
commit-ffee6bceb32eba159a7a25a4613d573884a6a58d,airflow/www/static/js/types/api-generated.ts,CWE-502,41e48aaf4dbec24c924a03198b224a0b81c432d4,Move the deserialization of custom XCom Backend to 2.4.0 (#26392),Flag to deserialize value on custom XCom backend (#26343),deserialization,2025-05-14 22:44:20,airflow_security_analysis
commit-f6bda38e20c721df12e0cc88a27119fe320f2a42,tests/system/providers/amazon/aws/example_rds_export.py,CWE-362,5d5482ea2af7d240c5844d5bc48259d3e5088b85,Adds a wait to prevent a race condition (#25967),Convert RDS Export Sample DAG to System Test (AIP-47) (#25205) * Convert RDS Export Sample DAG to System Test * PR Fixes,racescondition,2025-05-14 22:44:20,airflow_security_analysis
commit-2192010ee3acda045e266981b8d5e58e6ec6fb13,airflow/models/dagbag.py,CWE-362,b9eb51a0fb32cd660a5459d73d7323865b34dd99,Fix race condition when using Dynamic DAGs (#13893),Retry Dagbag.sync_to_db to avoid Deadlocks (#12046) Previously we added Retry in DagFileProcessor.process_file to retry dagbag.sync_to_db. However; this meant that if anyone calls dagbag.sync_to_db separately then also need to manage retrying it by themselves. This caused failures in CI for MySQL. resolves https://github.com/apache/airflow/issues/11543,racescondition,2025-05-14 22:44:47,airflow_security_analysis
commit-ff990f245eefd24f1a9a16d2b1712103554f870f,airflow/cli/cli_parser.py,CWE-362,f1d4f54b3479cd7549ce79efadd25cc6859dd420,Fix race conditions in task callback invocations (#10917),Add capability to specify gunicorn access log format (#10261),racescondition,2025-05-14 22:44:48,airflow_security_analysis
commit-fb00c687b69999108a6ac621d603589490edbdda,airflow/jobs/backfill_job.py,CWE-362,f1d4f54b3479cd7549ce79efadd25cc6859dd420,Fix race conditions in task callback invocations (#10917),[AIRFLOW-6590] Use batch db operations in jobs (#7370) * [AIRFLOW-6590] Use batch db operations in jobs The PR changes numerous single selects / updates in base; scheduler; and backfill jobs to bulk operations. * fixup! [AIRFLOW-6590] Use batch db operations in jobs * fixup! fixup! [AIRFLOW-6590] Use batch db operations in jobs,racescondition,2025-05-14 22:44:48,airflow_security_analysis
commit-fa1bc879ee0bdcfd8d2ed22cbdc8a114a903486f,airflow/models/dag.py,CWE-362,f1d4f54b3479cd7549ce79efadd25cc6859dd420,Fix race conditions in task callback invocations (#10917),[AIRFLOW-4307] Backfill respects concurrency limit (#5128) Airflow backfill should respect DAG concurrency limit.,racescondition,2025-05-14 22:44:49,airflow_security_analysis
commit-f69aa14a021a6160ecdb75678fd40cf00a404525,airflow/task/task_runner/standard_task_runner.py,CWE-362,f1d4f54b3479cd7549ce79efadd25cc6859dd420,Fix race conditions in task callback invocations (#10917),"[AIRFLOW-5931] Use os.fork when appropriate to speed up task execution. (#6627) * [AIRFLOW-5931] Use os.fork when appropriate to speed up task execution.   Rather than running a fresh python interpreter which then has to re-load   all of Airflow and its dependencies we should use os.fork when it is   available/suitable which should speed up task running; espeically for   short lived tasks.   I've profiled this and it took the task duration (as measured by the   `duration` column in the TI table) from an average of 14.063s down to   just 0.932s! * Allow `reap_process_group` to kill processes even when the ""group leader"" has already exited. * Don't re-initialize JSON/stdout logging ElasticSearch inside forked processes   Most of the time we will run the ""raw"" task in a forked subprocess (the   only time we don't is when we use impersonation) that will have the   logging already configured. So if the EsTaskHandler has already been   configured we don't want to ""re""configure it -- otherwise it will   disable JSON output for the actual task!",racescondition,2025-05-14 22:44:50,airflow_security_analysis
commit-74c613bf473717f5665f89db3ddcaafb362a4392,tests/core/test_core.py,CWE-362,f1d4f54b3479cd7549ce79efadd25cc6859dd420,Fix race conditions in task callback invocations (#10917),[AIRFLOW-843] Exception availabe in context for on_failure_callback (#2135) Store exceptions encountered executing a task in the context dict; making it available for on_failure_callback handlers.,racescondition,2025-05-14 22:44:51,airflow_security_analysis
commit-f6734b3b850d33d3712763f93c114e80f5af9ffb,docs/spelling_wordlist.txt,CWE-502,1623df8721105f7f8d219741b066b277d8c43cf0,Use different deserialization method in XCom init_on_load (#12327),Enable Sphinx spellcheck for doc generation (#10280),deserialization,2025-05-14 22:44:55,airflow_security_analysis
commit-e9ab9d6a92256a42607c12630fe89368f3316b1c,airflow/www/decorators.py,CWE-352,7431867ac0525434e3c537e9514a33b4fa00a6be,"Exclude CSRF tokens in Log's attribute ""extra"" in database (#10640)",[AIRFLOW-5444] Fix action_logging so that request.form for POST is logged (#6064) Log request.values so both GET and POST are properly logged,CSRFcross-ssitesrequestsforgery,2025-05-14 22:44:58,airflow_security_analysis
commit-9b33f9b8ec0705f354df039abf37686baeeea679,airflow/kubernetes/worker_configuration.py,CWE-732,2bf4fe3bc8a9c522d1a1df521f8f502e576a7ccc,[AIRFLOW-4845] Fix bug where runAsUser 0 doesn't get set in k8s security context (#5474),[AIRFLOW-3274] Add run_as_user and fs_group options for Kubernetes (#4648),,2025-05-14 22:45:19,airflow_security_analysis
commit-e8c1144bb86e9a1f8b0195375185e9418f23f0c5,airflow/executors/base_executor.py,CWE-362,8f15661001706e5bd76a7134c4c8ece06ad83a63,[AIRFLOW-3136] Add retry_number to TaskInstance.key to avoid race condition (#3994),"Add consistent and thorough signal handling and logging Airflow spawns childs in the form of a webserver; scheduler; and executors. If the parent gets terminated (SIGTERM) it needs to properly propagate the signals to the childs otherwise these will get orphaned and end up as zombie processes. This patch resolves that issue. In addition Airflow does not store the PID of its services so they can be managed by traditional unix systems services like rc.d / upstart / systemd and the likes. This patch adds the ""--pid"" flag. By default it stores the PID in ~/airflow/airflow-<service>.pid Lastly; the patch adds support for different log file locations: log; stdout; and stderr (respectively: --log-file; --stdout; --stderr). By default these are stored in ~/airflow/airflow-<service>.log/out/err. * Resolves ISSUE-852",racescondition,2025-05-14 22:45:30,airflow_security_analysis
commit-ffec381099cc0852b0f01237103abe5124205a3b,airflow/models.py,CWE-362,8f15661001706e5bd76a7134c4c8ece06ad83a63,[AIRFLOW-3136] Add retry_number to TaskInstance.key to avoid race condition (#3994),[AIRFLOW-897] Prevent dagruns from failing with unfinished tasks Closes #2099 from aoen/ddavydov/fix_premature_dagrun_failures,racescondition,2025-05-14 22:45:31,airflow_security_analysis
commit-5a7f0b2e5333c936b39cdec06315d109ccf96934,airflow/www_rbac/templates/appbuilder/baselayout.html,CWE-352,27bab21f0dabbb08c7ea5d9021fae0513cc4902d,[AIRFLOW-2866] Fix missing CSRF token head when using RBAC UI (#3804),[AIRFLOW-2691] Manage JS dependencies via npm Closes #3572 from verdan/AIRFLOW-2691-npm-webpack,CSRFcross-ssitesrequestsforgery,2025-05-14 22:45:36,airflow_security_analysis
commit-cbe7955d7e0dd352829f71e762026f4044a05a7d,airflow/www_rbac/webpack.config.js,CWE-352,27bab21f0dabbb08c7ea5d9021fae0513cc4902d,[AIRFLOW-2866] Fix missing CSRF token head when using RBAC UI (#3804),[AIRFLOW-2874] Enables FAB's theme support (#3719),CSRFcross-ssitesrequestsforgery,2025-05-14 22:45:36,airflow_security_analysis
commit-ee98513f5a7a29edeb7d2f0cecbfe98097107a77,airflow/www/views.py,CWE-502,a27bd620d97950773c7732908eb3c597315fdd0e,[AIRFLOW-2160] Fix bad rowid deserialization,Adding task instance state change to view.,deserialization,2025-05-14 22:45:57,airflow_security_analysis
commit-9c60b1917b314e7d0fbdd0433bc4ee9051981fac,airflow/www/app.py,CWE-352,cac49e6eab6e107c838705f43418afcde5a82be4,[AIRFLOW-1231] Use flask_wtf.CSRFProtect,Implement ldap authentication with tests,CSRFcross-ssitesrequestsforgery,2025-05-14 22:45:58,airflow_security_analysis
commit-fdb7e949140b735b8554ae5b22ad752e86f6ebaf,setup.py,CWE-352,ae61987945774ea2f9df53eaedac87fb378234a4,[AIRFLOW-1180] Fix flask-wtf version for test_csrf_rejection,[AIRFLOW-160] Parse DAG files through child processes Instead of parsing the DAG definition files in the same process as the scheduler; this change parses the files in a child process. This helps to isolate the scheduler from bad user code. Closes #1636 from plypaul/plypaul_schedule_by_file_rebase_master,CSRFcross-ssitesrequestsforgery,2025-05-14 22:45:58,airflow_security_analysis
commit-e2e4d3967a9706c159e6d15b11cadcb98ad0ba27,scripts/ci/requirements.txt,CWE-362,eb705fd55c30cea778282140d927f51b4a649c73,[AIRFLOW-719] Fix race condition in ShortCircuit; Branch and LatestOnly,Adding missing dependency,racescondition,2025-05-14 22:46:01,airflow_security_analysis
commit-edf033be65b575f44aa221d5d0ec9ecb6b32c67a,tests/operators/latest_only_operator.py,CWE-362,eb705fd55c30cea778282140d927f51b4a649c73,[AIRFLOW-719] Fix race condition in ShortCircuit; Branch and LatestOnly,[AIRFLOW-198] Implement latest_only_operator Dear Airflow Maintainers; Please accept this PR that addresses the following issues: - https://issues.apache.org/jira/browse/AIRFLOW-198 Testing Done: - Local testing of dag operation with LatestOnlyOperator - Unit test added Closes #1752 from gwax/latest_only,racescondition,2025-05-14 22:46:01,airflow_security_analysis
commit-f360414774f1ecb2e0f4e53ebdd623c7435f9a78,airflow/www/templates/airflow/dag.html,CWE-352,6aca2c2d395952341ab1b201c59011920b5a5c77,[AIRFLOW-836] Use POST and CSRF for state changing endpoints,"[AIRFLOW-149] Task Dependency Engine + Why Isn't My Task Running View Here is the original PR with Max's LGTM: https://github.com/aoen/incubator-airflow/pull/1 Since then I have made some fixes but this PR is essentially the same. It could definitely use more eyes as there are likely still issues. **Goals** - Simplify; consolidate; and make consistent the logic of whether or not   a task should be run - Provide a view/better logging that gives insight into why a task   instance is not currently running (no more viewing the scheduler logs   to find out why a task instance isn't running for the majority of   cases): ![image](https://cloud.githubusercontent.com/assets/1592778/17637621/aa669f5e-6099-11e6-81c2-d988d2073aac.png) **Notable Functional Changes** - Webserver view + task_failing_deps CLI command to explain why a given   task instance isn't being run by the scheduler - Running a backfill in the command line and running a task in the UI   will now display detailed error messages based on which dependencies   were not met for a task instead of appearing to succeed but actually   failing silently - Maximum task concurrency and pools are not respected by backfills - Backfill now has the equivalent of the old force flag to run even for   successful tasks   This will break one use case:   Using pools to restrict some resource on airflow executors themselves   (rather than an external resource like a DB); e.g. some task uses 60%   of cpu on a worker so we restrict that task's pool size to 1 to   prevent two of the tasks from running on the same host. When   backfilling a task of this type; now the backfill will wait on the   pool to have slots open up before running the task even though we   don't need to do this if backfilling on a different host outside of   the pool. I think breaking this use case is OK since the use case is a   hack due to not having a proper resource isolation solution (e.g.   mesos should be used in this case instead). - To make things less confusing for users; there is now a ""ignore all   dependencies"" option for running tasks; ""ignore dependencies"" has been   renamed to ""ignore task dependencies""; and ""force"" has been renamed to   ""ignore task instance state"". The new ""Ignore all dependencies"" flag   will ignore the following:   - task instance's pool being full   - execution date for a task instance being in the future   - a task instance being in the retry waiting period   - the task instance's task ending prior to the task instance's     execution date   - task instance is already queued   - task instance has already completed   - task instance is in the shutdown state   - WILL NOT IGNORE task instance is already running - SLA miss emails will now include all tasks that did not finish for a   particular DAG run; even if   the tasks didn't run because depends_on_past was not met for a task - Tasks with pools won't get queued automatically the first time they   reach a worker; if they are ready to run they will be run immediately - Running a task via the UI or via the command line (backfill/run   commands) will now log why a task could not get run if one if it's   dependencies isn't met. For tasks kicked off via the web UI this   means that tasks don't silently fail to get queued despite a   successful message in the UI. - Queuing a task into a pool that doesn't exist will now get stopped in   the scheduler instead of a worker **Follow Up Items** - Update the docs to reference the new explainer views/CLI command Closes #1729 from aoen/ddavydov/blockedTIExplainerRebasedMaster",CSRFcross-ssitesrequestsforgery,2025-05-14 22:46:04,airflow_security_analysis
commit-e3cd7eda12c1917acadde6e7763b4b10cd99afea,airflow/www/templates/airflow/dags.html,CWE-352,6aca2c2d395952341ab1b201c59011920b5a5c77,[AIRFLOW-836] Use POST and CSRF for state changing endpoints,Using the dagbag to create the view instead of the Flask Admin,CSRFcross-ssitesrequestsforgery,2025-05-14 22:46:04,airflow_security_analysis
commit-edd6cf51192a32978963f730eb50fc5372d1f221,airflow/www/templates/airflow/gantt.html,CWE-352,48480f2351db1a9f5684fff4c3dbc5a95510f07f,Merge pull request #611 from bolkedebruin/csrf,Making AUTHENTICATE optional,CSRFcross-ssitesrequestsforgery,2025-05-14 22:46:32,airflow_security_analysis
commit-e86dd7212aa8e588ac43f2110f9e829fbf0ef802,airflow/www/templates/airflow/graph.html,CWE-352,48480f2351db1a9f5684fff4c3dbc5a95510f07f,Merge pull request #611 from bolkedebruin/csrf,error -> failed,CSRFcross-ssitesrequestsforgery,2025-05-14 22:46:32,airflow_security_analysis
commit-103f6510dac8bdd5c07b354ae90bc6b9ecda383c,airflow/www/templates/airflow/login.html,CWE-352,48480f2351db1a9f5684fff4c3dbc5a95510f07f,Merge pull request #611 from bolkedebruin/csrf,Initial support for kerberos logins; needs cleanup,CSRFcross-ssitesrequestsforgery,2025-05-14 22:46:32,airflow_security_analysis
commit-d760a5c76fdf3e75ccee8378bedd70c1a3e355be,airflow/www/templates/airflow/task_instance.html,CWE-352,48480f2351db1a9f5684fff4c3dbc5a95510f07f,Merge pull request #611 from bolkedebruin/csrf,Minor CSS fix,CSRFcross-ssitesrequestsforgery,2025-05-14 22:46:33,airflow_security_analysis
commit-e491dab9a5c9df09165e0e28fb1babae9990d873,airflow/www/templates/airflow/tree.html,CWE-352,48480f2351db1a9f5684fff4c3dbc5a95510f07f,Merge pull request #611 from bolkedebruin/csrf,First stab at the sphinx documentation,CSRFcross-ssitesrequestsforgery,2025-05-14 22:46:33,airflow_security_analysis
commit-fb7366c6c837b50d614283861d54f2747e984617,setup.py,CWE-352,48480f2351db1a9f5684fff4c3dbc5a95510f07f,Merge pull request #611 from bolkedebruin/csrf,Safer; but still loosely pinned dependencies in setup.py,CSRFcross-ssitesrequestsforgery,2025-05-14 22:46:33,airflow_security_analysis
commit-f45236c6dd8b18af32472a7327784b43cc7c12f8,setup.py,CWE-352,1b52c50740b8f4312c55cc736d7c22b62865e722,Add csrf,An operator to post messages to a Slack Channel,CSRFcross-ssitesrequestsforgery,2025-05-14 22:46:34,airflow_security_analysis
commit-fd65b9f32ef0aab74fc8ad9631fecccf0b843bf6,js/src/scrollspy.js,CWE-79,cc61edfa8af7b5ec9d4888c59bf94377e499b78b,fix(scrollspy): xss in target option,some minor alert shit,XSScross-ssitesscripting,2025-05-14 20:03:32,bootstrap_security_analysis
commit-f8b2569ec8956a1f4d09fe6fc9865bd200ecde43,js/src/collapse.js,CWE-79,149096016f70fd815540d62c0989fd99cdc809e0,fix(collapse): xss in parent option,implement global dispose method,XSScross-ssitesscripting,2025-05-14 20:03:33,bootstrap_security_analysis
commit-fc8b85b62670b8396cac7fb821c025c58fa77a78,js/src/tooltip.js,CWE-79,2d90d369bbc2bd2647620246c55cec8c4705e3d0,fix(tooltip): xss in container option,Fix some css for the arrow of Popover/Tooltip + update documentation,XSScross-ssitesscripting,2025-05-14 20:03:34,bootstrap_security_analysis
commit-f2f2e39a45039658c3ed7a39af834ca8dd802bdc,js/src/util.js,CWE-79,bcad4bcb5f5a9ef079b2883a48a698b35261e083,Fix XSS in data-target,Fix getSelectorFromElement when # is a selector (#21615) * Fix getSelectorFromElement when # is a selector * Thanks to @vanduynslagerp remove regex to validate selector,XSScross-ssitesscripting,2025-05-14 20:03:35,bootstrap_security_analysis
commit-4eaeea81fd909e6711f57049fc4372f4045fa5aa,docs/assets/js/bootstrap-tooltip.js,CWE-79,003fcccceb869ac0420d542bac9860f5f32e68a1,change tooltip/popover html default to false for xss safety net,rebuild and fix test,XSScross-ssitesscripting,2025-05-14 20:04:28,bootstrap_security_analysis
commit-ffb4d9025b7ef3c198558cc71ca3d30cf8c99a1c,docs/assets/js/bootstrap.js,CWE-79,003fcccceb869ac0420d542bac9860f5f32e68a1,change tooltip/popover html default to false for xss safety net,rebuild with typeahead change,XSScross-ssitesscripting,2025-05-14 20:04:29,bootstrap_security_analysis
commit-e9a7d26d0636445fb20def22db54fe703164031b,js/bootstrap-tooltip.js,CWE-79,003fcccceb869ac0420d542bac9860f5f32e68a1,change tooltip/popover html default to false for xss safety net,Cancel running timer for tooltips with delayed show; but instant hide. This prevents delayed tooltips from appearing if the mouse leaves the elements before tooltip is showed and the hiding delay is 0.,XSScross-ssitesscripting,2025-05-14 20:04:30,bootstrap_security_analysis
commit-6f2f947a4309a8fdeb7067612447c0f1a15dcfd9,js/tests/unit/bootstrap-tooltip.js,CWE-79,003fcccceb869ac0420d542bac9860f5f32e68a1,change tooltip/popover html default to false for xss safety net,add build tool for js +  rename twipsy to tooltip + lots of little doc cleanup,XSScross-ssitesscripting,2025-05-14 20:04:31,bootstrap_security_analysis
commit-390a9af936ce6350bec2660b579e3dcab5918fdb,docs/assets/js/bootstrap-tooltip.js,CWE-79,f836473129819c2e348f821ed268451b9b8bf2e4,add html option back to tooltip and popover to explicitly prevent XSS #3421,move js stuff into assets,XSScross-ssitesscripting,2025-05-14 20:04:38,bootstrap_security_analysis
commit-6a9f169fd6cd2203dee3f6230cc78f5dbbeafdab,js/bootstrap-popover.js,CWE-79,f836473129819c2e348f821ed268451b9b8bf2e4,add html option back to tooltip and popover to explicitly prevent XSS #3421,Make the popove respect custom classes,XSScross-ssitesscripting,2025-05-14 20:04:41,bootstrap_security_analysis
commit-f07bcafd397dd39c5490e192ab7b52c49acd3d9b,js/bootstrap-tooltip.js,CWE-79,f836473129819c2e348f821ed268451b9b8bf2e4,add html option back to tooltip and popover to explicitly prevent XSS #3421,Make twipsy respect custom classes when using a custom template If you had a custom class to the root object twipsy would overwrite that class ($tip[0].className = 'twipsy'); now this has been changed so it removes only classes that twipsy adds.,XSScross-ssitesscripting,2025-05-14 20:04:41,bootstrap_security_analysis
commit-8fba154e870a5293f43cc6500923b463afbfdf38,t/unit/backends/test_elasticsearch.py,CWE-362,ada19d215fd1289ad8a22eb44b1ac3afe9787d46,Avoid race condition in elasticsearch backend,elasticsearch: Fix serializing keys (#3924) * elasticsearch: Fix serializing keys elasticsearch requires keys to be a string; not bytes; so make sure we convert the key to a string * Address code review. * Added a testcase that ensures byte keys are converted to strings. * Fix. * Use bytes_to_str instead of string for 2/3 compatibility * Update unit test for bytes_to_str * Remove five.string reference * Correctly convert sentinel.task_id * Convert sentinel object to bytes/str,racescondition,2025-05-14 21:53:57,celery_security_analysis
commit-b4a32539fdb94f2a1cd9af7fd64e86b1e22d86a4,extra/centos/celeryd,CWE-362,e99172d82ff65b69a1d48d3e27090c6bd7e1d4c7,Default log format is now includes %I to avoid race conditions (one logfile per child process),better (and prettier) use of service functions,racescondition,2025-05-14 21:54:14,celery_security_analysis
commit-ed0707dac5dc54ddc57a9c5dbf3e6b46af3b4a1f,extra/generic-init.d/celeryd,CWE-362,e99172d82ff65b69a1d48d3e27090c6bd7e1d4c7,Default log format is now includes %I to avoid race conditions (one logfile per child process),conitrib/generic-init.d: Tried and tested,racescondition,2025-05-14 21:54:14,celery_security_analysis
commit-630c8fbbcc67ee805536363be6e3a58af54e2d2f,extra/systemd/celery.conf,CWE-362,e99172d82ff65b69a1d48d3e27090c6bd7e1d4c7,Default log format is now includes %I to avoid race conditions (one logfile per child process),Add files for demonize celery via systemd.,racescondition,2025-05-14 21:54:14,celery_security_analysis
commit-713be8313f5e877c563e264f5424a24e960eaa57,celery/worker/hub.py,CWE-362,2b30a673f288dfdb249be065aa3dc8c92e4e0985,Fixes race conditions,fixes bug in Hub.repr_active,racescondition,2025-05-14 21:54:22,celery_security_analysis
commit-fb4ab44b7b90bbaa3d1a7aa5e3e52c3417f80239,celery/app/amqp.py,CWE-664,f5c1364c8cff38e18e3a10e431215af31b1d03ff,Fixes bug that causes priority to not be set for messages.,"apply_async: Added the ability to retry publishing the task message in the event of connection loss or failure. **New settings** * `CELERY_TASK_PUBLISH_RETRY`     Decides if publishing task messages will be retried in the case     of connection loss or other connection errors.     Not enabled by default. * `CELERY_TASK_PUBLISH_RETRY_POLICY`     Defines the default policy when retrying publishing a task message in     the case of connection loss or other connection errors.     This is a mapping that must contain the following keys:     * `max_retries`         Maximum number of retries before giving up; in this case the         exception that caused the retry to fail will be raised.         A value of 0 or :const:`None` means it will retry forever.         The default is to retry 3 times.     * `interval_start`         Defines the number of seconds (float or integer) to wait between         retries.  Default is 0; which means the first retry will be         instantaneous.     * `interval_step`         On each consecutive retry this number will be added to the retry         delay (float or integer).  Default is 0.2.     * `interval_max`         Maximum number of seconds (float or integer) to wait between         retries.  Default is 0.2. With the default policy of::     {""max_retries"": 3;      ""interval_start"": 0;      ""interval_step"": 0.2;      ""interval_max"": 0.2} the maximum time spent retrying will be 0.4 seconds.  It is set relatively short by default because a connection failure could lead to a retry pile effect if the broker connection is down: e.g. many web server processes waiting to retry blocking other incoming requests.",,2025-05-14 21:54:31,celery_security_analysis
commit-7ddbcd7d110ae79849c924dcb44bda05359af041,celery/utils/timer2.py,CWE-362,b34074a5840086dd2a1e04e241fd9b6fabc0a570,Fix for a race condition where Timer.enter is called twice before the thread actually runs.,Ship with the timer2 module; don't add it as a dependency. So this is what it has come to? Adding this package may add a lot of work to distribution package maintainers; so we'll just ship with it until the package is recognized.,racescondition,2025-05-14 21:54:35,celery_security_analysis
commit-a65b16d477fdb66ffc5563277355304a5a6010c7,celery/events/snapshot.py,CWE-362,2bdc13385c8a4ef651f74e171420d76e2ac14600,Replaced State.freeze/.thaw with a simple mutex.  Fixes race condition.,celery.messaging is now Celery().amqp,racescondition,2025-05-14 21:54:35,celery_security_analysis
commit-ab7f041fc741251e36a4bfa51fbf69e62d16dc2f,celery/events/snapshot.py,CWE-362,f6ab508d25ba2c5ac4bd113ed951348c2fd0f765,Replaced State.freeze/.thaw with a simple mutex.  Fixes race condition.,Cosmetics,racescondition,2025-05-14 21:54:36,celery_security_analysis
commit-296e8d10a57b316022592fad08ad918a49979481,celery/backends/amqp.py,CWE-362,5ae8d034e7340afbc705fceff1ceff8cd9d3772b,AMQP result backend: Set auto_delete=False again; as it seemed to introduce some subtle race conditions,AMQP Backend: Now set as non-persistent+non-durable by default. Set CELERY_RESULT_PERSISTENT=False to revert to the previous settings.,racescondition,2025-05-14 21:54:36,celery_security_analysis
commit-698be78d7438aade49d3cac5ea1f9de219d33e42,django/db/models/sql/query.py,CWE-89,c87bfaacf8fb84984243b5055dc70f97996cb115,Fixed CVE-2024-42005 -- Mitigated QuerySet.values() SQL injection attacks against JSON fields.,Fixed #24854 -- Refactored QuerySet._values Added django.db.models.sql.query.Query.set_values() method to handle query mutation.,:SQLNoSQLsinjection,2025-05-14 19:16:16,django_security_analysis
commit-d4d800ca1addc4141e03c5440a849bb64d1582cd,tests/file_uploads/tests.py,CWE-434,fe4a0bbe2088d0c2b331216dad21ccd0bb3ee80d,Fixed CVE-2024-39330 -- Added extra file name validation in Storage's save method.,Fixed CVE-2021-28658 -- Fixed potential directory-traversal via uploaded files. Thanks Claude Paroz for the initial patch. Thanks Dennis Brinkrolf for the report.,,2025-05-14 19:16:25,django_security_analysis
commit-e458abc5931861e72f18b5d218726f9add7028cd,docs/ref/csrf.txt,CWE-352,708b01c79501eb9fd73cc5f01a724205d70a6d30,Refs #35401 -- Linked the CsrfViewMiddleware docs to the csrf_protect() decorator.,Refs #28592 -- Created a new CSRF how-to document.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:16:28,django_security_analysis
commit-8eef22dfed2d53df0da10c0090d9cb04f66efb15,django/views/templates/csrf_403.html,CWE-352,c201014e85f321173a018914e148734f29f1e28b,Removed hardcoded docs version in csrf template.,Fixed #34343 -- Moved built-in templates to filesystem.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:16:29,django_security_analysis
commit-d228c1192ed59ab0114d9eba82ac99df611652d2,django/views/defaults.py,CWE-352,14b0132e5e70854076ea781451f5ff37f8dc8edd,Fixed #34830 -- Added request to bad_request/csrf_failure view template contexts.,Fixed #19866 -- Added security logger and return 400 for SuspiciousOperation. SuspiciousOperations have been differentiated into subclasses; and are now logged to a 'django.security.*' logger. SuspiciousOperations that reach django.core.handlers.base.BaseHandler will now return a 400 instead of a 500. Thanks to tiwoc for the report; and Carl Meyer and Donald Stufft for review.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:16:35,django_security_analysis
commit-e1cd5a76d739210ae3b45d2c5f1ac7a556d6fa53,tests/view_tests/tests/test_csrf.py,CWE-352,14b0132e5e70854076ea781451f5ff37f8dc8edd,Fixed #34830 -- Added request to bad_request/csrf_failure view template contexts.,Cosmetic edits to tests/view_tests/tests/test_csrf.py.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:16:35,django_security_analysis
commit-ff1b19da6761217ed1b14cc7e94c6438903565d8,docs/ref/csrf.txt,CWE-352,aceee39d44994df20d13104e55ae61845d7a1e95,Fixed #34990 -- Changed link to OWASP in CSRF docs.,Fixed #31029 -- Used more specific links to RFCs.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:16:36,django_security_analysis
commit-93803a1b5f4a08eb064b4cc8b3834ff323be4065,django/views/csrf.py,CWE-352,535f7b5c6cea54a0796d85bbe213183d50002689,Fixed #34830 -- Added request to csrf_failure view's template context.,Fixed #33567 -- Avoided setting default text/html content type on responses.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:16:36,django_security_analysis
commit-e687794f6b04566ec1bf6d19a620c165d61f3c79,tests/csrf_tests/tests.py,CWE-352,0e540fca13ecf3d40be374ef7be94a0357222873,Corrected logger in CsrfViewMiddlewareTestMixin.test_ensures_csrf_cookie_no_logging().,Cleaned up docstrings in csrf_tests/tests.py.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:16:41,django_security_analysis
commit-ef46f3778a0e8fee7f68c4cfb7ad60a3c8765934,docs/releases/5.0.txt,CWE-352,953f81e078fb7299b6d40d4e599e5f559e03952b,Refs #31949 -- Made @csrf_exempt decorator to work with async functions.,Refs #32712 -- Removed django.utils.baseconv module per deprecation timeline.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:16:44,django_security_analysis
commit-fc0fa72ff4cdbf5861a366e31cb8bbacd44da22d,django/core/handlers/exception.py,CWE-400,85ac33591c393f1480d4f23b4daff40119cb6410,Fixed CVE-2023-24580 -- Prevented DoS with too many uploaded files.,Fixed #31224 -- Added support for asynchronous views and middleware. This implements support for asynchronous views; asynchronous tests; asynchronous middleware; and an asynchronous test client.,,2025-05-14 19:16:53,django_security_analysis
commit-fc2b8ddcc8a0d68dcd333a77314c816469ba96af,django/conf/__init__.py,CWE-352,e01970e9d23a241473671ea26126f8440db4dead,Refs #32800 -- Removed CSRF_COOKIE_MASKED transitional setting per deprecation timeline.,Fixed #23495 -- Stopped swallowing real settings import error Thanks papaloizouc for the report.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:16:57,django_security_analysis
commit-fb05ca420da1341c0d39cf1f0e2fb659be836c92,django/template/backends/jinja2.py,CWE-352,d5f892d873c6f98178121214f3c00d284ae1296d,Fixed #34220 -- Moved csrf_input_lazy; csrf_token_lazy imports to the toplevel.,Used Path.read_text() in jinja2.get_exception_info().,CSRFcross-ssitesrequestsforgery,2025-05-14 19:16:58,django_security_analysis
commit-ef8a9bc7fafc394f2c413a6ad4057d67134d742b,docs/howto/index.txt,CWE-352,e458abc5931861e72f18b5d218726f9add7028cd,Refs #28592 -- Created a new CSRF how-to document.,Fixed #17048 - Added docs for upgrading Django. Thanks Donald Stufft for the suggestion and Susan Tan and Brian Fabian Crain for the patch.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:17:09,django_security_analysis
commit-d334f46b7a080fd3eb720141c19b37b10704a352,django/core/checks/security/csrf.py,CWE-352,1299bc33e131a3c44b544b58c706bc998c4228ed,Refs #33526 -- Made CSRF_COOKIE_SECURE/SESSION_COOKIE_SECURE/SESSION_COOKIE_HTTPONLY don't pass on truthy values.,Refs #26601 -- Removed support for old-style middleware using settings.MIDDLEWARE_CLASSES.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:17:10,django_security_analysis
commit-d106d07f732013eeb4667e73fa9cfd197e1d3484,docs/internals/deprecation.txt,CWE-352,5d80843ebc5376d00f98bf2a6aadbada4c29365c,Fixed #32800 -- Changed CsrfViewMiddleware not to mask the CSRF secret.,Advanced deprecation warnings for Django 3.2.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:17:20,django_security_analysis
commit-ff514309e178e3955012050ead9b8fc66dc21a5b,django/middleware/csrf.py,CWE-352,00ea883ef56fb5e092cbe4a6f7ff2e7470886ac4,Fixed #32329 -- Made CsrfViewMiddleware catch more specific UnreadablePostError.,Fixed #32578 -- Fixed crash in CsrfViewMiddleware when a request with Origin header has an invalid host.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:17:21,django_security_analysis
commit-fb48eb05816b1ac87d58696cdfe48be18c901f16,django/contrib/admindocs/views.py,CWE-22,46572de2e92fdeaf047f80c44d52269e54ad68db,Fixed CVE-2021-33203 -- Fixed potential path-traversal via admindocs' TemplateDetailView.,Fixed #12663 -- Formalized the Model._meta API for retrieving fields. Thanks to Russell Keith-Magee for mentoring this Google Summer of Code 2014 project and everyone else who helped with the patch!,,2025-05-14 19:17:28,django_security_analysis
commit-db5b75f10fe211af9fab9094f937436760db8488,docs/ref/checks.txt,CWE-79,54da6e2ac20bde80e0de9e35aa0c40ae1dd13943,Fixed #32678 -- Removed SECURE_BROWSER_XSS_FILTER setting.,Fixed #31840 -- Added support for Cross-Origin Opener Policy header. Thanks Adam Johnson and Tim Graham for the reviews. Co-authored-by: Tim Graham <timograham@gmail.com>,XSScross-ssitesscripting,2025-05-14 19:17:40,django_security_analysis
commit-eb0ce6fa3669971f1e21a3fdba270cf33d603eaa,docs/releases/index.txt,CWE-22,d4d800ca1addc4141e03c5440a849bb64d1582cd,Fixed CVE-2021-28658 -- Fixed potential directory-traversal via uploaded files.,Added stub release notes for 3.0.,,2025-05-14 19:17:42,django_security_analysis
commit-d73d0e071c1b4c86d57994a0ab55a74cfe80cdf5,tests/file_uploads/urls.py,CWE-22,d4d800ca1addc4141e03c5440a849bb64d1582cd,Fixed CVE-2021-28658 -- Fixed potential directory-traversal via uploaded files.,Fixed #22218 -- Deprecated django.conf.urls.patterns. Thanks Carl Meyer for the suggestion and Alex Gaynor and Carl for reviews.,,2025-05-14 19:17:43,django_security_analysis
commit-fe3fc5210f0bb334a679ed420152af1c862c0239,django/core/checks/__init__.py,CWE-352,dba44a7a7a3581ec722e06fa0f9f33dfc00ed5cd,Refs #16010 -- Required CSRF_TRUSTED_ORIGINS setting to include the scheme.,Fixed #23813 -- Added checks for common URL pattern errors Thanks jwa and lamby for the suggestions; and timgraham and jarshwah for their reviews.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:17:44,django_security_analysis
commit-b0c56b895fd2694d7f5d4595bdbbc41916607f45,tests/csrf_tests/tests.py,CWE-352,dba44a7a7a3581ec722e06fa0f9f33dfc00ed5cd,Refs #16010 -- Required CSRF_TRUSTED_ORIGINS setting to include the scheme.,Fixed #24496 -- Added CSRF Referer checking against CSRF_COOKIE_DOMAIN. Thanks Seth Gottlieb for help with the documentation and Carl Meyer and Joshua Kehn for reviews.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:17:45,django_security_analysis
commit-e527c0b6d808cb8e4bedf79ded3dc4ad1a7e17a8,django/core/serializers/base.py,CWE-502,8e90560aa8868a42bb8eda6273595bf0932a6090,Fixed #32420 -- Fixed detecting primary key values in deserialization when PK is also a FK.,Fixed #13252 -- Added ability to serialize with natural primary keys. Added ``--natural-foreign`` and ``--natural-primary`` options and deprecated the ``--natural`` option to the ``dumpdata`` management command. Added ``use_natural_foreign_keys`` and ``use_natural_primary_keys`` arguments and deprecated the ``use_natural_keys`` argument to ``django.core.serializers.Serializer.serialize()``. Thanks SmileyChris for the suggestion.,deserialization,2025-05-14 19:17:49,django_security_analysis
commit-64331419c848a8b6835b25f2c600d7150f722c96,django/core/checks/security/csrf.py,CWE-352,ba3fb2e4d0aca26f6ea37d7e31488ad09043f89d,Refs #32311 -- Fixed CSRF_FAILURE_VIEW system check errors code.,Fixed #32311 -- Added system check for CSRF_FAILURE_VIEW setting.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:17:53,django_security_analysis
commit-ff8020ed49571b0fece67d10d7398d5f57cbaa74,docs/ref/settings.txt,CWE-352,3d4ffd1ff0eb9343ee41de77caf6ae427b6e873c,Fixed #32065 -- Restored leading dot to CSRF_COOKIE_DOMAIN examples.,Fixed #29788 -- Added support for Oracle Managed File (OMF) tablespaces.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:17:54,django_security_analysis
commit-ffc37e2343a93cf6d44247e20cd263b41f931716,tests/cache/tests.py,CWE-524,229c9c6653356a0bc23846d83b2d4b5d0438a145,Refs CVE-2020-13254 -- Fixed cache.tests when KEY_PREFIX is defined.,Fixed #21012 -- New API to access cache backends. Thanks Curtis Malony and Florian Apolloner. Squashed commit of the following: commit 3380495e93f5e81b80a251b03ddb0a80b17685f5 Author: Aymeric Augustin <aymeric.augustin@m4x.org> Date:   Sat Nov 23 14:18:07 2013 +0100     Looked up the template_fragments cache at runtime. commit 905a74f52b24a198f802520ff06290a94dedc687 Author: Aymeric Augustin <aymeric.augustin@m4x.org> Date:   Sat Nov 23 14:19:48 2013 +0100     Removed all uses of create_cache.     Refactored the cache tests significantly.     Made it safe to override the CACHES setting. commit 35e289fe9285feffed3c60657af9279a6a2cfccc Author: Aymeric Augustin <aymeric.augustin@m4x.org> Date:   Sat Nov 23 12:23:57 2013 +0100     Removed create_cache function. commit 8e274f747a1f1c0c0e6c37873e29067f7fa022e8 Author: Aymeric Augustin <aymeric.augustin@m4x.org> Date:   Sat Nov 23 12:04:52 2013 +0100     Updated docs to describe a simplified cache backend API. commit ee7eb0f73e6d4699edcf5d357dce715224525cf6 Author: Curtis Maloney <curtis@tinbrain.net> Date:   Sat Oct 19 09:49:24 2013 +1100     Fixed #21012 -- Thread-local caches; like databases.,,2025-05-14 19:17:59,django_security_analysis
commit-70be31bba7f8658f17235e33862319780c3dfad1,tests/csrf_tests/test_context_processor.py,CWE-352,5b09354954348f1a56df32b2d7dbe074a23a4532,Fixed #31291 -- Renamed salt to mask for CSRF tokens.,Fixed #24836 -- Made force_text() resolve lazy objects.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:18:06,django_security_analysis
commit-ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,tests/template_backends/test_dummy.py,CWE-352,5b09354954348f1a56df32b2d7dbe074a23a4532,Fixed #31291 -- Renamed salt to mask for CSRF tokens.,Fixed #29038 -- Removed closing slash from HTML void tags.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:18:07,django_security_analysis
commit-c4c128d67c7dc2830631c6859a204c9d259f1fb1,tests/csrf_tests/views.py,CWE-352,9d5a487f334a93de3fdcadba0caa09cbafa0d5d6,Dropped obsolete mimetype kwarg in csrf test view,Fixed #28488 -- Reallowed error handlers to access CSRF tokens. Regression in eef95ea96faef0b7dbbe0c8092202b74f68a899b.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:18:17,django_security_analysis
commit-ab661e994bc5b28e320b38b03a15c1cb7c1bb8c1,docs/ref/checks.txt,CWE-79,c5075360c50b6e681fb3e7d58e6e93ae96662f49,Fixed #30680 -- Removed obsolete system check for SECURE_BROWSER_XSS_FILTER setting.,Alphabetized system check reference.,XSScross-ssitesscripting,2025-05-14 19:18:17,django_security_analysis
commit-cecc079168e8669138728d31611ff3a1e7eb3a9f,django/contrib/postgres/fields/hstore.py,CWE-89,7deeabc7c7526786df6894429ce89a9c4b614086,Fixed CVE-2019-14234 -- Protected JSONField/HStoreField key and index lookups against SQL injection.,Refs #23919 -- Stopped inheriting from object to define new style classes.,:SQLNoSQLsinjection,2025-05-14 19:18:23,django_security_analysis
commit-c14937cf7a1e8c25702e89485cc2dd33aa0d3a16,django/contrib/admin/static/admin/js/vendor/jquery/jquery.js,CWE-20,34ec52269ade54af31a021b12969913129571a3f,Applied jQuery patch for CVE-2019-11358.,Fixed #12508 - Added ability to dynamically add inlines in the admin app. Refs #13. Also introduces an ``empty_form`` attribute on formsets to make it easier to implement dynamic forms. Many thanks to Zain Memon for the initial patch from his Summer of Code 2009 project; Stanislaus Madueke for his django-dynamic-formset app and all the other people helping out. git-svn-id: http://code.djangoproject.com/svn/django/trunk@12297 bcc190cf-cafb-0310-a4f2-bffc1f526a37,,2025-05-14 19:18:33,django_security_analysis
commit-fa680ce1e252666d125264b2e93782c127ebe8c8,docs/ref/csrf.txt,CWE-352,8e675e2bd8366adf5d0b579accfef75a7b1bc3bf,Fixed #30299 -- Removed jQuery dependency from getCookie() in CSRF docs.,Fixed #23825 -- Added links for decorating class-based views to the CSRF docs.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:18:36,django_security_analysis
commit-fd4698fe3f2a1cfe9deef83a95db725e5cb66f21,docs/releases/index.txt,CWE-451,1ecc0a395be721e987e8e9fdfadde952b6dee1c7,Fixed #30070; CVE-2019-3498 -- Fixed content spoofing possiblity in the default 404 page.,Added stub release notes for 1.11.7.,,2025-05-14 19:18:40,django_security_analysis
commit-ddf169cdaca91e92dd5bfe6796bb6f38369ecb68,django/middleware/csrf.py,CWE-352,22e8ab02863819093832de9f771bf40a62a6bd4a,Fixed #29728 -- Prevented session resaving if CSRF cookie is unchanged.,Refs #16859 -- Allowed storing CSRF tokens in sessions. Major thanks to Shai for helping to refactor the tests; and to Shai; Tim; Florian; and others for extensive and helpful review.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:18:45,django_security_analysis
commit-f0d6f01fbe171f4599fd13e34ccff0a5af653e90,docs/releases/index.txt,CWE-362,271542dad1686c438f658aa6220982495db09797,Fixed #29499 -- Fixed race condition in QuerySet.update_or_create().,Added stub release notes for 2.0.4.,racescondition,2025-05-14 19:18:46,django_security_analysis
commit-fc19f9315be312b5e5f00e0004b8696e36f852e7,tests/get_or_create/models.py,CWE-362,271542dad1686c438f658aa6220982495db09797,Fixed #29499 -- Fixed race condition in QuerySet.update_or_create().,Refs #22728 - Added missing tests for defaults__exact case,racescondition,2025-05-14 19:18:47,django_security_analysis
commit-fff5dbe59ca629c295480693f045f03537858eee,django/template/defaulttags.py,CWE-352,98019df855fb8fb93e4e9505afeedcad29da3125,Used double quotation marks for csrf form element.,Corrected firstof template tag's docstring. Since Django 1.8; firstof escapes its output.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:18:50,django_security_analysis
commit-f7969b0920c403118656f6bfec58d6454d79ef1a,tests/csrf_tests/tests.py,CWE-352,98019df855fb8fb93e4e9505afeedcad29da3125,Used double quotation marks for csrf form element.,Fixed #23620 -- Used more specific assertions in the Django test suite.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:18:51,django_security_analysis
commit-af98a0a25e89816007453f3c62f3a4d525ee0405,docs/internals/security.txt,CWE-400,e1cf2a607ef7e1cd8bc3612c93e4e7a9aa9589cc,"Added ""Denial-of-service attacks"" to the security issue severity classification.",Updated security policy according to current practices. Also added security release date notifications to django-announce.,,2025-05-14 19:18:52,django_security_analysis
commit-ffa548fb561d4e32b42566cc67a2499a5e321944,django/views/csrf.py,CWE-352,347551c2a1bc78b3a5886be6adde0c8151001acc,Fixed #28508 -- Set the foreground color to black in CSRF and 404 error templates.,Updated link to CSRF docs Refs #23866.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:18:59,django_security_analysis
commit-ea542a9c7239b5b665797b7c809f1aceb0b412cf,django/views/templates/technical_404.html,CWE-352,347551c2a1bc78b3a5886be6adde0c8151001acc,Fixed #28508 -- Set the foreground color to black in CSRF and 404 error templates.,Fixed #28007 -- Moved debug templates to the filesystem Thanks Tim Graham for the review.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:00,django_security_analysis
commit-ff099f9db8fc88966904035d37b1431af4ad35fd,django/views/debug.py,CWE-79,46e2b9e059e617afe6fe56da9f132568a7e6b198,Fixed CVE-2017-12794 -- Fixed XSS possibility in traceback section of technical 500 debug page.,Fixed #28271 -- Added charset to technical_500_response() AJAX response.,XSScross-ssitesscripting,2025-05-14 19:19:01,django_security_analysis
commit-d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,tests/view_tests/tests/test_static.py,CWE-601,a1f948b468b6621083a03b0d53432341b7a4d753,Fixed CVE-2017-7234 -- Fixed open redirect vulnerability in views.static.serve().,Refs #23919 -- Replaced super(ClassName; self) with super().,,2025-05-14 19:19:05,django_security_analysis
commit-9baf692a58de78dba13aa582098781675367c329,django/core/checks/security/csrf.py,CWE-352,33e86b3488dbf29f5aeb38cf0ee6597190d33c59,Refs #16859 -- Disabled CSRF_COOKIE_* checks when using CSRF_USE_SESSIONS.,Fixed #26601 -- Improved middleware per DEP 0005. Thanks Tim Graham for polishing the patch; updating the tests; and writing documentation. Thanks Carl Meyer for shepherding the DEP.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:05,django_security_analysis
commit-97c3dfe12e095005dad9e6750ad5c5a54eee8721,docs/releases/1.11.txt,CWE-352,ddf169cdaca91e92dd5bfe6796bb6f38369ecb68,Refs #16859 -- Allowed storing CSRF tokens in sessions.,Added stub 1.11 release notes.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:07,django_security_analysis
commit-fbb4f0797cc44fe2dedda38d1c681fe09473859e,django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js,CWE-79,93c538694e6b14a29cb0f52b784a3bfed604fda6,Fixed XSS in admin's add/change related popup.,"Fixed JavaScript ""strict"" violations.",XSScross-ssitesscripting,2025-05-14 19:19:14,django_security_analysis
commit-d7848c11e008ddeb036a95d389caa3b2c97b795e,django/views/debug.py,CWE-79,93c538694e6b14a29cb0f52b784a3bfed604fda6,Fixed XSS in admin's add/change related popup.,Fixed #25147 -- Fixed debug view copy-paste/interactive toggle. The whitespace added in 1101467ce0756272a54f4c7bc65c4c335a94111b broke the initial comparison.,XSScross-ssitesscripting,2025-05-14 19:19:14,django_security_analysis
commit-f18b08748abaecb171fdcbcdfdcd7e4d95d931d1,tests/admin_views/tests.py,CWE-79,93c538694e6b14a29cb0f52b784a3bfed604fda6,Fixed XSS in admin's add/change related popup.,Fixed #25903 -- Fixed the admin's list_editable add/change buttons.,XSScross-ssitesscripting,2025-05-14 19:19:15,django_security_analysis
commit-e376558ed257a4f8ce63779058f3d181ef49caa0,docs/ref/csrf.txt,CWE-352,222e1334bf29605925eefa45ff107ca1155e93c0,Used strict comparison in docs/ref/csrf.txt's JavaScript.,Fixed #16936 - Updated javascript for CSRF protection. Thanks Idan Gazit for the patch.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:16,django_security_analysis
commit-528157ce73e4e7d9ee65c362d0cb4013eb17c5f0,docs/topics/security.txt,CWE-352,5112e65ef2df1dbb95ff83026b6a962fb2688661,Fixed #20869 -- made CSRF tokens change every request by salt-encrypting them,"Fixed #14201 - Add a ""security overview"" page to the docs Thanks to davidfischer for the initial patch! git-svn-id: http://code.djangoproject.com/svn/django/trunk@16360 bcc190cf-cafb-0310-a4f2-bffc1f526a37",CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:17,django_security_analysis
commit-6a4f13de27e2c46b6e516a01ba77fd4fe03d9dbe,docs/ref/csrf.txt,CWE-352,7a7b82e6f4c34fbfd7a11123986ed74f9f752a48,Fixed #26181 -- Corrected AngularJS CSRF example.,Added docs about configuring CSRF support in AngularJS.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:23,django_security_analysis
commit-ff19df9c2d6ad80bb9177e8190176e9c3716705f,tests/admin_changelist/tests.py,CWE-352,e73fb2c9e1ecddf0016ea553350270c855d1de71,Refs #19536 -- Tweaked test assertion to avoid collision with CSRF token.,Fixed #19536 -- Included object-tools when ModelAdmin.has_add_permission() is False.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:24,django_security_analysis
commit-fff7b507ef2f85bb47abd2ee32982682d7822ac4,django/http/request.py,CWE-352,b0c56b895fd2694d7f5d4595bdbbc41916607f45,Fixed #24496 -- Added CSRF Referer checking against CSRF_COOKIE_DOMAIN.,"Added a space before explanation of ""Invalid HTTP_HOST header: ...""",CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:26,django_security_analysis
commit-fd219fa24c7911adab60e1f5e4fd3d7f9d82a969,tests/admin_views/admin.py,CWE-79,82c9169077a066995e3b00aac551bf1c8a89d98a,Refs #24461 -- Added test/release notes for XSS issue in ModelAdmin.readonly_fields,"Fixed #8261 -- ModelAdmin hook for customising the ""show on site"" button ``ModelAdmin.view_on_site`` defines wether to show a link to the object on the admin detail page. If ``True``; cleverness (i.e. ``Model.get_absolute_url``) is used to get the url. If it's a callable; the callable is called with the object as the only parameter. If ``False``; not link is displayed. With the aim of maitaining backwards compatibility; ``True`` is the default.",XSScross-ssitesscripting,2025-05-14 19:19:30,django_security_analysis
commit-a77679dfaa963361b6daad6de0d7de1b53d4f104,django/middleware/csrf.py,CWE-352,668d53cd125175eb708cc0af143f47b42cd42153,Fixed #21495 -- Added settings.CSRF_HEADER_NAME,Fixes #16827. Adds a length check to CSRF tokens before applying the santizing regex. Thanks to jedie for the report and zsiciarz for the initial patch. git-svn-id: http://code.djangoproject.com/svn/django/trunk@17500 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:32,django_security_analysis
commit-92e8f1f30223d95c0e71ee6ace7bdc476c81abbd,django/template/context_processors.py,CWE-352,8099d33b6553c9ee7de779ae9d191a1bf22adbda,Simplified the lazy CSRF token implementation in csrf context processor.,Moved context_processors from django.core to django.template.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:32,django_security_analysis
commit-f27a4ee3270bd57299ce02d622978ac4d839137e,docs/index.txt,CWE-352,d3db878e4beff057400dd780c24f3601a5d31f95,Moved CSRF docs out of contrib.,Removed django.contrib.localflavor. Each localflavor lives on as a separate app.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:36,django_security_analysis
commit-b6b8a3f66b5cf4f00bd7ce668ac04f21bb73e0b9,docs/ref/index.txt,CWE-352,d3db878e4beff057400dd780c24f3601a5d31f95,Moved CSRF docs out of contrib.,Refactored URL mapping documentation. Reorganized topic document so it introduces concepts form simple to more complex. Moved reference parts to their own documents.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:37,django_security_analysis
commit-ff410565bf1cf1a2905c1ef83db408d455211446,docs/ref/templates/builtins.txt,CWE-352,d3db878e4beff057400dd780c24f3601a5d31f95,Moved CSRF docs out of contrib.,"Fixed #20709 -- Allowed {% widthratio %} to accept an ""as"" parameter. Thanks clay.evil@ for the suggestion.",CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:39,django_security_analysis
commit-d1e5c55258d624058a93c8cacdb1f25ae7857554,docs/releases/1.1.txt,CWE-352,d3db878e4beff057400dd780c24f3601a5d31f95,Moved CSRF docs out of contrib.,Fixed many more ReST indentation errors; somehow accidentally missed from [16955] git-svn-id: http://code.djangoproject.com/svn/django/trunk@16983 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:40,django_security_analysis
commit-f81d4ba5b3deceeacbe51923f379acb7d033665f,docs/releases/1.2.txt,CWE-352,d3db878e4beff057400dd780c24f3601a5d31f95,Moved CSRF docs out of contrib.,Fixed #14038 -- Added information to release notes and version changed|added markers to documentation additions for the new template loeaders API introduced in version 1.2. Thanks 3point2 for the report. git-svn-id: http://code.djangoproject.com/svn/django/trunk@15309 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:40,django_security_analysis
commit-fbc1fca834e8a53aee888d9970a87ff0b623ee0f,docs/releases/1.3.txt,CWE-352,d3db878e4beff057400dd780c24f3601a5d31f95,Moved CSRF docs out of contrib.,Fixed a reference in the docs to a non-existant PasswordField. git-svn-id: http://code.djangoproject.com/svn/django/trunk@14162 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:41,django_security_analysis
commit-c07f3e60c2d455e36ba4ac339d4283d32bbc3814,docs/releases/1.4.11.txt,CWE-352,d3db878e4beff057400dd780c24f3601a5d31f95,Moved CSRF docs out of contrib.,Added information on resolved security issues to release notes.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:41,django_security_analysis
commit-f3e7ab366c597571198dc8d024f09e619991bac4,docs/releases/1.4.txt,CWE-352,d3db878e4beff057400dd780c24f3601a5d31f95,Moved CSRF docs out of contrib.,Removed gender-based pronouns per [c0a2daad78].,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:41,django_security_analysis
commit-dfa28981ced2a6c005cc3c12fdc6b560080818a0,docs/releases/1.5.6.txt,CWE-352,d3db878e4beff057400dd780c24f3601a5d31f95,Moved CSRF docs out of contrib.,Added release note stubs for 1.5.6 and 1.4.11.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:42,django_security_analysis
commit-fb1e3435a4d7e0265f19a1a9f130c9485fb8dfe9,docs/releases/1.6.3.txt,CWE-352,d3db878e4beff057400dd780c24f3601a5d31f95,Moved CSRF docs out of contrib.,Fixed #21996 -- Used proper encoding for GeoIP content Thanks Florent Messa for the report.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:42,django_security_analysis
commit-fdd3cb4930b0e4386ac63b98f7e1b81670eedfaa,docs/topics/forms/index.txt,CWE-352,d3db878e4beff057400dd780c24f3601a5d31f95,Moved CSRF docs out of contrib.,Edited forms/index.txt changes from [9030] git-svn-id: http://code.djangoproject.com/svn/django/trunk@9040 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:43,django_security_analysis
commit-f5c9c2246e4b01f8731550c2a10241ca0e0148e9,docs/topics/security.txt,CWE-89,3776926cfe503f16c7195621da20c5b89bda70a2,Fixed #22493 - Added warnings to raw() and extra() docs about SQL injection,Improved warning about file uploads in docs; and added link from security overview page git-svn-id: http://code.djangoproject.com/svn/django/trunk@16521 bcc190cf-cafb-0310-a4f2-bffc1f526a37,:SQLNoSQLsinjection,2025-05-14 19:19:47,django_security_analysis
commit-e1e2726957ef2c74c5e7e3461d37c7603998c1af,django/contrib/flatpages/tests/test_csrf.py,CWE-352,dafec05548acdc3146d5fe850528f9e017681a07,Updated flatpages tests to override CSRF_FAILURE_VIEW.,Fixed #6932 -- Added a template tag that gives a list of available flatpages for a given user. Thanks to Dmitri Fedortchenko for the suggestion; and to Mnewman; faldridge and Simon Meers for their work on the patch. git-svn-id: http://code.djangoproject.com/svn/django/trunk@13654 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:53,django_security_analysis
commit-f9fba51164f36519e9b2f7917296ddd83b86ef47,django/views/decorators/csrf.py,CWE-352,63a9555d57069cee32de388821dbe580da1f97c0,Fixed #19436 -- Don't log warnings in ensure_csrf_cookie.,Fix a small docstring bug in the CSRF decorators. git-svn-id: http://code.djangoproject.com/svn/django/trunk@15026 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:56,django_security_analysis
commit-ff60c5f9de3e8690d1e86f3e9e3f7248a15397c8,django/core/serializers/python.py,CWE-502,278dad5b411e3e2ba8b428f7761882424353dea7,Fixed #19746 -- Allow deserialization of pk-less data,Fixed #1142 -- Added multiple database support. This monster of a patch is the result of Alex Gaynor's 2009 Google Summer of Code project. Congratulations to Alex for a job well done. Big thanks also go to:  * Justin Bronn for keeping GIS in line with the changes;  * Karen Tracey and Jani Tiainen for their help testing Oracle support  * Brett Hoerner; Jon Loyens; and Craig Kimmerer for their feedback.  * Malcolm Treddinick for his guidance during the GSoC submission process.  * Simon Willison for driving the original design process  * Cal Henderson for complaining about ponies he wanted. ... and everyone else too numerous to mention that helped to bring this feature into fruition. git-svn-id: http://code.djangoproject.com/svn/django/trunk@11952 bcc190cf-cafb-0310-a4f2-bffc1f526a37,deserialization,2025-05-14 19:19:57,django_security_analysis
commit-8cbcf1d3a60a0ba1a6f3ddde9317ac07b67c6c5d,django/middleware/csrf.py,CWE-352,720888a14699a80a6cd07d32514b9dcd5b1005fb,Fixed #15808 -- Added optional HttpOnly flag to the CSRF Cookie.,Fixed #14134 - ability to set cookie 'path' and 'secure' attributes of CSRF cookie Thanks to cfattarsi for the report and initial patch. git-svn-id: http://code.djangoproject.com/svn/django/trunk@16200 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:58,django_security_analysis
commit-ba50d3e05bc9a33aef495a5fbca239afe52237b3,docs/ref/contrib/csrf.txt,CWE-352,720888a14699a80a6cd07d32514b9dcd5b1005fb,Fixed #15808 -- Added optional HttpOnly flag to the CSRF Cookie.,Fixed #14633 - Organized settings reference docs and added a topical index. Thanks Gabriel Hurley for the original idea and adamv for the draft patch.,CSRFcross-ssitesrequestsforgery,2025-05-14 19:19:59,django_security_analysis
commit-d5a4f209c3889a76a23a19f3212ab2d7b5c62e1c,django/contrib/auth/tests/urls.py,CWE-640,9305c0e12d43c4df999c3301a1f0c742264a657e,Fixed a security issue related to password resets,"Fixed #18991 -- Allowed permission lookup by ""if in"" When looking permissions from PermWrapper it is now possible to use {% if ""someapp.someperm"" in perms %} instead of {% if perms.someapp.someperm %}.",,2025-05-14 19:20:01,django_security_analysis
commit-b6c5f8060d45a7cffe42928a4b67b6a4e2ba9264,docs/ref/contrib/csrf.txt,CWE-352,0447cc123118c4740ccc6e25914f0e30308da55e,Added versionadded info for ensure_csrf_cookie decorator,Fixed #15354 - provide method to ensure CSRF token is always available for AJAX requests Thanks to sayane for the report. git-svn-id: http://code.djangoproject.com/svn/django/trunk@16192 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:11,django_security_analysis
commit-c5c7791e91649a82346e720c86a7a1fa77eb4cd5,django/views/csrf.py,CWE-352,a3bb4df8956185c345e3a4c68df15ad7286788b0,Improved CSRF error message.,Improved HTML in CSRF debug template - <code> instead of <tt> git-svn-id: http://code.djangoproject.com/svn/django/trunk@11680 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:11,django_security_analysis
commit-dee7ef802d386951faef012c80a2a668b1926a78,MANIFEST.in,CWE-798,656360c24044e06c881baa648f2aad9d671c3bd8,Fixed #12202 -- Removed hardcoded password reset subject and added a subject_template_name parameter to the password_reset view. Thanks; Ramiro Morales; Claude Paroz and agabel.,Fixed #14245 -- Added some files and paths missing from the MANIFEST.in. Thanks to pmclanahan for the report. git-svn-id: http://code.djangoproject.com/svn/django/trunk@13719 bcc190cf-cafb-0310-a4f2-bffc1f526a37,hardcodedspasswordcredential,2025-05-14 19:20:16,django_security_analysis
commit-8cb128e57c08de54e8947a00f0d17fd02bff90df,django/contrib/auth/fixtures/authtestdata.json,CWE-798,656360c24044e06c881baa648f2aad9d671c3bd8,Fixed #12202 -- Removed hardcoded password reset subject and added a subject_template_name parameter to the password_reset view. Thanks; Ramiro Morales; Claude Paroz and agabel.,Refs #7521 -- Re-reverted [7716] (originally reverted in [7726]); now modified to use the new TestCase urlpattern framework. git-svn-id: http://code.djangoproject.com/svn/django/trunk@7808 bcc190cf-cafb-0310-a4f2-bffc1f526a37,hardcodedspasswordcredential,2025-05-14 19:20:16,django_security_analysis
commit-cc64fb5c4b4315a4ad66e21458e27ece57266847,django/contrib/auth/views.py,CWE-798,656360c24044e06c881baa648f2aad9d671c3bd8,Fixed #12202 -- Removed hardcoded password reset subject and added a subject_template_name parameter to the password_reset view. Thanks; Ramiro Morales; Claude Paroz and agabel.,Fixed #8342 -- Removed code from the admin that assumed that you can't login with an email address (nixed by r12634). Also refactored login code slightly to be DRY by using more of auth app's forms and views. git-svn-id: http://code.djangoproject.com/svn/django/trunk@14769 bcc190cf-cafb-0310-a4f2-bffc1f526a37,hardcodedspasswordcredential,2025-05-14 19:20:17,django_security_analysis
commit-cb060f0f340356ac71ed7db5399753edce278766,docs/releases/1.4.txt,CWE-352,06a2515145d8a5e6ee67da1f1849f157e23c6578,Fixed typo in release notes regarding CSRF with PUT/DELETE etc,Fixed #15258 - Ajax CSRF protection doesn't apply to PUT or DELETE requests Thanks to brodie for the report; and further input from tow21 This is a potentially backwards incompatible change - if you were doing PUT/DELETE requests and relying on the lack of protection; you will need to update your code; as noted in the releaste notes. git-svn-id: http://code.djangoproject.com/svn/django/trunk@16201 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:17,django_security_analysis
commit-f89f1c8acbf5f9d13d52855c49bef53360b1a6e2,django/core/handlers/base.py,CWE-352,a482cc0ba38febda15194dc121989eed3b6deec2,Fixed #16004 - csrf_protect does not send cookie if view returns TemplateResponse,Fixed #15083 -- Corrected the order of TemplateResponse middleware handling; ensuring that custom URLConfs are valid; and that ResponseMiddleware is invoked if the TemplateResponseMiddleware causes errors. Thanks to Sayane for the report. git-svn-id: http://code.djangoproject.com/svn/django/trunk@15226 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:19,django_security_analysis
commit-e8cff0b8f3920419b1031e16e2ee01851bd75e1d,django/views/csrf.py,CWE-352,71a7466dd67bd7cf88b4ce06535d8db0af6c7200,Fixed #16009 - typo in CSRF_FAILRE_TEMPLATE.,Added explanatory note on CSRF failure page for the case of a missing Referer header. This is intended to help power users who have disabled Referer headers; or installed add-ons which have done so; and to help web site administrators with debugging; since this problem will be browser specific and not a programming error. git-svn-id: http://code.djangoproject.com/svn/django/trunk@13680 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:20,django_security_analysis
commit-eadcbcb131f2231ffcfa5c83a41c12f70f0a9af5,docs/ref/contrib/csrf.txt,CWE-352,d3641d889b0cf6fde3ca7d08530ed55331a0607d,Clarified wording about use of 2 decorators in CSRF docs,Fixed #15518 - documented requires_csrf_token Thanks to vzima for a report that raised the issue. git-svn-id: http://code.djangoproject.com/svn/django/trunk@16187 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:21,django_security_analysis
commit-53b2c3867b5720b2586f5b63978ca2835e7dfb5d,docs/ref/contrib/csrf.txt,CWE-352,1d350a6c51848edcb24f12a1d1c1add5cd3642fe,Changed an example in CSRF docs to use new 'render' shortcut,Fixed #12130 - documented need for csrf_protect on views that don't accept POST Includes:      * proper documentation for csrf_protect  * notes in comments app.  * specific upgrade notes for comments app Thanks to carljm for report and debugging. git-svn-id: http://code.djangoproject.com/svn/django/trunk@11711 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:22,django_security_analysis
commit-ba53cd30d1427dbbd564b1791ef6348db93cf37f,tests/regressiontests/utils/tests.py,CWE-352,243d0bec1954ad7fab44625f1440a8ce580df26c,Fixed #15617 - CSRF referer checking too strict,Reorganized utils tests so it's all in separate modules. Thanks to Stephan Jaekel. git-svn-id: http://code.djangoproject.com/svn/django/trunk@13889 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:25,django_security_analysis
commit-208630aa4b6460cb31cd81be2cc83d4075f1f27b,docs/ref/contrib/csrf.txt,CWE-352,37343bac8a62aa31431e343f25f957a5392863fb,Removed example CSRF jQuery code from release notes; replacing with link to improved code in the CSRF docs,Fixed a security issue in the CSRF component.  Disclosure and new release forthcoming. git-svn-id: http://code.djangoproject.com/svn/django/trunk@15464 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:26,django_security_analysis
commit-f92a21daa78f4f1b34c0188d6d764a5992f94adc,django/middleware/csrf.py,CWE-352,e57e29616772fe628333fd71b3f4cf7c2c17eff8,Corrected logging call in CSRF middleware,Added proper code comments for the HTTPS CSRF protection. Refs #13489 which noticed a vague comment - thanks pmclanahan git-svn-id: http://code.djangoproject.com/svn/django/trunk@13405 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:26,django_security_analysis
commit-90ac02300e754bdc1a2658ef21737c28fc522148,django/views/decorators/csrf.py,CWE-352,f9fba51164f36519e9b2f7917296ddd83b86ef47,Fix a small docstring bug in the CSRF decorators.,Fixed #14565 - No csrf_token on 404 page. This solution doesn't have the negative side-effects of [14356]. git-svn-id: http://code.djangoproject.com/svn/django/trunk@14377 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:33,django_security_analysis
commit-e9d5ccb9ebc26a9712ea26d5c6c187b320bb1e20,docs/releases/index.txt,CWE-352,4d4d68a2cd8d93ce4bc4280b47051f294b280e73,Fixed #14225 -- Added a documentation marker (and a 1.2.2 release notes file; required to satisfy Sphinx) for the enable_csrf_checks flag on the test client. Thanks to public@grep.ro for the report.,Added 1.2 RC1 docs to the releases index. git-svn-id: http://code.djangoproject.com/svn/django/trunk@13125 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:35,django_security_analysis
commit-8ce4a1991a6a6b336a6ca6224c0d808d4b2964c7,docs/topics/testing.txt,CWE-352,4d4d68a2cd8d93ce4bc4280b47051f294b280e73,Fixed #14225 -- Added a documentation marker (and a 1.2.2 release notes file; required to satisfy Sphinx) for the enable_csrf_checks flag on the test client. Thanks to public@grep.ro for the report.,Fixed #14116 -- Added a flag to enable CSRF checks in the test client. Thanks to jon@licq.org for the suggestion. git-svn-id: http://code.djangoproject.com/svn/django/trunk@13640 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:35,django_security_analysis
commit-f93f056c32f614c9a130ec66824d94ec20526cdf,docs/topics/i18n/internationalization.txt,CWE-352,abd0e9628564015097ec0eac0b87fc6fab1d7b9f,Fixed #13013 -- Added missing {% csrf_token %} in example form.,Fixed #10260 - Refactored internationalization documentation. Thanks; Ramiro Morales. git-svn-id: http://code.djangoproject.com/svn/django/trunk@12440 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:39,django_security_analysis
commit-44f3080226888eb709cc6e027321647964ebe64e,django/contrib/admin/sites.py,CWE-352,d7abb33e70cf91c983b997cbeafbea2cd0371762,Fixed #12933 - AdminSite.admin_view disables @csrf_view_exempt,"Fixed #10505: added support for bulk admin actions; including a globally-available ""delete selected"" action. See the documentation for details. This work started life as Brian Beck's ""django-batchadmin."" It was rewritten for inclusion in Django by Alex Gaynor; Jannis Leidel (jezdez); and Martin Mahner (bartTC). Thanks; guys! git-svn-id: http://code.djangoproject.com/svn/django/trunk@10121 bcc190cf-cafb-0310-a4f2-bffc1f526a37",CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:39,django_security_analysis
commit-9ec9936413a906e71ce79d1ce7d26df865891a95,docs/ref/contrib/csrf.txt,CWE-352,be57541af11b7144de700978b9ea3b50f20ffd02,Fixed #12839 - noted change of import path for csrf_exempt decorator,Updated csrf docs with 'versionadded' info git-svn-id: http://code.djangoproject.com/svn/django/trunk@9555 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:40,django_security_analysis
commit-fb564015960298ab820d7fd1c7edd3e96a8a95f0,docs/index.txt,CWE-352,04f869a80cb41a3e8c6d555cccb305fe7602753b,Fixed #12198 - CSRF changes not clearly noted in docs.,Fixed #11493 -- Added an internal document listing the APIs that have been formally deprecated. Thanks to Alex Gaynor for the draft text. git-svn-id: http://code.djangoproject.com/svn/django/trunk@11277 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:42,django_security_analysis
commit-e992e57d3e66708015899efd21bb0174377baeed,django/contrib/admin/sites.py,CWE-352,5a0aab41ee4de9e465164d3fbba9336c1fefa5ec,Allow CsrfResponseMiddleware to be used if templates cannot be updated.,Fixed #11416 -- Restored use of the never_cache decorator on admin views. Thanks to Ramiro Morales and Michael Newmann for their work on the patch. git-svn-id: http://code.djangoproject.com/svn/django/trunk@11229 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:42,django_security_analysis
commit-8e70cef9b67433edd70935dcc30c621d1e7fc0a0,django/views/csrf.py,CWE-352,5df19aa99e0ae5753be19d9ead887c8ad5ee54c8,Small improvement to CSRF failure template.,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default. This is a large change to CSRF protection for Django.  It includes:  * removing the dependency on the session framework.  * deprecating CsrfResponseMiddleware; and replacing with a core template tag.  * turning on CSRF protection by default by adding CsrfViewMiddleware to    the default value of MIDDLEWARE_CLASSES.  * protecting all contrib apps (whatever is in settings.py)    using a decorator. For existing users of the CSRF functionality; it should be a seamless update; but please note that it includes DEPRECATION of features in Django 1.1; and there are upgrade steps which are detailed in the docs. Many thanks to 'Glenn' and 'bthomas'; who did a lot of the thinking and work on the patch; and to lots of other people including Simon Willison and Russell Keith-Magee who refined the ideas. Details of the rationale for these changes is found here: http://code.djangoproject.com/wiki/CsrfProtection As of this commit; the CSRF code is mainly in 'contrib'.  The code will be moved to core in a separate commit; to make the changeset as readable as possible. git-svn-id: http://code.djangoproject.com/svn/django/trunk@11660 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:43,django_security_analysis
commit-e9b90d98998da48d4ac18aabe135fa4200547be5,docs/ref/contrib/csrf.txt,CWE-352,64b4ab18b47354fbd28fa93a1bc770728c596aac,Use decorator syntax for csrf_exempt example.,Edited ref/contrib/csrf.txt changes from [9554] git-svn-id: http://code.djangoproject.com/svn/django/trunk@9593 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:43,django_security_analysis
commit-f83af07ce39573786919b1e7980f3f4e07528531,django/contrib/admin/options.py,CWE-352,7230a995ce81a7b8dd093bd03cc5ebd34106ee80,Moved contrib.csrf.* to core code.,Fixed #7510: the ModelAdmin now uses `self.queryset` instead of the default manager. Thanks; Alex Gaynor. git-svn-id: http://code.djangoproject.com/svn/django/trunk@10314 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:44,django_security_analysis
commit-ec8848dad50a4687a8bc3ba7270bf08dbf5ac25a,django/contrib/admin/sites.py,CWE-352,7230a995ce81a7b8dd093bd03cc5ebd34106ee80,Moved contrib.csrf.* to core code.,Fixed #8589 -- Fixed the URL for the logout link on the app_index page in admin. git-svn-id: http://code.djangoproject.com/svn/django/trunk@8617 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:45,django_security_analysis
commit-f908eded21919cfbbbd1009c63f1cffa316ea2b2,django/contrib/comments/views/comments.py,CWE-352,7230a995ce81a7b8dd093bd03cc5ebd34106ee80,Moved contrib.csrf.* to core code.,Fixed #9268 -- Ensured that the next argument is passed on when previewing comments. Thanks to leanmeandonothingmachine for the patch. git-svn-id: http://code.djangoproject.com/svn/django/trunk@11019 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:45,django_security_analysis
commit-ff486b9fba1eaffdf204c4b0ee8babf0d3627725,django/template/context.py,CWE-352,7230a995ce81a7b8dd093bd03cc5ebd34106ee80,Moved contrib.csrf.* to core code.,Fixed #3912 - Added simple type checking to template.Context.update() to help debugging broken context processors.  Thanks Jeremy Dunck git-svn-id: http://code.djangoproject.com/svn/django/trunk@8181 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:47,django_security_analysis
commit-ff420b43647dd7f149f000efd2c7eb077f6ba5cf,docs/ref/settings.txt,CWE-352,7230a995ce81a7b8dd093bd03cc5ebd34106ee80,Moved contrib.csrf.* to core code.,Fixed #8454: added a FILE_UPLOAD_PERMISSIONS setting to control the permissoin of files uploaded by the built-in file storage system. Thanks; dcwatson. git-svn-id: http://code.djangoproject.com/svn/django/trunk@8640 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:47,django_security_analysis
commit-3ddf250f91dd3fd03aba235fca3294fdd651bea5,AUTHORS,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,Fixed #830 -- Added an AUTHORS file; which is inevitably incomplete git-svn-id: http://code.djangoproject.com/svn/django/trunk@1428 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:48,django_security_analysis
commit-a19ed8aea395e8e07164ff7d85bd7dff2f24edca,django/contrib/admin/templates/admin/auth/user/change_password.html,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,Merged the newforms-admin branch into trunk. This is a backward incompatible change. The admin contrib app has been refactored. The newforms module has several improvements including FormSets and Media definitions. git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:49,django_security_analysis
commit-f7d01c49e95a9ed25dd75e6b3d4c063dff58e23a,django/contrib/admin/templates/admin/change_form.html,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,Fixed #10651: fixed a javascript error on the admin user add form. Thanks; seanl. git-svn-id: http://code.djangoproject.com/svn/django/trunk@10714 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:49,django_security_analysis
commit-bb15cee58a43eeb0d060f8a31f9078b3406f195a,django/contrib/admin/templates/admin/change_list.html,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,"Made a bunch of improvements to admin actions. Be warned: this includes one minor but BACKWARDS-INCOMPATIBLE change. These changes are:     * BACKWARDS-INCOMPATIBLE CHANGE: action functions and action methods now share the same signature: `(modeladmin; request; queryset)`. Actions defined as methods stay the same; but if you've defined an action as a standalone function you'll now need to add that first `modeladmin` argument.     * The delete selected action is now a standalone function registered site-wide; this makes disabling it easy.     * Fixed #10596: there are now official; documented `AdminSite` APIs for dealing with actions; including a method to disable global actions. You can still re-enable globally-disabled actions on a case-by-case basis.     * Fixed #10595: you can now disable actions for a particular `ModelAdmin` by setting `actions` to `None`.     * Fixed #10734: actions are now sorted (by name).     * Fixed #10618: the action is now taken from the form whose ""submit"" button you clicked; not arbitrarily the last form on the page.     * All of the above is documented and tested. git-svn-id: http://code.djangoproject.com/svn/django/trunk@10408 bcc190cf-cafb-0310-a4f2-bffc1f526a37",CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:50,django_security_analysis
commit-eaf1f7d6e3a0cb700895e9986a246c03243c65b7,django/contrib/admin/templates/admin/delete_selected_confirmation.html,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,Fixed #11534: Improved wording for admin delete confirmation.  Thanks hanksims and others who reported this. git-svn-id: http://code.djangoproject.com/svn/django/trunk@11447 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:50,django_security_analysis
commit-52f5c949e9b50ae3b0034d67f2d385219588aaf1,django/contrib/admin/templates/admin/login.html,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,Added default Django admin templates git-svn-id: http://code.djangoproject.com/svn/django/trunk@92 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:51,django_security_analysis
commit-dd842ad34d1199093b7498514cd274279eb1e1ca,django/contrib/admin/templates/admin/template_validator.html,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,Refs #7742 -- Changed the `django.contrib.admin.views.template.template_validator` view to use newforms instead of oldforms. git-svn-id: http://code.djangoproject.com/svn/django/trunk@8294 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:51,django_security_analysis
commit-fcd837cd0f9b2c706bc49af509628778d442bb3f,django/contrib/admin/templates/registration/password_reset_confirm.html,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password. git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:52,django_security_analysis
commit-8ef422d070ecd19ab285282430b174513736aa9d,django/contrib/admin/templates/registration/password_reset_form.html,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,Added password reset templates to admin_templates git-svn-id: http://code.djangoproject.com/svn/django/trunk@294 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:52,django_security_analysis
commit-cba91997a24f3cb154c7c51029c6dd91471f8800,django/contrib/comments/templates/comments/flag.html,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,Refactored Django's comment system. Much of this work was done by Thejaswi Puthraya as part of Google's Summer of Code project; much thanks to him for the work; and to them for the program. This is a backwards-incompatible change; see the upgrading guide in docs/ref/contrib/comments/upgrade.txt for instructions if you were using the old comments system. git-svn-id: http://code.djangoproject.com/svn/django/trunk@8557 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:53,django_security_analysis
commit-f8adf99cdb449924b2ed2ddac33744da7eeb1efc,django/contrib/comments/templates/comments/preview.html,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,"Fixed #9268: pass the ""next"" param through in the comment preview/post view. Also updated the docs to make this a bit clearer. git-svn-id: http://code.djangoproject.com/svn/django/trunk@10418 bcc190cf-cafb-0310-a4f2-bffc1f526a37",CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:53,django_security_analysis
commit-61d6249c2bf6c57684a3b77c6cec8601e7a26b44,django/contrib/formtools/templates/formtools/form.html,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,Fixed #3758 -- Changed FormPreview template to use 'label' instead of 'verbose_name'. Also renamed 'Submit' button to 'Preview'. Thanks for the patch; erickt@dslextreme.com git-svn-id: http://code.djangoproject.com/svn/django/trunk@4757 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:54,django_security_analysis
commit-311fadeee016177d6f85d3988ad4bb9dc675349e,django/contrib/formtools/templates/formtools/preview.html,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,Added django.contrib.formtools; including the forced-preview application git-svn-id: http://code.djangoproject.com/svn/django/trunk@4164 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:54,django_security_analysis
commit-9b52f35f35d67d6b4db2206d34320545dc4dd17d,django/contrib/formtools/wizard.py,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,"Added ""svn:eol-style native"" to every text file in the tree (*.txt; *.html; *.py; *.xml and AUTHORS; etc). Added ""svn:ignore *.pyc"" to some directories in tests/regressiontests/ that were previously missing it. Fixed #6545; #6801. git-svn-id: http://code.djangoproject.com/svn/django/trunk@7294 bcc190cf-cafb-0310-a4f2-bffc1f526a37",CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:55,django_security_analysis
commit-97cb07c3a10ff0e584a260a7ee1001614691eb1d,docs/ref/contrib/formtools/form-wizard.txt,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/. git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:55,django_security_analysis
commit-ff3e1a7d40c783e9df3d38f327548d3ad2edcfab,docs/topics/auth.txt,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,Fixed #9718 -- Removed a reference to oldforms FormWrapper object in the user authentication docs. git-svn-id: http://code.djangoproject.com/svn/django/trunk@9595 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:56,django_security_analysis
commit-f76cb41251818f9e30c05b672645667776bcc92e,docs/topics/http/middleware.txt,CWE-352,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,Fixed #9977 - CsrfMiddleware gets template tag added; session dependency removed; and turned on by default.,A few minor wording; whitespace; punctuation; and link changes for the middleware documentation. git-svn-id: http://code.djangoproject.com/svn/django/trunk@9833 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:56,django_security_analysis
commit-c85c8f88914cdba05813cc5768377841340bd09d,django/contrib/csrf/middleware.py,CWE-352,71233bcdf3c90098531901da4e380165ed0059d4,Fixed #10884 - more lenient regexp for matching forms in CSRF post-processing,Fixed #7919 -- md5 and sha modules are deprecated since Python 2.5; use hashlib module when available.  Patch from Karen Tracey. git-svn-id: http://code.djangoproject.com/svn/django/trunk@8193 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:57,django_security_analysis
commit-be25b661b1b2179273b886ec45d4b449a9997a8d,django/conf/project_template/settings.py,CWE-352,2d287247308ea5e40214f4564b91b633959902a9,Added CSRF middleware to default settings and updated docs.,Fixed #1998 -- Changed double quotes to single quotes git-svn-id: http://code.djangoproject.com/svn/django/trunk@2980 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:20:57,django_security_analysis
commit-cf37e4624a967f936ecbb5a4eefc9d38ed9d7892,django/db/models/sql/expressions.py,CWE-89,f0a7470e405cb237e8b5676fd10f1ea482787baf,Fixed #10160 -- Modified evaluation of F() expressions to protect against potential SQL injection attacks. Thanks to Ian Kelly for the suggestion and patch.,Fixed #7210 -- Added F() expressions to query language. See the documentation for details on usage. Many thanks to:     * Nicolas Lara; who worked on this feature during the 2008 Google Summer of Code.     * Alex Gaynor for his help debugging and fixing a number of issues.     * Malcolm Tredinnick for his invaluable review notes. git-svn-id: http://code.djangoproject.com/svn/django/trunk@9792 bcc190cf-cafb-0310-a4f2-bffc1f526a37,:SQLNoSQLsinjection,2025-05-14 19:20:58,django_security_analysis
commit-f2582eb972303978a5fa115825a646a230624116,django/core/serializers/base.py,CWE-502,12716794dbcf2e1bf7a07bd18dfc0ae24be4e6f8,Fixed #7350; #7202 -- Fixed serialization for multi-model inheritance; which had multiple problems:  * Serializers were including all superclass fields in their output. Now only local fields are included.  * Implicit OneToOne primary keys were not correctly added to the metamodel; so they were always marked to be serialized; even though they were primary  * Model saving was too aggressive about creating new parent class instances during deserialization. Raw save on a model now skips saving of the parent class.,Fixes #2333 -- Added test fixtures framework. git-svn-id: http://code.djangoproject.com/svn/django/trunk@4659 bcc190cf-cafb-0310-a4f2-bffc1f526a37,deserialization,2025-05-14 19:21:07,django_security_analysis
commit-f69cf70ed813a8cd7e1f963a14ae39103e8d5265,django/contrib/admin/views/decorators.py,CWE-79,41635d2176f7a950498b020f335232ad9f734279,Removed mark_safe from the saved request path on the admin login form. This prevents a potential XSS attack. Formal announcement will be forthcoming.,MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions. git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37,XSScross-ssitesscripting,2025-05-14 19:21:12,django_security_analysis
commit-f12e3243326a2b6b0d09206b373b34e028eab25c,django/utils/cache.py,CWE-524,b5224693222a96a42e446e737f40fe9c8a48cf07,Fixed #4071 -- Fixed bug in cache_page decorator; which was setting the wrong header. Thanks; Ionut Ciocirlan (xlotlu) and permon,Fixed #612 - added cache control headers (thanks; hugo) git-svn-id: http://code.djangoproject.com/svn/django/trunk@1020 bcc190cf-cafb-0310-a4f2-bffc1f526a37,,2025-05-14 19:21:19,django_security_analysis
commit-ff46f0fbcf601be73a7f0866986aa96abac79e8e,AUTHORS,CWE-362,6d31e431c3bb09cf386c0fbef169a5307e689775,Fixed #4909 -- Fixed a race condition with middleware initialisation in multi-threaded setups. Thanks; colin@owlfish.com.,Fixed #3394 -- Made min_num_in_admin be respected on new object creation. Patch from torne-django@wolfpuppy.org.uk. git-svn-id: http://code.djangoproject.com/svn/django/trunk@4500 bcc190cf-cafb-0310-a4f2-bffc1f526a37,racescondition,2025-05-14 19:21:23,django_security_analysis
commit-c9032ab07f3694f3ae7da9b0017b764248ce28c9,django/core/serializers/python.py,CWE-502,febe05b9eff84ab1d1ec2af61f6cd8337422731a,Fixed #2921: deserialization no longer failes on NULL primary keys.  Thanks; mir@noris.de.,Added a JSON serializer; a few more tests; and a couple more lines of docs. git-svn-id: http://code.djangoproject.com/svn/django/trunk@3237 bcc190cf-cafb-0310-a4f2-bffc1f526a37,deserialization,2025-05-14 19:21:33,django_security_analysis
commit-8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,django/contrib/csrf/middleware.py,CWE-352,c26553c4f91a2a0ac1ca8d173888c414fc9cecda,Fixed #1827 - added 'id' attribute to generated CSRF hidden field.  Good call; Ian Holsman.,Added CsrfMiddleware to contrib; and documentation. git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37,CSRFcross-ssitesrequestsforgery,2025-05-14 19:21:51,django_security_analysis
commit-f71f8546283dbdf698c7578f8f9154045c84f9e7,django/core/template/defaulttags.py,CWE-697,ac91a22ec2d98675d5700acd602d68fd04b3fd86,Fixed bug in [1443] -- a decorator call was left in,Fixed #626 -- Moved template modules to django.core.template package. django.core.template_loader is deprecated; in favor of django.core.template.loader. git-svn-id: http://code.djangoproject.com/svn/django/trunk@867 bcc190cf-cafb-0310-a4f2-bffc1f526a37,,2025-05-14 19:22:23,django_security_analysis
commit-d228bdfb9e29cea0a2d6fc27bec3604068dc0bd1,shell/browser/ui/cocoa/electron_inspectable_web_contents_view.mm,CWE-362,c8a3a00017d5eaca4e017a22d63acaebeb1e24d4,fix: race condition where webContents can be nullptr during re-focus and a multi-window close sequence (#33063),gfx::NativeView is no longer NSView on mac https://chromium-review.googlesource.com/c/1270343,racescondition,2025-05-14 16:52:58,electron_security_analysis
commit-c9fbde321c5595430fa869774f4bb942470e9221,atom/browser/api/atom_api_desktop_capturer.cc,CWE-362,77a49460699fb4683fb72cd27fa6bb1b02239d89,refactor: rewire the desktop capturer API to remove race conditions (#18029),Implement desktop capture API on OS X.,racescondition,2025-05-14 16:53:01,electron_security_analysis
commit-1f458eb17701ee58845e03be639dd9420a697f76,spec/api-debugger-spec.js,CWE-362,28b150f6dc71fd8229e9e26d850a5bbd3281d62b,test: fix race condition in debugger spec (#17091),feat: promisify debugger.sendCommand() (#16861) * remove duplicate entry for desktopCapturer.getSources * feat: promisify debugger.sendCommand,racescondition,2025-05-14 16:53:02,electron_security_analysis
commit-ff5081816f77549ab35f1fd64829a016752e4318,spec/api-web-contents-spec.js,CWE-362,932ffdc1e16e69bebbfb715a88567cf14aa4c7a4,test: fix a possible race condition in sendInputEvent test (#15530),Remove unneeded done call,racescondition,2025-05-14 16:53:04,electron_security_analysis
commit-ff1b7d18f6499b73803ccee69037fb3b4b8bebf4,lib/renderer/api/remote.js,CWE-502,b499d57cfdfd3ee52312d2a8cbe3373bb4d77ceb,refactor: use error-utils for remote exception serialization / deserialization (#14788),Cleanup the code determining value's type,deserialization,2025-05-14 16:53:05,electron_security_analysis
commit-fa2bfd3ff55dd1ad39e0669048a8dfa58285dabf,lib/browser/api/web-contents.js,CWE-362,ad9e64d086d8a5d12a046b6a38ed54d371068ee2,fix: remove race condition for executeJavaScript (#13691),Add Math.ceil to pageSize.height and pageSize.width to printToPDF() options to prevent error on display.,racescondition,2025-05-14 16:53:06,electron_security_analysis
commit-f974a6bda9a32487bb021cb6ec221f5100a770c1,atom/browser/api/atom_api_web_contents.h,CWE-362,0ac883c6d4d268d300f2ceba13946ce70e17e138,Remove the race condition between new process creation and context release (#12342),browser: make destruction of webContents async,racescondition,2025-05-14 16:53:07,electron_security_analysis
commit-fbb8e61958c8950455883e2a4ae12088ba030a12,atom/common/options_switches.h,CWE-362,0ac883c6d4d268d300f2ceba13946ce70e17e138,Remove the race condition between new process creation and context release (#12342),"Replace ""Url"" in API names with ""URL""",racescondition,2025-05-14 16:53:08,electron_security_analysis
commit-6b5bd3b6ceb9457b091171bbde40700be71c66dd,lib/browser/rpc-server.js,CWE-362,0ac883c6d4d268d300f2ceba13946ce70e17e138,Remove the race condition between new process creation and context release (#12342),"Fix how rpc-server releases references after page reload In addition to listening for ""render-view-deleted""; listen for ""ELECTRON_BROWSER_CONTEXT_RELEASE"" synchronous message; which is sent by the remote module when the page is about to be navigated. This is required to allow child windows running in the same renderer to correctly manage remote object references; since `render-view-deleted` is only called when the renderer exits. Close #9387",racescondition,2025-05-14 16:53:08,electron_security_analysis
commit-96d53d279ec79bcd86e53b7f1aeb840ca32774c5,atom/browser/net/js_asker.cc,CWE-362,b2cef31bc00a0d7278cb6a1e2ee74f85da1e8c38,"Revert ""Fix race condition when calling JsAsker::BeforeStartInUI""",Initial implementation of new protocol API,racescondition,2025-05-14 16:53:12,electron_security_analysis
commit-958658513c0b33aa90694ec2797c995526e5555a,atom/browser/ui/win/taskbar_host.cc,CWE-120,4013b652ff1e0cab465b2319b6521be799a825f4,:checkered_flag::bug: Buffer overflows in tooltips,Refactor code in taskbarHost,buffersoverflow,2025-05-14 16:53:14,electron_security_analysis
commit-de016e72a57fb50622ace268f80310459406ae28,script/lib/config.py,CWE-362,8a6ba7c49ff5a897d736dd20923d12d7ac327973,Update libchromiumcontent for race condition fix,win: Build with the arch chosen by user,racescondition,2025-05-14 16:53:17,electron_security_analysis
commit-709563c09047924b79d714402b86ab8cf772bc5e,browser/net/atom_url_request_context_getter.cc,CWE-362,3576c6d2ffa5622d8d596caedd1805582966190a,Fix race condition when initializing request context getter.,Set proxy service at the right place.,racescondition,2025-05-14 16:53:17,electron_security_analysis
commit-f95dbc28fdb483dbd45b436386cf0db77322eb43,package.json,CWE-22,82de4de5ab92e8237d713285104e4b8452927352,examples: fix path traversal in downloads example,build: should@13.2.3,pathstraversal,2025-05-14 19:39:46,express_security_analysis
commit-ff0384e610b6fa30f97ddaa6f30c19d14cad459d,package.json,CWE-362,58f2057ba7771b999816b739c7f20598abde8393,revert cookie signature change causing session race conditions,update cookie module,racescondition,2025-05-14 19:39:50,express_security_analysis
commit-ade490514dd6d83adc7610f69f9c4cd68df47110,tests/flask_tests.py,CWE-79,9f6bc93e4de36fc209eb1203845e9505df1ca379,Fixed XSS problem by escaping all slashes in JSON.,Fixed a security problem caused by changed simplejson semantics. Notice: this was never in a release version of Flask.,XSScross-ssitesscripting,2025-05-14 19:12:45,flask_security_analysis
commit-feef6333b1bfbf35219f1fb465a474dec8c8d2ee,REFERENCES.md,CWE-79,7786bda494c3ea15fe4fa42293bd8b59eca3794e,Fix a typo in Restful XSS code fix challenge (#2161),Add OWASP Stammtisch Karlsruhe meeting [ci skip],XSScross-ssitesscripting,2025-05-14 07:49:45,juice_shop_security_analysis
commit-5f1746fe9e6a68bd60bdcdf8509d22e9ebf9804f,data/static/codefixes/restfulXssChallenge.info.yml,CWE-79,7786bda494c3ea15fe4fa42293bd8b59eca3794e,Fix a typo in Restful XSS code fix challenge (#2161),"Add info file for ""API-only XSS"" coding challenge (also adds neutral lines)",XSScross-ssitesscripting,2025-05-14 07:49:45,juice_shop_security_analysis
commit-ed540c3c9dcf28786808919fe43705c1084daad9,data/static/i18n/en.json,CWE-79,7786bda494c3ea15fe4fa42293bd8b59eca3794e,Fix a typo in Restful XSS code fix challenge (#2161),Update URL in product description,XSScross-ssitesscripting,2025-05-14 07:49:46,juice_shop_security_analysis
commit-d34780d1400a0db3b80e31897288954c7a400a17,Dockerfile,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,Update Dockerfile,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:47,juice_shop_security_analysis
commit-fc76f22b951538da0e550ef511e94fa58a4a06aa,data/static/i18n/ar_SA.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Arabic) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:48,juice_shop_security_analysis
commit-f9be4400e0791d0efe0b8b8ba3235dd7b1a5a75d,data/static/i18n/az_AZ.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Azerbaijani) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:48,juice_shop_security_analysis
commit-ffcff97791549efe5499ec8f6424b4bf55a024a9,data/static/i18n/bg_BG.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Bulgarian) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:48,juice_shop_security_analysis
commit-fe953b0c291e59ec551a51db053eb71fdfd1dc3c,data/static/i18n/ca_ES.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Catalan) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:49,juice_shop_security_analysis
commit-fd35e4a829141fd750a9d7d3731508c6e236b6e3,data/static/i18n/cs_CZ.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Czech) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:49,juice_shop_security_analysis
commit-febc8c0d6756861df96e9922ee798646f94ad389,data/static/i18n/da_DK.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Danish) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:49,juice_shop_security_analysis
commit-fee8e2da3d61102bcf108adbe56e0fbf0723f0a9,data/static/i18n/de_CH.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (German; Switzerland) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:49,juice_shop_security_analysis
commit-f689d3e5c3787518fe6772d3c156a01e10274492,data/static/i18n/de_DE.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (German) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:50,juice_shop_security_analysis
commit-f2fcb7b1c9d6f543aa5a6d44105d4d4ac4844b02,data/static/i18n/el_GR.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Greek) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:50,juice_shop_security_analysis
commit-f5831edc63494941f6ea63a7170a25a44e9e41f7,data/static/i18n/en.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,Add i18n strings for geo stalking challenges (resolves #1347),CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:50,juice_shop_security_analysis
commit-f8561417443fbafa557d2942527f6c08994d6002,data/static/i18n/es_ES.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Spanish) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:51,juice_shop_security_analysis
commit-ebfb8081351296968a479ab01eb629910d089b93,data/static/i18n/et_EE.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Estonian) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:51,juice_shop_security_analysis
commit-fc871ce6102f4ca22e84284f869a3bfee280a177,data/static/i18n/fi_FI.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Finnish) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:51,juice_shop_security_analysis
commit-fbb5babf40257bdc95583bcb879f129c25e098a9,data/static/i18n/fr_FR.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (French) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:51,juice_shop_security_analysis
commit-fd680d17d2c47d774dc89ebaf3ba249c07996769,data/static/i18n/he_IL.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Hebrew) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:52,juice_shop_security_analysis
commit-f56689c550eaeb0c568cbdb3756298bc535d0e2d,data/static/i18n/hi_IN.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Hindi) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:52,juice_shop_security_analysis
commit-fbd3add766cc5173fbc167468fc1af9eafdbb1e5,data/static/i18n/hu_HU.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Hungarian) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:52,juice_shop_security_analysis
commit-ff97feba28e21da2872aa719a64f96e469397c5f,data/static/i18n/id_ID.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Indonesian) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:53,juice_shop_security_analysis
commit-f76196663faa844f43c62e12a1939d665cb8e1b0,data/static/i18n/it_IT.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Italian) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:53,juice_shop_security_analysis
commit-fa0824ce14b27160feb2f957edbfd74aa6b00443,data/static/i18n/ja_JP.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Japanese) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:53,juice_shop_security_analysis
commit-d5cbabf9aad1fc4d13771b8053c09da58fc03931,data/static/i18n/ka_GE.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Georgian) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:53,juice_shop_security_analysis
commit-f888bff7c8af9015d0db492dde78656859d2722d,data/static/i18n/ko_KR.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Korean) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:54,juice_shop_security_analysis
commit-f90a34da5310ba669ea368cc6e1de30037d5a56d,data/static/i18n/lv_LV.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Latvian) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:54,juice_shop_security_analysis
commit-ff0a51d05f1414ca89118e74f76a91130722b195,data/static/i18n/my_MM.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Burmese) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:54,juice_shop_security_analysis
commit-f458ce461c130c3d9dab2d71e1678ba7d7849d70,data/static/i18n/nl_NL.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Dutch) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:55,juice_shop_security_analysis
commit-facff44c27d7016bc31c5625b43869462b905878,data/static/i18n/no_NO.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Norwegian) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:55,juice_shop_security_analysis
commit-ff941cee21f503bccbcd1c528b2a8439efafde53,data/static/i18n/pl_PL.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Polish) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:55,juice_shop_security_analysis
commit-fd7caf1397e143928d0ea8d667eb85e3298eac98,data/static/i18n/pt_BR.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Portuguese; Brazilian) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:55,juice_shop_security_analysis
commit-fbcae82d7212f4c493d1f3ecbde456b41c0e869d,data/static/i18n/pt_PT.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Portuguese) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:56,juice_shop_security_analysis
commit-fa8d90adf6aaddd899fe985657c3cb50b439ea74,data/static/i18n/ro_RO.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Romanian) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:56,juice_shop_security_analysis
commit-ece8b33f60eb9537c0a5f00aa7c1a953266e1c0f,data/static/i18n/ru_RU.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Russian) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:56,juice_shop_security_analysis
commit-f5d0e8f8228fa3d3847ab3621a20c9f878b18540,data/static/i18n/si_LK.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Sinhala) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:57,juice_shop_security_analysis
commit-f53c3a0eb1905719fee0050f4ba035892f4cdceb,data/static/i18n/sv_SE.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Swedish) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:57,juice_shop_security_analysis
commit-fa7cf562affcddfbabc3c01ff92bd01c41e4647e,data/static/i18n/th_TH.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Thai) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:57,juice_shop_security_analysis
commit-ffc115eb927336a4a4e627ebc186ee8219c341cb,data/static/i18n/tlh_AA.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Klingon) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:58,juice_shop_security_analysis
commit-e71e26ea6cc8a43095d70303dc519f19cd52d269,data/static/i18n/tr_TR.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Turkish) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:58,juice_shop_security_analysis
commit-c3dd1fd74d3806051cd175c725f86b4b7171dfdd,data/static/i18n/uk_UA.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Ukrainian) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:58,juice_shop_security_analysis
commit-fc1010259a896151fe8da6d7ddd60e8b0096002b,data/static/i18n/zh_CN.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Chinese Simplified) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:58,juice_shop_security_analysis
commit-ff16b65031e9f8e269a310c7ac15e97ce9d7c150,data/static/i18n/zh_HK.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Chinese Traditional; Hong Kong) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:59,juice_shop_security_analysis
commit-f7a973bf1671d1c8bd7eab075cf3025ecc7fe29d,data/static/i18n/zh_TW.json,CWE-352,5bf818c0d08503b46f77bd14c8205de064075fe1,Extend CSRF challenge hint with browser recommendation,New translations en.json (Chinese Traditional) [ci skip] Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:49:59,juice_shop_security_analysis
commit-dc7d1d654e2921ad4ab1d9722675d7df6cf48a7c,Dockerfile,SECURITY-FIX,87a6365c283e4176c32e654bd9a69f7e9c1a5959,Bump to v14.0.1 for hotfix,Fix ownership of log folder,,2025-05-14 07:50:00,juice_shop_security_analysis
commit-9546e61c93f6907209d0e593c1693ac784043b06,Dockerfile.arm,SECURITY-FIX,87a6365c283e4176c32e654bd9a69f7e9c1a5959,Bump to v14.0.1 for hotfix,Split Docker image build jobs for AMD and ARM (fixes #1750),,2025-05-14 07:50:00,juice_shop_security_analysis
commit-fff9d258398bd4f5667e3249873ed570eb79d84d,frontend/package.json,SECURITY-FIX,87a6365c283e4176c32e654bd9a69f7e9c1a5959,Bump to v14.0.1 for hotfix,Pin only Angular compiler CLI module,,2025-05-14 07:50:00,juice_shop_security_analysis
commit-fdba9c93cacd24dd44df9ae7b93effe657d58b24,data/static/challenges.yml,CWE-79,d6ccfbf04ab729107b2669ee47744482b266535f,Encode quotation marks in DOM XSS payload,"Add ""Tutorial"" tag to all challenges with a Hacking Instructor script",XSScross-ssitesscripting,2025-05-14 07:50:02,juice_shop_security_analysis
commit-f7eb2379104396be6006c4415e997a0106effc17,package.json,SECURITY-FIX,4b8d500419b53bb7c817ad6087995e6622d47223,Fix bug causing snippets response to grow on every api call,Auto-sort package.json entries,,2025-05-14 07:50:03,juice_shop_security_analysis
commit-a5bc75130b02ce26fefdc9fc32662e02bc90ad62,data/static/codefixes/noSqlReviewsChallenge_2.ts,CWE-89,3d1752e3716e29c7a25c31d8cd311f1870f51843,Add bad fixes to the NoSQL Injection Challenge,"Add code fixes for ""NoSql Manipulation"" challenge",:SQLNoSQLsinjection,2025-05-14 07:50:03,juice_shop_security_analysis
commit-d5991900a6932602678371d84cce058d79f33581,frontend/src/app/search-result/search-result.component.ts,CWE-79,6ceab609d688933645f0d7aa447809b86215bd3e,"Add code fixes for ""API-only XSS"" challenge",Merge Develop in Facelift + Some minor style changes,XSScross-ssitesscripting,2025-05-14 07:50:04,juice_shop_security_analysis
commit-fe9a15c4956c142c7e7ce21c6db353a63fe125b0,protractor.conf.js,CWE-352,4f8966b23cbe3aa914e7b0d7ec0f6d295cd81a9f,re-enable e2e test for CSRF challenge,Go to main screen before score board before e2e tests,CSRFcross-ssitesrequestsforgery,2025-05-14 07:50:04,juice_shop_security_analysis
commit-f10fbf4ee0f439d8d850de9adf1d10dd6fc331ea,frontend/src/app/track-result/track-result.component.ts,CWE-79,4f8c349182210eb4192def9f8b2a33084f525359,Add tests for XSS vuln and tracking status calculation,Apply all possible automatic fixes to ESLint errors,XSScross-ssitesscripting,2025-05-14 07:50:05,juice_shop_security_analysis
commit-f45ba9372d2db5ac6b6733df0763dc1c2010b35b,frontend/src/hacking-instructor/challenges/bonusPayload.ts,CWE-79,ddc96094a9828523920236d569334d80090df863,HTML-encode underscores in XSS payload,"Add tutorial for ""Bonus Payload"" challenge",XSScross-ssitesscripting,2025-05-14 07:50:06,juice_shop_security_analysis
commit-ee8c41783b6d671cc6504b263c42c643e552aae2,frontend/src/app/Services/socket-io.service.ts,CWE-79,1cba5476a84ae313b226078ae99bda2eac5a5301,"- Fixed all absolute paths I could find - Fixed SSTI test; which failed because it didnÄt trigger the serverside scoring - Fixed timing issues in registerSpec and contactSpec; where the XSS didn't work if the browser was too fast - Added code way to simulate a proxy environment ina  subfolder. Run via ""node test/e2eSubfolder.js"" - Added e2e test for subfolder. Run via ""npm run e2e -- subfolder"" - Added e2e test for subfolder to travis",Fix socket.io pathing,XSScross-ssitesscripting,2025-05-14 07:50:06,juice_shop_security_analysis
commit-cee2ba52783358c5d4acc90c90daf92f38244985,frontend/src/app/sidenav/sidenav.component.html,CWE-79,1cba5476a84ae313b226078ae99bda2eac5a5301,"- Fixed all absolute paths I could find - Fixed SSTI test; which failed because it didnÄt trigger the serverside scoring - Fixed timing issues in registerSpec and contactSpec; where the XSS didn't work if the browser was too fast - Added code way to simulate a proxy environment ina  subfolder. Run via ""node test/e2eSubfolder.js"" - Added e2e test for subfolder. Run via ""npm run e2e -- subfolder"" - Added e2e test for subfolder to travis",refactor(forms): refactor landingpage and styling - added top-level sidenav - minor styling changes - revision of the navbar,XSScross-ssitesscripting,2025-05-14 07:50:07,juice_shop_security_analysis
commit-834d38ba759291915bac4e5a5ec29de129545131,lib/startup/customizeEasterEgg.js,CWE-79,1cba5476a84ae313b226078ae99bda2eac5a5301,"- Fixed all absolute paths I could find - Fixed SSTI test; which failed because it didnÄt trigger the serverside scoring - Fixed timing issues in registerSpec and contactSpec; where the XSS didn't work if the browser was too fast - Added code way to simulate a proxy environment ina  subfolder. Run via ""node test/e2eSubfolder.js"" - Added e2e test for subfolder. Run via ""npm run e2e -- subfolder"" - Added e2e test for subfolder to travis",Add cookie banner and fix customization,XSScross-ssitesscripting,2025-05-14 07:50:07,juice_shop_security_analysis
commit-d8b0ab253b94ea664ca0b2722e855792c30a27f2,routes/profileImageUrlUpload.js,CWE-79,1cba5476a84ae313b226078ae99bda2eac5a5301,"- Fixed all absolute paths I could find - Fixed SSTI test; which failed because it didnÄt trigger the serverside scoring - Fixed timing issues in registerSpec and contactSpec; where the XSS didn't work if the browser was too fast - Added code way to simulate a proxy environment ina  subfolder. Run via ""node test/e2eSubfolder.js"" - Added e2e test for subfolder. Run via ""npm run e2e -- subfolder"" - Added e2e test for subfolder to travis",refactored,XSScross-ssitesscripting,2025-05-14 07:50:08,juice_shop_security_analysis
commit-9467e4a0e12fbc67e78399b65ea0c88bc1051e93,test/e2e/administrationSpec.js,CWE-79,1cba5476a84ae313b226078ae99bda2eac5a5301,"- Fixed all absolute paths I could find - Fixed SSTI test; which failed because it didnÄt trigger the serverside scoring - Fixed timing issues in registerSpec and contactSpec; where the XSS didn't work if the browser was too fast - Added code way to simulate a proxy environment ina  subfolder. Run via ""node test/e2eSubfolder.js"" - Added e2e test for subfolder. Run via ""npm run e2e -- subfolder"" - Added e2e test for subfolder to travis",Apply Standard 12.x code style to JavaScript files,XSScross-ssitesscripting,2025-05-14 07:50:09,juice_shop_security_analysis
commit-ad193876bfe6edd7501ed91366e0b22125332f7b,test/e2e/b2bOrderSpec.js,CWE-79,1cba5476a84ae313b226078ae99bda2eac5a5301,"- Fixed all absolute paths I could find - Fixed SSTI test; which failed because it didnÄt trigger the serverside scoring - Fixed timing issues in registerSpec and contactSpec; where the XSS didn't work if the browser was too fast - Added code way to simulate a proxy environment ina  subfolder. Run via ""node test/e2eSubfolder.js"" - Added e2e test for subfolder. Run via ""npm run e2e -- subfolder"" - Added e2e test for subfolder to travis",Add RCE Tier 2 challenge based on timeout,XSScross-ssitesscripting,2025-05-14 07:50:09,juice_shop_security_analysis
commit-f17a3141da19facc195f6fbb12d84f80b9936cfb,test/e2e/dataExportSpec.js,CWE-79,1cba5476a84ae313b226078ae99bda2eac5a5301,"- Fixed all absolute paths I could find - Fixed SSTI test; which failed because it didnÄt trigger the serverside scoring - Fixed timing issues in registerSpec and contactSpec; where the XSS didn't work if the browser was too fast - Added code way to simulate a proxy environment ina  subfolder. Run via ""node test/e2eSubfolder.js"" - Added e2e test for subfolder. Run via ""npm run e2e -- subfolder"" - Added e2e test for subfolder to travis",Make data export test more compact by moving setup to beforeEach(),XSScross-ssitesscripting,2025-05-14 07:50:10,juice_shop_security_analysis
commit-cd22850ed303369e02382a0a02c8c4dbbf1a690b,test/e2e/deluxeSpec.js,CWE-79,1cba5476a84ae313b226078ae99bda2eac5a5301,"- Fixed all absolute paths I could find - Fixed SSTI test; which failed because it didnÄt trigger the serverside scoring - Fixed timing issues in registerSpec and contactSpec; where the XSS didn't work if the browser was too fast - Added code way to simulate a proxy environment ina  subfolder. Run via ""node test/e2eSubfolder.js"" - Added e2e test for subfolder. Run via ""npm run e2e -- subfolder"" - Added e2e test for subfolder to travis",Auto-fix linting issues Signed-off-by: JuiceShopBot <61591748+JuiceShopBot@users.noreply.github.com>,XSScross-ssitesscripting,2025-05-14 07:50:10,juice_shop_security_analysis
commit-c1ccf7243a6fa7a44a84cd5a4b2f1e5497d055fe,test/e2e/forgedJwtSpec.js,CWE-79,1cba5476a84ae313b226078ae99bda2eac5a5301,"- Fixed all absolute paths I could find - Fixed SSTI test; which failed because it didnÄt trigger the serverside scoring - Fixed timing issues in registerSpec and contactSpec; where the XSS didn't work if the browser was too fast - Added code way to simulate a proxy environment ina  subfolder. Run via ""node test/e2eSubfolder.js"" - Added e2e test for subfolder. Run via ""npm run e2e -- subfolder"" - Added e2e test for subfolder to travis","Disable ""Forged JWT"" challenge on Windows",XSScross-ssitesscripting,2025-05-14 07:50:10,juice_shop_security_analysis
commit-1f03945c2d996a5d718b8a098e5e1161f551132e,test/e2e/metricsSpec.js,CWE-79,1cba5476a84ae313b226078ae99bda2eac5a5301,"- Fixed all absolute paths I could find - Fixed SSTI test; which failed because it didnÄt trigger the serverside scoring - Fixed timing issues in registerSpec and contactSpec; where the XSS didn't work if the browser was too fast - Added code way to simulate a proxy environment ina  subfolder. Run via ""node test/e2eSubfolder.js"" - Added e2e test for subfolder. Run via ""npm run e2e -- subfolder"" - Added e2e test for subfolder to travis",add metrics challenge and sign commits Signed-off-by: Scar26 <mmatty26@gmail.com>,XSScross-ssitesscripting,2025-05-14 07:50:11,juice_shop_security_analysis
commit-6a1419c794f690ac51ea0952892f74125390c8c5,test/e2e/privacyPolicySpec.js,CWE-79,1cba5476a84ae313b226078ae99bda2eac5a5301,"- Fixed all absolute paths I could find - Fixed SSTI test; which failed because it didnÄt trigger the serverside scoring - Fixed timing issues in registerSpec and contactSpec; where the XSS didn't work if the browser was too fast - Added code way to simulate a proxy environment ina  subfolder. Run via ""node test/e2eSubfolder.js"" - Added e2e test for subfolder. Run via ""npm run e2e -- subfolder"" - Added e2e test for subfolder to travis",Apply all challenge renaming in tests and code,XSScross-ssitesscripting,2025-05-14 07:50:11,juice_shop_security_analysis
commit-db89facc0a24e2b28ea60a7ab3f4b49942b43255,test/e2e/tokenSaleSpec.js,CWE-79,1cba5476a84ae313b226078ae99bda2eac5a5301,"- Fixed all absolute paths I could find - Fixed SSTI test; which failed because it didnÄt trigger the serverside scoring - Fixed timing issues in registerSpec and contactSpec; where the XSS didn't work if the browser was too fast - Added code way to simulate a proxy environment ina  subfolder. Run via ""node test/e2eSubfolder.js"" - Added e2e test for subfolder. Run via ""npm run e2e -- subfolder"" - Added e2e test for subfolder to travis",Set up token-sale component,XSScross-ssitesscripting,2025-05-14 07:50:12,juice_shop_security_analysis
commit-48b05c876a345f6369c6eeadcb6ca04d14c82ab9,test/e2e/totpSetupSpec.js,CWE-79,1cba5476a84ae313b226078ae99bda2eac5a5301,"- Fixed all absolute paths I could find - Fixed SSTI test; which failed because it didnÄt trigger the serverside scoring - Fixed timing issues in registerSpec and contactSpec; where the XSS didn't work if the browser was too fast - Added code way to simulate a proxy environment ina  subfolder. Run via ""node test/e2eSubfolder.js"" - Added e2e test for subfolder. Run via ""npm run e2e -- subfolder"" - Added e2e test for subfolder to travis",Added 2fa e2e tests,XSScross-ssitesscripting,2025-05-14 07:50:12,juice_shop_security_analysis
commit-fac0cad8c84a9af5dc319c94507781bcccdd5b5c,data/static/challenges.yml,CWE-352,61a34aca90a7f3259a34b2d21a8b922eb4163b4a,Add info on CSRF challenge not working in latest browsers,"Add ""Bonus Payload"" challenge",CSRFcross-ssitesrequestsforgery,2025-05-14 07:50:13,juice_shop_security_analysis
commit-d664242b286402343fa3cc946173cc5c82e363d7,test/e2e/profileSpec.js,CWE-352,b350d3bcdac8ca2d0441db233512dcb96c701f90,"Disable ""CSRF"" challenge (#1332) e2e test",Implementation and e2e test for CSRF challenge (bkimminich/juice-shop#902) Signed-off-by: Benjamin Liebe <benjamin.liebe@owasp.org>,CSRFcross-ssitesrequestsforgery,2025-05-14 07:50:14,juice_shop_security_analysis
commit-9b6b0b5e49ca4122f0d6daa7433d3d2c1833ce38,test/e2e/profileSpec.js,CWE-79,bc13aea27589d83018a5b815d973070511971485,"Rename ""Classic Stored XSS"" into ""CSP Bypass"" challenge",add CSP injection to username challenge Signed-off-by: Scar26 <mmatty26@gmail.com>,XSScross-ssitesscripting,2025-05-14 07:50:15,juice_shop_security_analysis
commit-70cb6fdf767ead0e47af3e96fe1d4b458f57c17f,data/static/i18n/en.json,CWE-79,217c3ff91da8ecc1043da71ce049a608c3c2f97e,"Add forgotten i18n hint for ""Reflected XSS"" challenge",Add i18n for challenge descriptions and hints,XSScross-ssitesscripting,2025-05-14 07:50:16,juice_shop_security_analysis
commit-c7c42c85ce7bd6020c1cd73a0962bc92f5f8ad6c,test/e2e/trackingOrderSpec.js,CWE-79,a81af8d6a37dc5531818360fb69a47488abe2526,Open track-result page before running the xss injection,"Delete tracking order page Order tracking is now only supposed to be accessed via the ""Order History"" page. This increases the challenge difficulty a bit; as it requires a bit more attention to detect",XSScross-ssitesscripting,2025-05-14 07:50:17,juice_shop_security_analysis
commit-a3895b9d230b98bdfde610d08bcbbb6e12d1f46f,SECURITY.md,SECURITY-FIX,303a554f747b8d6326006198d3cdbfb16faf505a,Update supported versions for security issues,Add entirely serious SECURITY.md policy Thanks to @github for adding this feature! :+1:,,2025-05-14 07:50:17,juice_shop_security_analysis
commit-e1f1996e663d44b4ce64ff176af4281e5e16d76e,frontend/src/hacking-instructor/challenges/localXss.ts,CWE-79,2e7aeb66f7740c1173c029db2cad2b674db12091,Merge pull request #1284 from bkimminich/hacking-instructor-xss-fix,Remove unused imports,XSScross-ssitesscripting,2025-05-14 07:50:18,juice_shop_security_analysis
commit-f5d9b635b3584c8684080e00c1b23c4f1695ec37,frontend/src/app/search-result/search-result.component.ts,CWE-79,8fd65975fd4a331e9342f2fe3dfd5dac05f95751,Reduce spoiler level of DOM XSS challenge check,"Implementation of stock inventory - Count is maintained; corresponding to each item. - The product is added to basket only if it's available; otherwise an error stating ""Stock Out"" is shown. - The product quantity is decreased when the user checks out successfully.",XSScross-ssitesscripting,2025-05-14 07:50:19,juice_shop_security_analysis
commit-dac56a74e8eb354fdd92f6eba0b460bbc480085b,lib/startup/customizeApplication.js,CWE-362,553583cac1e3e77af0bdce0a8708864bc522ca57,Fix race condition with file downloads and copying,Apply custom app name as page title,racescondition,2025-05-14 07:50:19,juice_shop_security_analysis
commit-f63bbc6de4808a9d5384b767dfed5b9d8e6aef56,Dockerfile,CWE-79,785e1c470b7a635de8026cdc8b4a1ec59a89d453,"Disable ""Reflected XSS"" challenge on Docker/Heroku",Introduce non-root user into final image (Fixes #603),XSScross-ssitesscripting,2025-05-14 07:50:19,juice_shop_security_analysis
commit-fef27a2d43adf01ea79f9dcf6a096f4084aba188,frontend/package.json,CWE-79,785e1c470b7a635de8026cdc8b4a1ec59a89d453,"Disable ""Reflected XSS"" challenge on Docker/Heroku",Added the ability to style the hint using markdown,XSScross-ssitesscripting,2025-05-14 07:50:19,juice_shop_security_analysis
commit-8274f37cf7b4712ae492f25e7dd072f9191d0c17,frontend/src/app/last-login-ip/last-login-ip.component.html,CWE-79,29ff826856af9b933504eabedc0d21b471e4afea,Allow XSS in Last Login IP again by using innerHTML,refactor(forms): reorganize the data protection area  - reorganize the data protection area  - minor design issues + changes,XSScross-ssitesscripting,2025-05-14 07:50:20,juice_shop_security_analysis
commit-d07e5de768551a90510dcbfe4da6fcff3867b2f4,test/api/loginApiSpec.js,CWE-79,29ff826856af9b933504eabedc0d21b471e4afea,Allow XSS in Last Login IP again by using innerHTML,Add missing newline,XSScross-ssitesscripting,2025-05-14 07:50:20,juice_shop_security_analysis
commit-db6b2452f3cdfabd90af4c85f62df39c8e67ea0c,test/e2e/restApiSpec.js,CWE-79,29ff826856af9b933504eabedc0d21b471e4afea,Allow XSS in Last Login IP again by using innerHTML,Minor Fixes,XSScross-ssitesscripting,2025-05-14 07:50:21,juice_shop_security_analysis
commit-b2edd1040eca365cbba30d5c7306f9300961ccd4,test/e2e/profileSpec.js,CWE-79,b983818599dca05ad2ab7d10b97c6d0f1204dd64,Wait longer on profile screen to handle XSS alert,"Rephrase and repair ""XSS Tier 1.5"" challenge",XSScross-ssitesscripting,2025-05-14 07:50:21,juice_shop_security_analysis
commit-d91fb7afa09b83565e728dc6db1352be83d87963,test/e2e/registerSpec.js,CWE-79,ad8bd4e8a08f4c852e1af548808116b8681d1122,Give XSS exploits on admin page 10sec to actually occur,Fix challenge name in e2e test case,XSScross-ssitesscripting,2025-05-14 07:50:22,juice_shop_security_analysis
commit-22bab9509f796cdfde0444e4766936bb59e1962a,frontend/src/hacking-instructor/challenges/xssTier1.ts,CWE-79,5b739aac918a4173876499a0158dc0c1c5f4e31e,Escape the ` characters in the XSS payload on tutorial toast,Add tutorial script for XSS Tier 1 challenge,XSScross-ssitesscripting,2025-05-14 07:50:22,juice_shop_security_analysis
commit-e6836a906359c97e60b2f7e366d73882aef294a4,test/e2e/restApiSpec.js,CWE-79,6163abc0ae98adf0a45d9715d5d01ad18ba5d879,"Disable e2e  test for challenge ""xss3""","Fix e2e test for ""XSS Tier 5"" challenge",XSScross-ssitesscripting,2025-05-14 07:50:23,juice_shop_security_analysis
commit-cff54d39e9b9aceeebb86309e616921743b21027,frontend/src/app/navbar/navbar.component.html,CWE-89,705cde213b2585c8cfe0cbd2aab28b2ddeabb56d,Added more steps for the SQL injection challenge.,Fix navbar layout and colors (Not responsive yet!),:SQLNoSQLsinjection,2025-05-14 07:50:23,juice_shop_security_analysis
commit-f7ff8e332096ac960535b7b43d52ff833b905f74,routes/saveLoginIp.js,CWE-79,f8c72253a06d5a537fa43090a90afab0f139c7af,Match payload to the instructions for challenge httpHeaderXssChallenge,"Remove prefix ""::ffff:"" for ipv4 addresses (fixes #909)",XSScross-ssitesscripting,2025-05-14 07:50:24,juice_shop_security_analysis
commit-a26ea444a7915b88ad5272415c085c672646245b,test/e2e/changePasswordSpec.js,CWE-352,72c749cca6fafef2e76224e7ff64536ecbc2e8d2,Rename CSRF challenge in test description,"Rename ""CSRF"" challenge into ""Change Bender's Password"" (kudos to @omerlh for noticing and reporting this inaccurate categorization)",CSRFcross-ssitesrequestsforgery,2025-05-14 07:50:24,juice_shop_security_analysis
commit-e74008fd470cc71091c90344c4b841f991621fbb,config/fbctf.yml,CWE-352,a26ea444a7915b88ad5272415c085c672646245b,"Rename ""CSRF"" challenge into ""Change Bender's Password""",feat: add entry for challenge and description and country code in fbctf,CSRFcross-ssitesrequestsforgery,2025-05-14 07:50:25,juice_shop_security_analysis
commit-f02c9d0dc9459d7deed9a5c899c67ef89a9b16eb,frontend/src/app/score-board/score-board.component.spec.ts,CWE-352,a26ea444a7915b88ad5272415c085c672646245b,"Rename ""CSRF"" challenge into ""Change Bender's Password""",Added tests for score-board component,CSRFcross-ssitesrequestsforgery,2025-05-14 07:50:25,juice_shop_security_analysis
commit-df96dcda4687eb14a2c8543c7147c45575af8456,routes/changePassword.js,CWE-352,a26ea444a7915b88ad5272415c085c672646245b,"Rename ""CSRF"" challenge into ""Change Bender's Password""","Revert ""Make use of default paramters"" This reverts commit 3123570",CSRFcross-ssitesrequestsforgery,2025-05-14 07:50:25,juice_shop_security_analysis
commit-d62bd7c8b65a700871ee446ca4b55dc7b3b4039a,test/api/passwordApiSpec.js,CWE-352,a26ea444a7915b88ad5272415c085c672646245b,"Rename ""CSRF"" challenge into ""Change Bender's Password""",Add tests and small refactoring of Brute Force challenge (solves #446; credits to @CaptainFreak),CSRFcross-ssitesrequestsforgery,2025-05-14 07:50:26,juice_shop_security_analysis
commit-d602057dd4b39183f0b5e56efc2b374e36b87124,test/api/searchApiSpec.js,CWE-352,a26ea444a7915b88ad5272415c085c672646245b,"Rename ""CSRF"" challenge into ""Change Bender's Password""",fix: fix tests for searchApi,CSRFcross-ssitesrequestsforgery,2025-05-14 07:50:26,juice_shop_security_analysis
commit-fd451dad8151ba80e4f0c977f6222533dd11908d,routes/likeProductReviews.js,CWE-362,794222bf55a54b40b2ac5b9e75b7091fad4392d0,Widen race condition time window by 50ms,Review like functionality,racescondition,2025-05-14 07:50:27,juice_shop_security_analysis
commit-be3463c52d26fe9b15eb6ef4d700e685c5934fce,data/static/challenges.yml,CWE-79,efe8939bfc58dc3d6dcde037f34e4395a4b20666,"Clarify sarcasm in ""XSS Tier 1.5"" hint","Recategorize ""Access Log"" and add hint URL",XSScross-ssitesscripting,2025-05-14 07:50:27,juice_shop_security_analysis
commit-83a6c6a839cca25e4019d0afd1f310bc6e88c809,test/e2e/registerSpec.js,CWE-79,17f9e73fc1868b7f936ed98ad332544521c39f7e,Disable XSS2 challenge verification,e2e tests for mass-assign-chall,XSScross-ssitesscripting,2025-05-14 07:50:27,juice_shop_security_analysis
commit-c4b3feec0f163812513471de870d2d18e77d9953,test/e2e/profileSpec.js,CWE-79,206ba65add7cf38b5de3e6599711d41553e5f4b0,"Use admin user for ""XSS Tier 1.5"" challenge",lint(test/e2e/profileSpec.js): fix lint,XSScross-ssitesscripting,2025-05-14 07:50:27,juice_shop_security_analysis
commit-f6b1545fac25fcc36c13e4b885b80b8e14292944,Dockerfile,CWE-79,e2859b81e6571201dd4918e387483312914fe749,Refactor Username XSS changes from pre-PR back in,Revert socket.io attempts,XSScross-ssitesscripting,2025-05-14 07:50:28,juice_shop_security_analysis
commit-2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,data/static/challenges.yml,CWE-79,e2859b81e6571201dd4918e387483312914fe749,Refactor Username XSS changes from pre-PR back in,Merge branch 'develop' into usernameXss,XSScross-ssitesscripting,2025-05-14 07:50:28,juice_shop_security_analysis
commit-faf933a9e387152682c6d318c150dd99521cd409,package.json,CWE-79,e2859b81e6571201dd4918e387483312914fe749,Refactor Username XSS changes from pre-PR back in,Reuse e2e script in protractor script,XSScross-ssitesscripting,2025-05-14 07:50:29,juice_shop_security_analysis
commit-baf6e6eb2a245e46fecec1525969a15d3ddb8b42,routes/updateUserProfile.js,CWE-79,ac7672466eb9c6358a53f81fa2e0b1abb171a823,Merge pull request #771 from supra08/usernameXss,Update profile fuctionality with SSTi Bug,XSScross-ssitesscripting,2025-05-14 07:50:30,juice_shop_security_analysis
commit-ce32456a0d9d44d74445bf02fbd996b01e5965a8,.appveyor.yml,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Add AppVeyor build script (for build/test on Windows),XSScross-ssitesscripting,2025-05-14 07:50:30,juice_shop_security_analysis
commit-a81cbe5261dbac1b79116d6091052042cb1494ac,Dockerfile,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Merge branch 'develop' of https://github.com/bkimminich/juice-shop into develop # Conflicts: #	Dockerfile,XSScross-ssitesscripting,2025-05-14 07:50:30,juice_shop_security_analysis
commit-79d3a4618f456292339bc4472d2c450723389967,app.json,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Add Heroku button (send message to Gitter chat when an instance is created),XSScross-ssitesscripting,2025-05-14 07:50:31,juice_shop_security_analysis
commit-afbea8d152416c00f6ca1e8d51d85bec2cb64dea,config/7ms.yml,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Add 7ms.yml customization [ci skip],XSScross-ssitesscripting,2025-05-14 07:50:31,juice_shop_security_analysis
commit-a1fe7c609f5dc40475cc689c768483f624b71962,config/bodgeit.yml,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Prepare the ultimate classic customization,XSScross-ssitesscripting,2025-05-14 07:50:31,juice_shop_security_analysis
commit-9415e74fac7d1c60498c0e640b5c0a23d5ed54e1,config/default.yml,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Add deeporange-indigo color theme,XSScross-ssitesscripting,2025-05-14 07:50:32,juice_shop_security_analysis
commit-84fd4105a3f5468f1617d6839d2e137c0e35f59d,config/mozilla.yml,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Reformatted YAML files (with https://jsonformatter.org/yaml-formatter),XSScross-ssitesscripting,2025-05-14 07:50:32,juice_shop_security_analysis
commit-926278a8579c41a4917005e616475d4dc1631757,config/sickshop.yml,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Change `useForProductTamperingChallenge` into `urlForProductTamperingChallenge`,XSScross-ssitesscripting,2025-05-14 07:50:32,juice_shop_security_analysis
commit-e842b972a94213ed9254805babd3dd8e1e5681ce,frontend/package.json,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Move typescript into runtime dependencies,XSScross-ssitesscripting,2025-05-14 07:50:32,juice_shop_security_analysis
commit-c80a93ba798c530f74585a2d24db56fbc0a7f736,frontend/src/app/about/about.component.html,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Add (dummy) Feedback slideshow and social links,XSScross-ssitesscripting,2025-05-14 07:50:33,juice_shop_security_analysis
commit-0e4fa0dbedabf6b98f8a87822b9b38829f88b15b,frontend/src/app/administration/administration.component.html,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Created administration component,XSScross-ssitesscripting,2025-05-14 07:50:33,juice_shop_security_analysis
commit-f6c3171730a6212e662eeb4ac3ebe0b2f8568817,frontend/src/app/login/login.component.html,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Apply i18n to Angular components (for #682),XSScross-ssitesscripting,2025-05-14 07:50:34,juice_shop_security_analysis
commit-b94cf05cc9e9f35229d3e62feb2ac9daee0e8b39,frontend/src/app/navbar/languages.ts,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,"Update language tags for ""lab""-status (Flask icon for all with <85% translation rate on CrowdIn)",XSScross-ssitesscripting,2025-05-14 07:50:35,juice_shop_security_analysis
commit-dfe0493e5e77dd0f0200c0408ba6f2ca243dcf18,frontend/src/app/register/register.component.html,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Mark submit button for all forms (does not solve #753 on its own!),XSScross-ssitesscripting,2025-05-14 07:50:35,juice_shop_security_analysis
commit-dc99380b0f39d11d6d5ef4b552650c8d4188ee4a,frontend/src/app/token-sale/token-sale.component.html,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Add layout containers for Tokensale page,XSScross-ssitesscripting,2025-05-14 07:50:35,juice_shop_security_analysis
commit-ffdd00358d9c4beb4bf13b6c64e35a60a8ff4b4b,routes/b2bOrder.js,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Simplify Swagger doc and (partially) assemble confirmation,XSScross-ssitesscripting,2025-05-14 07:50:37,juice_shop_security_analysis
commit-f860a4cab7fad0803c8a4527a15b78f250350470,test/e2e/_sharedSpec.js,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Refactor login hook and re-enable success check,XSScross-ssitesscripting,2025-05-14 07:50:37,juice_shop_security_analysis
commit-f3f7a81f316ada34609e1220fb0be4f602b49b82,test/server/premiumRewardSpec.js,CWE-79,2db921cb2c0a54ffbe54ee9a0c83b82853e3e56f,Merge branch 'develop' into usernameXss,Make use of `userContext`,XSScross-ssitesscripting,2025-05-14 07:50:38,juice_shop_security_analysis
commit-ff6bef34001f134d00aff2b008f6fd3491b398b9,README.md,CWE-79,683cc668361e4060a3d9e017962fb485be253d2a,Add jquery dependency for XSS demo and update xss link with img,Switch back to node 10 as default version,XSScross-ssitesscripting,2025-05-14 07:50:39,juice_shop_security_analysis
commit-e513867c6a30a5bd5ac299335e7027509831daa7,frontend/src/index.html,CWE-79,683cc668361e4060a3d9e017962fb485be253d2a,Add jquery dependency for XSS demo and update xss link with img,Set up upgrade branch,XSScross-ssitesscripting,2025-05-14 07:50:39,juice_shop_security_analysis
commit-36b5562cbb94f8de99d28d072dfb25da3e8e619f,data/static/challenges.yml,CWE-352,08cd87c9cb5384baaac235338a8d7c3f9ba582cd,"Clarify approach needed for ""CSRF"" challenge",Remove old AngularJS UI,CSRFcross-ssitesrequestsforgery,2025-05-14 07:50:40,juice_shop_security_analysis
commit-daf3ffa8c4d1da1be5502edb8cc5d41f21e6fb6c,test/api/feedbackApiSpec.js,CWE-79,0425d7360d3b7da0d2b36ee3b8c033f946763e64,Replace all XSS payloads with <iframe>,Retrieve captcha before feedback API tests,XSScross-ssitesscripting,2025-05-14 07:50:40,juice_shop_security_analysis
commit-fa95d12017e1a7c496d174b553430ed31b4bb836,test/e2e/contactSpec.js,CWE-79,25b4a7f547bba77a726900c60afa09c2ed8cfcfd,Fix XSS Tier 4 e2e test presumably,Fix XSS Tier 4 e2e test (by waiting for payload <iframe> to vanish from DOM),XSScross-ssitesscripting,2025-05-14 07:50:41,juice_shop_security_analysis
commit-e085416451d897c00f99d5da4d17c26a90d05c9a,protractor.conf.js,CWE-79,fa95d12017e1a7c496d174b553430ed31b4bb836,Fix XSS Tier 4 e2e test,Add blank line at the end,XSScross-ssitesscripting,2025-05-14 07:50:41,juice_shop_security_analysis
commit-f4ab79019a10d65c003f5d69fe6287bf9a3ce965,test/e2e/contactSpec.js,CWE-79,dcde0323c37412d4545056f3356b6d5298620f59,Disable XSS Tier 4 end-to-end test,butchered test legibility for alert handling to work,XSScross-ssitesscripting,2025-05-14 07:50:41,juice_shop_security_analysis
commit-fc6d955dd9924527876995f9284cb190d245caac,test/e2e/contactSpec.js,CWE-79,c03071c6eb72ea2cfb67d4db55571f0d1f3bfb14,Fix deleting XSS comment from admin page,Renabled e2e specs for weird-crypto; typosquatting and captcha-bypass,XSScross-ssitesscripting,2025-05-14 07:50:41,juice_shop_security_analysis
commit-c72506585ab69f4c0ab36df81e4dbfdfef488b8e,test/e2e/registerSpec.js,CWE-79,64059e1070621f91fd4db68de5f64e64fa219a6f,Close XSS alert popups correctly during e2e test run,Expect same XSS attack string for all four tiers (removing any guesswork of which tier has actually which number),XSScross-ssitesscripting,2025-05-14 07:50:42,juice_shop_security_analysis
commit-a7deff5d75b14b6d349039011951191e2e3f6799,frontend/src/app/search-result/search-result.component.spec.ts,CWE-79,96050228571ec688dd2d0e31a08403eb6f25a3d6,Use backticks (`) in all XSS payloads,Added tests for search-result component and corrected test in basket component,XSScross-ssitesscripting,2025-05-14 07:50:43,juice_shop_security_analysis
commit-e4dd6563d2e663e4632388bed280c1960cc0e0d0,frontend/src/app/search-result/search-result.component.ts,CWE-79,96050228571ec688dd2d0e31a08403eb6f25a3d6,Use backticks (`) in all XSS payloads,Condense layout of product details overlay,XSScross-ssitesscripting,2025-05-14 07:50:44,juice_shop_security_analysis
commit-1e8cbde7796e1e4f3cdd325c6a99e16b75d3f8a6,lib/startup/registerWebsocketEvents.js,CWE-79,96050228571ec688dd2d0e31a08403eb6f25a3d6,Use backticks (`) in all XSS payloads,Extracted WebSocket registration,XSScross-ssitesscripting,2025-05-14 07:50:44,juice_shop_security_analysis
commit-94cf846a98fde927e4016afb84c3fe7141420105,test/e2e/searchSpec.js,CWE-79,96050228571ec688dd2d0e31a08403eb6f25a3d6,Use backticks (`) in all XSS payloads,Modified spec for christmas special,XSScross-ssitesscripting,2025-05-14 07:50:45,juice_shop_security_analysis
commit-af27a6c601f54e35fa11c740d90a3a7240b954b4,data/static/challenges.yml,CWE-79,2dea370ba8301dc219cbbab44a5ebe1d4ddd6c84,Reenable XSS Tier 0 challenge,"Change "" into ' in expected XSS payloads",XSScross-ssitesscripting,2025-05-14 07:50:45,juice_shop_security_analysis
commit-9166babc16ee11e8956c8703368da4ae6acef624,frontend/src/app/track-order/track-order.component.html,CWE-79,2dea370ba8301dc219cbbab44a5ebe1d4ddd6c84,Reenable XSS Tier 0 challenge,Set up track-order component and track-result component,XSScross-ssitesscripting,2025-05-14 07:50:45,juice_shop_security_analysis
commit-d2a618be3a265f55846dd472e54e5aca5f9c2e6b,data/static/xchallenges.yml,CWE-79,f6da4e95f07a74cfdb730c118b4b84bef273509e,Fix expected XSS payloads in challenge descriptions,Remove XSS5 challenge for now,XSScross-ssitesscripting,2025-05-14 07:50:46,juice_shop_security_analysis
commit-76f60f113bac70ffca73be9a52fc22226df3d808,test/e2e/searchSpec.js,CWE-79,cccac2ada412309eef313dcede2007af1b531dad,Disable XSS1 e2e test,Reduce commented-out code to minimum,XSScross-ssitesscripting,2025-05-14 07:50:47,juice_shop_security_analysis
commit-f782114c8d15f8556620bc981b4af315171d344b,models/product.js,CWE-79,6f3f4bd6077bcfee3b660e90de6ad81fa9b30250,Re-enable challenges XSS2-4,Transpile server-side code into ES6/7 with lebab (unsafe transforms),XSScross-ssitesscripting,2025-05-14 07:50:47,juice_shop_security_analysis
commit-f7d383f98a7e4c173d0180eddd8ccb67669d59da,data/static/challenges.yml,CWE-79,73229b35c4e39f7ef6071f42cc51fc8471950466,Rename into httpHeaderXssChallenge,Shorten security policy challenge description,XSScross-ssitesscripting,2025-05-14 07:50:49,juice_shop_security_analysis
commit-e0d0b0945b72621b297d143093096d7ab5679a9b,config/fbctf.yml,CWE-79,9871563a8be575c0f279b3c8b9441dd1795d2748,Rename challenge into httpHeaderXssChallenge,Escalate self-XSS challenge,XSScross-ssitesscripting,2025-05-14 07:50:49,juice_shop_security_analysis
commit-dc95232c5be4069131fb7fc5fdb30635d6404658,test/e2e/restApiSpec.js,CWE-79,420e943a39257601c616dc08e920031cdace356a,Harmonize attack string for XSS5,Attempt 1sec wait after product change,XSScross-ssitesscripting,2025-05-14 07:50:49,juice_shop_security_analysis
commit-fa61f1c2dbf4a35bdbe901c491b5ad1164628c24,README.md,CWE-79,e64d05e7298a0f807e38ffdb8d9e75026e42f8c0,Fix link to XSS documentation,Simplify footnotes,XSScross-ssitesscripting,2025-05-14 07:50:50,juice_shop_security_analysis
commit-5565e4456734d6ab9e290b90b1b203857eafdc09,test/e2e/trackingOrderSpec.js,CWE-79,68005b2c2bd1765d934af00be063356b7c9f3af1,fixes for xss0,initial test suite for old xss,XSScross-ssitesscripting,2025-05-14 07:50:51,juice_shop_security_analysis
commit-bd4f6cc131ace9087b8a85e3eeec14f8c98ac629,app/js/services/TrackOrderService.js,CWE-79,5565e4456734d6ab9e290b90b1b203857eafdc09,initial test suite for old xss,Updated hashPrefix in app.js,XSScross-ssitesscripting,2025-05-14 07:50:51,juice_shop_security_analysis
commit-ca6cbc6062378500caf6d26e0f37f042f7c4b1eb,.nsprc,SECURITY-FIX,9c1f1a088c4d2a798abab24a9f4039626d002231,Ignore NodeSecurity issue 577,Remove comments (removal when parsing currently buggy on nodesecurity/nsp's end),,2025-05-14 07:50:52,juice_shop_security_analysis
commit-e9676e5a58590462ac69a2e29e6e6d4c2147ba22,routes/trackOrder.js,CWE-79,9769420adc9392650c8de176aa1a82b883a40470,Changes for xss challenge,Add reflected XSS challenge,XSScross-ssitesscripting,2025-05-14 07:50:53,juice_shop_security_analysis
commit-6c4fe0996fe8e93f479e76635250b49b8b3076a6,app/i18n/en.json,CWE-79,e9676e5a58590462ac69a2e29e6e6d4c2147ba22,Add reflected XSS challenge,Add I18N infrastructure,XSScross-ssitesscripting,2025-05-14 07:50:53,juice_shop_security_analysis
commit-cf993b74804f8ed4805bc3b2e78e46eb724ca5d1,app/views/TrackOrder.html,CWE-79,e9676e5a58590462ac69a2e29e6e6d4c2147ba22,Add reflected XSS challenge,Add Order Dashboard,XSScross-ssitesscripting,2025-05-14 07:50:54,juice_shop_security_analysis
commit-edecd7e90ff8b20b8cc24e373de753dedd7ed22a,server.js,CWE-79,e9676e5a58590462ac69a2e29e6e6d4c2147ba22,Add reflected XSS challenge,Add premium paywall challenge (resolves #251),XSScross-ssitesscripting,2025-05-14 07:50:54,juice_shop_security_analysis
commit-4c4fe4a1ed5748f281afc9329feb457b1c028cee,data/static/challenges.yml,CWE-502,eb4a0b537983b85706728f1ee88067300ccffc89,"Rename ""Deserialization"" category into ""Insecure Deserialization""",Moved json files to yml,deserialization,2025-05-14 07:50:54,juice_shop_security_analysis
commit-af5dfc11265014f780ba31b7b696f55be3d9ea67,server.js,CWE-362,a7642e0c7d5a1ac99b7bf251865b2d370c0da78c,Await datacreator to avoid race condition,Separate server startup script from surrounding actions,racescondition,2025-05-14 07:50:55,juice_shop_security_analysis
commit-efd6cfdf5f2878a5d5f4853bc3495e6e3150fefc,models/user.js,CWE-79,c72506585ab69f4c0ab36df81e4dbfdfef488b8e,Expect same XSS attack string for all four tiers,Fixed model formatting,XSScross-ssitesscripting,2025-05-14 07:50:56,juice_shop_security_analysis
commit-c30003a1bbe49b526b8a23d28dad493e81b70c7f,test/api/feedbackApiSpec.js,CWE-79,c72506585ab69f4c0ab36df81e4dbfdfef488b8e,Expect same XSS attack string for all four tiers,Migrate feedback API tests to frisby2,XSScross-ssitesscripting,2025-05-14 07:50:57,juice_shop_security_analysis
commit-289492d5097fba480ac4b46b8a7c572f37183cf2,test/api/searchApiSpec.js,CWE-79,c72506585ab69f4c0ab36df81e4dbfdfef488b8e,Expect same XSS attack string for all four tiers,Separate Product API and Search tests,XSScross-ssitesscripting,2025-05-14 07:50:57,juice_shop_security_analysis
commit-a92b5eae543b343d7eb2372effbcdc7d0fbeb765,test/api/userApiSpec.js,CWE-79,c72506585ab69f4c0ab36df81e4dbfdfef488b8e,Expect same XSS attack string for all four tiers,Fix test expectations according to epilogue - expect 201 on POST - expect no API resource listing - expect 500 instead of 200+JSON-error for unmapped entity,XSScross-ssitesscripting,2025-05-14 07:50:57,juice_shop_security_analysis
commit-513e982a2789414c3150969418e50c0a7070ae34,.gitignore,SECURITY-FIX,44e3f90926c1e60e04b0a93e4b40171c8cbda297,Add missing WASPY product image (Hot-Hotfix Release!),Add quiet mode,,2025-05-14 07:50:59,juice_shop_security_analysis
commit-f04246f9bef369ea727dd1670b27b1bf9cb2e84e,bower.json,SECURITY-FIX,bb6b0a5df1b105d96e129c049069e6d1b9bb8497,Add WASPY Award 2017 Nomination product (Hotfix Release!),Update dependencies,,2025-05-14 07:51:02,juice_shop_security_analysis
commit-ffc358ddb91b80f14591482528a1b2c4fcfa7902,node6.df,SECURITY-FIX,bb6b0a5df1b105d96e129c049069e6d1b9bb8497,Add WASPY Award 2017 Nomination product (Hotfix Release!),"Use dedicated ""juiceshop"" user",,2025-05-14 07:51:02,juice_shop_security_analysis
commit-cb45ce0efd07cc2e8342c0233a77f5927e16b0ab,node8.df,SECURITY-FIX,bb6b0a5df1b105d96e129c049069e6d1b9bb8497,Add WASPY Award 2017 Nomination product (Hotfix Release!),Add Node 8 support for Docker (for #332),,2025-05-14 07:51:02,juice_shop_security_analysis
commit-ff2ed46725bae6b1405209e4e8a55296ea61a0dc,package.json,SECURITY-FIX,bb6b0a5df1b105d96e129c049069e6d1b9bb8497,Add WASPY Award 2017 Nomination product (Hotfix Release!),Add store customization feature (#289) resolves #277,,2025-05-14 07:51:03,juice_shop_security_analysis
commit-a3c6f26b16a340a3b2bf0c87db499095625f86cd,models/feedback.js,CWE-79,5dab675bb2f18e068b557fb0dfab0969f6a95de0,Switch XSS3 and XSS4 attack strings (to match with difficulty sort order),Add zero star challenge,XSScross-ssitesscripting,2025-05-14 07:51:03,juice_shop_security_analysis
commit-df21f8cf3d26c60558881d6b10f1d18d18337cb1,test/client/basketControllerSpec.js,CWE-79,5dab675bb2f18e068b557fb0dfab0969f6a95de0,Switch XSS3 and XSS4 attack strings (to match with difficulty sort order),Add more edge case tests (kills some surviving mutants),XSScross-ssitesscripting,2025-05-14 07:51:04,juice_shop_security_analysis
commit-a33e19ba64a811fb2ae8cc2f3083582023e3f872,test/client/feedbackControllerSpec.js,CWE-79,5dab675bb2f18e068b557fb0dfab0969f6a95de0,Switch XSS3 and XSS4 attack strings (to match with difficulty sort order),extracted 100% covered controller tests,XSScross-ssitesscripting,2025-05-14 07:51:04,juice_shop_security_analysis
commit-a25885a72383591306b54b8a3acb578ed5689a39,test/client/searchresultControllerSpec.js,CWE-79,5dab675bb2f18e068b557fb0dfab0969f6a95de0,Switch XSS3 and XSS4 attack strings (to match with difficulty sort order),added/separated some more tests,XSScross-ssitesscripting,2025-05-14 07:51:05,juice_shop_security_analysis
commit-ada4efdb19c15bf36bfd2f139027cf54aaf21a2a,test/server/feedbackApiSpec.js,CWE-79,5dab675bb2f18e068b557fb0dfab0969f6a95de0,Switch XSS3 and XSS4 attack strings (to match with difficulty sort order),Remove /*jslint*/ hints,XSScross-ssitesscripting,2025-05-14 07:51:05,juice_shop_security_analysis
commit-f8024cc9d43706695f4bb0e9db0260fc140561da,Gruntfile.js,SECURITY-FIX,eb61544c2d1e21016896ed4a1ed6b9f50688b0f8,Hothotfix /ftp folder packing,added retire.js grunt task for checking *unwanted* vulnerabilities (bug: retire:node fails from call stack size),,2025-05-14 07:51:05,juice_shop_security_analysis
commit-7b3ad36f29767c5396a5f464328517694194fb9b,Gruntfile.js,SECURITY-FIX,81b92527640f3262b9c3794fedaa7f402c08faa4,Hotfix broken distribution packages - missed `multer` dependency - missed `ftp` folder,Apply `standard` coding style,,2025-05-14 07:51:06,juice_shop_security_analysis
commit-bed05a78207502d4587a746f7f780a7f49b2e3d2,test/e2e/registerSpec.js,CWE-79,c9853014a529b7eabdf2bc2ba62758aaaa926b23,Disabling XSS earlier (to make re-triggered alert boxes less likely),renamed 'myApp' into 'juiceShop',XSScross-ssitesscripting,2025-05-14 07:51:06,juice_shop_security_analysis
commit-ee5feea08452a844d440bbf1889b8598eb8e8b09,test/e2e/restApiSpec.js,CWE-79,c9853014a529b7eabdf2bc2ba62758aaaa926b23,Disabling XSS earlier (to make re-triggered alert boxes less likely),fixed tests,XSScross-ssitesscripting,2025-05-14 07:51:06,juice_shop_security_analysis
commit-cd85bfbab0dfa9d6048614e7a6dd85bdd4537c14,middleware.js,CWE-89,41d01dad7aefdd7451d7ab646530fa50d437feb5,fixed SQL Injection challenge bug,"fixed ; and "" issues",:SQLNoSQLsinjection,2025-05-14 07:51:07,juice_shop_security_analysis
commit-eeb802c1a6c28c0911a2e93d65e979cd661d35fd,server.js,CWE-89,aee3976f344f5ee56c6a53ab4f20b7a0da08b276,added tests for SQL injection,further challenge solution checks - access control challenges now solvable - error challenge now not solvable by simple 401 any more,:SQLNoSQLsinjection,2025-05-14 07:51:07,juice_shop_security_analysis
commit-ef438cc77e63340beb5dd763e2724e16329f32b8,test/server/productApiSpec.js,CWE-79,6a044c40d431127571e49f876d35283865574d02,repaired XSS challenges,all 4 XSS challenges now solvable,XSScross-ssitesscripting,2025-05-14 07:51:07,juice_shop_security_analysis
commit-0ca0301f01eb390cf415c2a53fedf918394b43b3,app/views/Administration.html,CWE-79,8ea61a4d9f597f072fe9f2a28c4417acf00ac9b6,"""enabled"" XSS for feedback entries",small improvements - favicon added - feedback list put into admin page - created contact-us page,XSScross-ssitesscripting,2025-05-14 07:51:08,juice_shop_security_analysis
commit-eb30823b7d46379f669951baa0bbba97d23394ca,server.js,CWE-352,cc726d5b54e10e12c58ed492c8705ea79abc2e51,added csrf middleware,hashing user password,CSRFcross-ssitesrequestsforgery,2025-05-14 07:51:09,juice_shop_security_analysis
commit-fd4d9139bf0541827e4ec448baa2773aa1ff8ebd,lib/matplotlib/backends/web_backend/mpl.js,CWE-664,ecc297635f13ac0bc60861570d0e93313a491cec,Fixed bug caused by wrong scoping,MNT : js style tweaks,,2025-05-15 07:08:31,matpotlib_security_analysis
commit-f4adec7b569cfd0b30e0f8367ba8618b9e160f92,lib/matplotlib/axes/_base.py,CWE-362,14b5a36ad1ec1a6e1a75c0e9defd428544708128,FIX: don't push race condition on un-pickling,Use six instead of 2to3,racescondition,2025-05-15 07:08:42,matpotlib_security_analysis
commit-0c1956f1faf8ab759b2c0653e9f2d699715c9f97,lib/matplotlib/__init__.py,CWE-362,605778c82468e627c83fda288c860b84e51c17bc,Fix race conditions when making directories---try making them and catch errors rather than checking and then creating.,code reorganization to remove active call to 'get_data_path' from otherwise static list of rcdefault values svn path=/trunk/matplotlib/; revision=3430,racescondition,2025-05-15 07:09:32,matpotlib_security_analysis
commit-e3edae15c6e5969f5432d93eebda6cb27d92e51f,lib/matplotlib/finance.py,CWE-362,605778c82468e627c83fda288c860b84e51c17bc,Fix race conditions when making directories---try making them and catch errors rather than checking and then creating.,efficient support for new Yahoo format in finance.py svn path=/trunk/matplotlib/; revision=3196,racescondition,2025-05-15 07:09:33,matpotlib_security_analysis
commit-f2726c19cbf7271e03cd546458e04c1e1e21c2d8,packages/core/package.json,CWE-937,e0d2ba6c98b8691fa28b72515227952a75e1ac78,chore(core;express;fastify): fix deps with security issues,test: fix tests to make them run ootb,,2025-05-14 16:13:33,nest_security_analysis
commit-99d31e3de58c7cb69503d09d41debe32f0661211,packages/platform-express/package.json,CWE-937,e0d2ba6c98b8691fa28b72515227952a75e1ac78,chore(core;express;fastify): fix deps with security issues,chore(deps): bump tslib from 2.6.2 to 2.6.3 Bumps [tslib](https://github.com/Microsoft/tslib) from 2.6.2 to 2.6.3. - [Release notes](https://github.com/Microsoft/tslib/releases) - [Commits](https://github.com/Microsoft/tslib/compare/v2.6.2...v2.6.3) --- updated-dependencies: - dependency-name: tslib   dependency-type: direct:production   update-type: version-update:semver-patch ... Signed-off-by: dependabot[bot] <support@github.com>,,2025-05-14 16:13:34,nest_security_analysis
commit-f0e9b40e2cbae16bb70446577c09812ac286a698,packages/platform-fastify/package.json,CWE-937,e0d2ba6c98b8691fa28b72515227952a75e1ac78,chore(core;express;fastify): fix deps with security issues,chore() publish alpha version (next),,2025-05-14 16:13:35,nest_security_analysis
commit-730439603919b9a38a54477f768b775f1aaf6412,pandas/_libs/meson.build,CWE-362,51135cec59f333b61932bde5b1b99f9c5a92d3cd,BLD: Fix race condition (#54958),BLD: Setup meson builds (#49115),racescondition,2025-05-14 21:53:16,pandas_security_analysis
commit-b342331c5193a4080e4ba7c47a4063caedade38c,doc/source/whatsnew/v0.20.0.txt,CWE-690,3ac83eb3102d9aa9d2dd9d58fe9c92579cf75427,BUG: Fix bug in window function count should count anything non-null,Apply fontsize to both x- and y-axis tick labels (#15161) * Apply fontsize to both x- and y-axis tick labels * Add tests * Add note in whatsnew,,2025-05-14 21:54:16,pandas_security_analysis
commit-fecb2ca8559ceee5ce1e4ecd48c7e8a7560d4ce0,pandas/core/window.py,CWE-690,3ac83eb3102d9aa9d2dd9d58fe9c92579cf75427,BUG: Fix bug in window function count should count anything non-null,COMPAT: Further Expand Compatibility with fromnumeric.py Follow-on to #12810 by expanding compatibility with fromnumeric.py in the following modules:   1) tslib.pyx   2) window.py   3) groupby.py and resample.py (shared classes) Closes #12811. Author: gfyoung <gfyoung17@gmail.com> Closes #13148 from gfyoung/fromnumeric-compat-continued and squashes the following commits: eb4762c [gfyoung] COMPAT: Expand compatibility with fromnumeric.py,,2025-05-14 21:54:17,pandas_security_analysis
commit-391f46af129d214056ec9109caa4c53b7dddfb04,doc/source/whatsnew/v0.16.0.txt,CWE-120,c6c9c0bfc10e24bdd0e4d32f7a8faf7fbc2294b2,BUG: Fix buffer overflows in tokenizer.c with certain malformed input files. GH9205,BUG: allow for empty SparseSeries SparsePanel constructors (GH9272),buffersoverflow,2025-05-14 21:54:32,pandas_security_analysis
commit-ff124f9efec602ad6de552a0ba41428d69615612,doc/source/whatsnew/v0.16.0.txt,CWE-89,337b94d3f5be6d9beca2386f7d0188dfc3e8fa08,BUG: Dynamically created table names allow SQL injection,BUG: fix isnull behavior when passed PeriodIndex with NaT (GH 9129) PERF: use unique and isnull in nunique instead of value_counts.,:SQLNoSQLsinjection,2025-05-14 21:54:32,pandas_security_analysis
commit-db2114aa1d3aa527ffd92ee431bdd164f042b840,vb_suite/suite.py,CWE-502,d9225fb9158e16f35457ac8e39d6d4283571aa56,ENH: support for msgpack serialization/deserialization,TST: renamed io b/c module conflict; made suite check for config,deserialization,2025-05-14 21:54:38,pandas_security_analysis
commit-eaf52459652acc11f0df06f2e4c2ea41b18eeca1,requirements/static/ci/py3.7/windows.txt,CWE-937,fce314e0114f68d3e07680461eba7e2495850829,Upgrade to `cryptography==42.0.5` due to a few security issues,Let's fake the filesystem instead Signed-off-by: Pedro Algarvio <palgarvio@vmware.com>,,2025-05-15 08:23:47,salt_security_analysis
commit-fa22b3985464f7f8cbfa6f5f3255e1c547d99a67,requirements/static/ci/py3.8/cloud.txt,CWE-937,fce314e0114f68d3e07680461eba7e2495850829,Upgrade to `cryptography==42.0.5` due to a few security issues,Add pypsexec requirement for cloud tests,,2025-05-15 08:23:48,salt_security_analysis
commit-fe075aaace475a7c5094faa2aaecc0d140584754,requirements/static/ci/py3.9/linux.txt,CWE-937,fce314e0114f68d3e07680461eba7e2495850829,Upgrade to `cryptography==42.0.5` due to a few security issues,Distro is now a hard dependency Refs #55310 Refs #55835,,2025-05-15 08:23:51,salt_security_analysis
commit-d3fad04d9e942d858b8b348fee586f171370627f,requirements/static/pkg/py3.12/windows.txt,CWE-937,fce314e0114f68d3e07680461eba7e2495850829,Upgrade to `cryptography==42.0.5` due to a few security issues,Bump to `pycryptodome==3.19.1` and `pycryptodomex==3.19.1` due to https://github.com/advisories/GHSA-j225-cvw7-qrx7 Signed-off-by: Pedro Algarvio <palgarvio@vmware.com>,,2025-05-15 08:23:55,salt_security_analysis
commit-e5c58d9ab9d58851c098ce4cee4eae2e7b5cd953,requirements/static/pkg/py3.7/windows.txt,CWE-937,fce314e0114f68d3e07680461eba7e2495850829,Upgrade to `cryptography==42.0.5` due to a few security issues,Bump pyzmq to 25.0.2 on Windows,,2025-05-15 08:23:56,salt_security_analysis
commit-f6fd24f125e313e60a36c73f4f8e05cf67b9cb76,requirements/static/pkg/py3.9/linux.txt,CWE-937,fce314e0114f68d3e07680461eba7e2495850829,Upgrade to `cryptography==42.0.5` due to a few security issues,Upgrade some requirements These requirements should be kept up-to-date as much as possible. Signed-off-by: Pedro Algarvio <palgarvio@vmware.com>,,2025-05-15 08:23:58,salt_security_analysis
commit-fc7d0a929642a132b1743979fe78e2421aedd292,requirements/static/pkg/py3.9/windows.txt,CWE-937,fce314e0114f68d3e07680461eba7e2495850829,Upgrade to `cryptography==42.0.5` due to a few security issues,"Merge freeze into master (#62438) * fixes saltstack/salt#62372 unable to use random shuffle and sample functions as Jinja filters * move random_shuffle and random_sample logic to utils * static seed in tests seems to have shifted * static seed in tests require hash module * Change Tiamat to onedir in release notes * Reinstate known issues * Update release notes with onedir package support policy * need to check the version of Netmiko python library and then import the exceptions from different locations depending on the result. * Adding changelog. * swap out if...else for double try...except. * Remove extra fix we don't need anymore * [Docs] include onedir system python note * Update all platforms to use pycparser 2.21 or greater for Py 3.9 or higher; fixes fips fault with openssl v3.x * Remove the PyObjC dependency Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * Add ""<tiamat> python"" subcommand to allow execution or arbitrary scripts via bundled Python runtime * Document usage of bundled Python runtime for Client API * Use explicit locals for custom script execution; handle exception in similar fashion as Python * Remove old __file__ replacement * Apply suggestions from code review Co-authored-by: Pedro Algarvio <pedro@algarvio.me> Co-authored-by: nicholasmhughes <nicholasmhughes@gmail.com> Co-authored-by: Alyssa Rock <alyssa.rock@gmail.com> Co-authored-by: Gareth J. Greenaway <gareth@saltstack.com> Co-authored-by: Twangboy <leesh@vmware.com> Co-authored-by: David Murphy < dmurphy@saltstack.com> Co-authored-by: Pedro Algarvio <palgarvio@vmware.com> Co-authored-by: Lukas Raska <lukas@raska.me> Co-authored-by: Pedro Algarvio <pedro@algarvio.me>",,2025-05-15 08:23:58,salt_security_analysis
commit-821dc29b3dd3792415f16f4fde175dc8d1201aec,requirements/static/ci/common.in,CWE-89,4112f05b771d52e271f6e7ba656ab1c3d27f72c9,Bump to `sqlparse>=0.4.4` due to https://github.com/advisories/GHSA-rrm6-wvj7-cwh2,Bump requirements to address a few security issues,,2025-05-15 08:40:41,salt_security_analysis
commit-cea048be5f8250e45efee29c9e9f2753a2b8da54,requirements/static/ci/py3.10/freebsd.txt,CWE-89,4112f05b771d52e271f6e7ba656ab1c3d27f72c9,Bump to `sqlparse>=0.4.4` due to https://github.com/advisories/GHSA-rrm6-wvj7-cwh2,Update docs related requirements Signed-off-by: Pedro Algarvio <palgarvio@vmware.com>,,2025-05-15 08:40:42,salt_security_analysis
commit-e8b8df84bd62ee7c1429652c3751f6a8523f99a4,requirements/static/ci/py3.10/linux.txt,CWE-89,4112f05b771d52e271f6e7ba656ab1c3d27f72c9,Bump to `sqlparse>=0.4.4` due to https://github.com/advisories/GHSA-rrm6-wvj7-cwh2,Match CI requirements to those of PKG,,2025-05-15 08:40:43,salt_security_analysis
commit-f59bf99cdab72478b12131130b17c1805145d6b0,requirements/static/ci/py3.10/windows.txt,CWE-89,4112f05b771d52e271f6e7ba656ab1c3d27f72c9,Bump to `sqlparse>=0.4.4` due to https://github.com/advisories/GHSA-rrm6-wvj7-cwh2,Drop `pycurl` requirement; see https://github.com/saltstack/relative-environment-for-python/issues/50 Properly compile windows requirements on Py3.10 Signed-off-by: Pedro Algarvio <palgarvio@vmware.com>,,2025-05-15 08:40:43,salt_security_analysis
commit-7969d09be9399338fb3ec605b10c65c6ab74da8b,requirements/static/ci/py3.7/windows.txt,CWE-89,4112f05b771d52e271f6e7ba656ab1c3d27f72c9,Bump to `sqlparse>=0.4.4` due to https://github.com/advisories/GHSA-rrm6-wvj7-cwh2,Bump to `wheel==0.38.4` due to https://github.com/advisories/GHSA-qwmp-2cf2-g9g6 Signed-off-by: Pedro Algarvio <palgarvio@vmware.com>,,2025-05-15 08:40:45,salt_security_analysis
commit-f65794e9e46f551d1d8b91681aebbe2820c4b25a,requirements/static/ci/py3.9/cloud.txt,CWE-89,4112f05b771d52e271f6e7ba656ab1c3d27f72c9,Bump to `sqlparse>=0.4.4` due to https://github.com/advisories/GHSA-rrm6-wvj7-cwh2,Fix cloud requirements,,2025-05-15 08:40:47,salt_security_analysis
commit-9bccfcf9c4a1db46a9327fbdecb1114df01667a3,requirements/static/ci/py3.9/lint.txt,CWE-89,4112f05b771d52e271f6e7ba656ab1c3d27f72c9,Bump to `sqlparse>=0.4.4` due to https://github.com/advisories/GHSA-rrm6-wvj7-cwh2,Bump to pyjwt==2.4.0 due to CVE-2022-29217 Twilio also had to be upgraded because it was locked to the vulnerable pyjwt version. Signed-off-by: Pedro Algarvio <palgarvio@vmware.com>,,2025-05-15 08:40:48,salt_security_analysis
commit-fb5a7136432ceee2839a512f1e72d158d1692b08,requirements/static/ci/py3.9/linux.txt,CWE-89,4112f05b771d52e271f6e7ba656ab1c3d27f72c9,Bump to `sqlparse>=0.4.4` due to https://github.com/advisories/GHSA-rrm6-wvj7-cwh2,Linux and FreeBSD packaging requirements now include CherryPy. This mostly affects Tiamat builds of Salt.,,2025-05-15 08:40:48,salt_security_analysis
commit-d9343cca650d7197d3f6e107ffd506d25a8748ab,requirements/static/ci/py3.9/windows.txt,CWE-89,4112f05b771d52e271f6e7ba656ab1c3d27f72c9,Bump to `sqlparse>=0.4.4` due to https://github.com/advisories/GHSA-rrm6-wvj7-cwh2,Merge forward 3004.2 (#62200) * Check only ssh-rsa encyption for set_known_host * Windows test fix * Fix pre-commit * add CentOS Stream to _OS_FAMILY_MAP; fix #59161 * added changelog and test * fix syntax * Use centosstream 8 for testing * Use ? for matching spaces Technically this isn't *quite* right as 'CentOSyStream' would also match; but it's pretty reasonable: - OS grains shouldn't ever be that kind of close - This test is only swapping out spaces; and only for the os grain. That   would mean there would have to be two OSes with grains that only   differ by one having a space where another one has any other   character. - This test really isn't even about matching grains; we're just using   compound matching and that's a reasonable one to use. * Add centos stream when detecting package manager name * Fix pre-commit * Remove tests for fedora 32/33 EOL * Remove tests for fedora 32/33 EOL * Remove tests for fedora 33 EOL * Use centosstream 8 for testing * Use ? for matching spaces Technically this isn't *quite* right as 'CentOSyStream' would also match; but it's pretty reasonable: - OS grains shouldn't ever be that kind of close - This test is only swapping out spaces; and only for the os grain. That   would mean there would have to be two OSes with grains that only   differ by one having a space where another one has any other   character. - This test really isn't even about matching grains; we're just using   compound matching and that's a reasonable one to use. * 3002.9: Fix pre-commit * 3003.5 Fix pre-commit * [3002.9] Replace use of 'sl' with 'paper' for Arch tests; due to 'sl' having key issues * Remove mojave testing * Remove mojave and high sierra testing * Remove mojave testing * [3002.9] Fix cloud vultr size issue * Update package name to aspnetcore-runtime-6.0 for redhat 8 pkg tests * Update package name to aspnetcore-runtime-6.0 for redhat 8 pkg tests * change amazon linux AMI * Migrate `unit.modules.test_gpg` to PyTest * Don't leave any `gpg-agent`'s running behind Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * Start a background process to generate entropy. Some tests have failed because of not enough entropy which then makes the test timeout. Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * A different approach at generating entropy Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * Turn entropy generation into a helper Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * change amazon linux AMI * change amazon linux AMI * [3004.2] Fix cloud vultr size issue * Fix cloud requirements * Skip pam tests on windows * Update ami to try to get the tests running * Update amis to try to get the tests running * Fixing test_publish_to_pubserv_ipc_tcp; moving the call to socket.socket into the while loop. * Add static requirements for 3.8 and 3.9 on Windows * Fix requirements Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * The whole CI process is already slower than GH Actions; no caches. * Pre-commit must not run with ``PIP_EXTRA_INDEX_URL`` set. * Lint fixes Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * Compile cloud requirements * Run add requirements files for 3.8 and 3.9 * Fix docs and cloud requirements * [3003.5] Fix cloud vultr size issue * Windows test fix * Skip test if docker not running * [3003.5] Fix pre-commit * Update Markup and contextfunction imports for jinja versions >=3.1. * update bootstrap to 2022.03.15 * update bootstrap to 2022.03.15 * skipping tests/pytests/integration/modules/test_virt.py on 3002.x and 3003.x branches. * Windows test fix * Skip PAM tests on Windows Windows has no ctypes with the PAM bits; so we should go ahead and skip on Windows. * Skip PAM auth tests on Windows Windows lacks the correct bits; so... * Fix pre-commit * Skipping tests since they're also skipped on the master branch Fixes #403 Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * Skip test that only runs because the patch binary is now available. The feature though; was only added in 3004. Fixes #404 Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * Skip test which is only supposed to run in Linux Fixes https://github.com/saltstack/salt-priv/issues/405 Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * GPG tests do not work on windows yet * Fix tests * Fix pre-commit * skip tests.integration.modules.test_mac_brew_pkg.BrewModuleTest.test_list_upgrades and tests.integration.modules.test_state.StateModuleTest.test_get_file_from_env_in_top_match on Mac OS. * skip tests.integration.modules.test_mac_brew_pkg.BrewModuleTest.test_list_upgrades and tests.integration.modules.test_state.StateModuleTest.test_get_file_from_env_in_top_match on Mac OS. * Removing skip; moving it to different PR. * Skipping tests on 3002.9. * test fix * Do not run patch tests on 3003.5. Feature not added till 3004 * skipping tests/pytests/integration/modules/test_virt.py on 3002.x and 3003.x branches. * Fix pre-commit * [3004.2] Update freebsd ami * Bump the git version for freebsd CI tests * removing versions that are no longer available from the tests.pytests.scenarios.compat.test_with_versions tests. * Skip tests on windows when NOT using static requirements Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * removing versions that are no longer available from the tests.pytests.scenarios.compat.test_with_versions tests. * test_issue_36469_tcp causes a fatal python error when run on Mac OS; so skipping. * Fix tests * Fix pre-commit * Do not run patch tests on 3003.5. Feature not added till 3004 * Skip archive tar tests on windows * [3002.9] Skip archive tar tests on windows * GPG tests do not work on windows yet * Skip test which is only supposed to run in Linux Fixes https://github.com/saltstack/salt-priv/issues/405 Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * Skip test that only runs because the patch binary is now available. The feature though; was only added in 3004. Fixes #404 Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * Skipping tests since they're also skipped on the master branch Fixes #403 Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * Fix pre-commit * Fix pre-commit * Fix pre-commit * Fix pre-commit * retry sdb.get if it returns None None is an entirely valid return - see EtcdClient.get in salt/utils/etcd_util.py * drop py2/six * fix etcd sdb.set as well * Fix etdcd-sdb test failure If docker container is up and running; but etcd isn't responding yet it's possible that we get some failing tests. This should wait a reasonable amount of time for things to come up. Or just skip the test. * Fix etdcd-sdb test failure If docker container is up and running; but etcd isn't responding yet it's possible that we get some failing tests. This should wait a reasonable amount of time for things to come up. Or just skip the test. * Skip the tests from unit/transport/test_zero.py that are hanging on Mac. * skip tests in tests/pytests/unit/states/test_archive.py for 3002.9 * 3002.9 Skipping  CA permissions tests on Windows; similar to 3003.5 and 3004.2 * change skipif to skip * Rollback Windows AMIs to use Python 3.7 * Rollback AMI's to Python 3.7... fix tests * Fix failing test_archive tests * Build using pyenv * Add symlinks to openssl and rpath * Add shasum for zeromq 4.3.4 * Fix docs on scripts * Build zeromq earlier; fix symlinks * Bring 61446 to 3004.1 branch * Add changelog and tests * Fix schedule test flakiness * Retry with new port if in use * fixing failing tests; ensuring that the correct path is used. * fixing failing tests; ensuring that the correct path is used. * fixing failing tests; ensuring that the correct path is used. * Re-enable tiamat-pip on windows Signed-off-by: Pedro Algarvio <palgarvio@vmware.com> * Bump duration time for windwos for test_retry_option_success * Skip test cauing hangs * go go pylint disable * more pre-commit * oh lint * so many weird hook failures * Add unit tests for PAM auth CVE We could add functional tests if it's important enough; but this is the narrowest place to test. * Fix PAM auth CVE Credit to @ysf Previously we weren't checking the result of PAM_ACCT_MGMT. * pylint disable * rewrite hook changes * Skip PAM auth tests on Windows Since Windows ends out lacking the correct bits; no need to run tests there. * pre-commit fixes * docs 3004.2 release * Fix bug in tcp transport * Fix the test_zeromq_filtering test * skip test_npm_install_url_referenced_package on centos 7 and 8. * Swapping CentOS Linux-8 for CentOS Stream-8 * Update build scripts to use pyenv * Fix tests on MacOS * Fix bug in tcp transport * Fix test failures * Update release notes and man pages for 3003.5 * Add 3002.9 changelog; release notes; man pages * Update doc/topics/releases/3002.9.rst Co-authored-by: Megan Wilhite <mwilhite@vmware.com> * Fix requirements * Fix imports * Test fixup * Fix merge warts * fix merge wart in changelog * Fix merge warts in tests Co-authored-by: krionbsd <krion@FreeBSD.org> Co-authored-by: Megan Wilhite <megan.wilhite@gmail.com> Co-authored-by: Alexander Kriventsov <akriventsov@nic.ru> Co-authored-by: Megan Wilhite <mwilhite@vmware.com> Co-authored-by: Wayne Werner <wwerner@vmware.com> Co-authored-by: Gareth J. Greenaway <gareth@saltstack.com> Co-authored-by: David Murphy < dmurphy@saltstack.com> Co-authored-by: Twangboy <leesh@vmware.com> Co-authored-by: MKLeb <calebb@vmware.com> Co-authored-by: Pedro Algarvio <pedro@algarvio.me> Co-authored-by: Pedro Algarvio <palgarvio@vmware.com> Co-authored-by: Thomas Phipps <tphipps@vmware.com> Co-authored-by: Frode Gundersen <frogunder@gmail.com> Co-authored-by: Alyssa Rock <alyssa.rock@gmail.com> Co-authored-by: Alyssa Rock <43180546+barbaricyawps@users.noreply.github.com>,,2025-05-15 08:40:48,salt_security_analysis
commit-0b2a5613b345f17339cb90e60b407199b3d26980,salt/minion.py,CWE-362,76d784cc783a8fa85391a025a5c8ced77334b5e4,Prevent race condition on SIGTERM for the minion,Blacken salt,racescondition,2025-05-15 08:45:40,salt_security_analysis
commit-ebd3ebe67ed1c89377156e4a2478560c406f9235,salt/modules/lxd.py,CWE-362,82116eca00959c1165f8d4661d91088a554a1c8b,lxd: fix possible race condition when adding multiple devices,"Fix various spelling mistakes in master branch (#55954) * Fix typo of additional Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of against Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of amount Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of argument Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of attempt Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of bandwidth Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of caught Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of compatibility Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of consistency Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of conversions Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of corresponding Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of dependent Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of dictionary Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of disabled Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of adapters Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of disassociates Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of changes Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of command Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of communicate Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of community Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of configuration Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of default Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of absence Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of attribute Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of container Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of described Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of existence Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of explicit Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of formatted Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of guarantees Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of hexadecimal Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of hierarchy Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of initialize Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of label Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of management Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of mismatch Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of don't Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of manually Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of getting Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of information Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of meant Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of nonexistent Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of occur Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of omitted Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of normally Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of overridden Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of repository Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of separate Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of separator Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of specific Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of successful Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of succeeded Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of support Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of version Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of that's Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of ""will be removed"" Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of release Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of synchronize Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of python Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of usually Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of override Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of running Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of whether Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of package Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of persist Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of preferred Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of present Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix typo of run Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix spelling mistake of ""allows someone to..."" ""Allows to"" is not correct English. It must either be ""allows someone to"" or ""allows doing"". Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix spelling mistake of ""number of times"" Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix spelling mistake of msgpack Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix spelling mistake of daemonized Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix spelling mistake of daemons Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix spelling mistake of extemporaneous Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix spelling mistake of instead Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com> * Fix spelling mistake of returning Signed-off-by: Benjamin Drung <benjamin.drung@cloud.ionos.com>",racescondition,2025-05-15 08:45:49,salt_security_analysis
commit-c9eebf2ebf99bf2db104a5234eaf8aeef0b7198d,.ci/kitchen-ubuntu1604-py3-pycryptodomex,CWE-310,b03e79ca8fe91aec8c2dd80e8a276d02f2f3d631,Merge pull request #56625 from s0undt3ch/hotfix/crypto,add remaining branch tests to pr tests,,2025-05-15 08:47:55,salt_security_analysis
commit-ea0acbabf6b543c71827ca8f9c279dbac3f51526,pkg/osx/req.txt,CWE-310,b03e79ca8fe91aec8c2dd80e8a276d02f2f3d631,Merge pull request #56625 from s0undt3ch/hotfix/crypto,Update dependencies in req.txt for OSX,,2025-05-15 08:47:55,salt_security_analysis
commit-c85e03ecf7f9f60f58b91f8261b4715c9002df80,pkg/smartos/esky/zeromq_requirements.txt,CWE-310,b03e79ca8fe91aec8c2dd80e8a276d02f2f3d631,Merge pull request #56625 from s0undt3ch/hotfix/crypto,allow for newer pyzmq in esky packages,,2025-05-15 08:47:56,salt_security_analysis
commit-f046e2e90188b98d3f7ff925014d00bb12afcd77,pkg/suse/salt.spec,CWE-310,b03e79ca8fe91aec8c2dd80e8a276d02f2f3d631,Merge pull request #56625 from s0undt3ch/hotfix/crypto,suse package updated to 0.15.2 added salt user for salt-master daemon process,,2025-05-15 08:47:56,salt_security_analysis
commit-d9791c393f6748828e66da256da52e03af2198ac,requirements/static/py3.6/windows.txt,CWE-310,b03e79ca8fe91aec8c2dd80e8a276d02f2f3d631,Merge pull request #56625 from s0undt3ch/hotfix/crypto,Revert and fix windows requirements,,2025-05-15 08:47:59,salt_security_analysis
commit-c2ae2d5eceadb85ab26619fa452dc2ce5ce9b578,requirements/static/py3.7/darwin.txt,CWE-310,b03e79ca8fe91aec8c2dd80e8a276d02f2f3d631,Merge pull request #56625 from s0undt3ch/hotfix/crypto,We now compile requirements for each of the supported minor version,,2025-05-15 08:47:59,salt_security_analysis
commit-d4cd526306b7db52663f56c637aa5d3fd788dffb,requirements/static/py3.7/linux.txt,CWE-310,b03e79ca8fe91aec8c2dd80e8a276d02f2f3d631,Merge pull request #56625 from s0undt3ch/hotfix/crypto,Bump PyTest Salt package Previous pytest-salt packages didn't include the `sitecustomize.py` file required for coverage tracking of multiprocessing processes. This new version fixes that.,,2025-05-15 08:47:59,salt_security_analysis
commit-f4ae97f7951a468510fa802b1cb54dac7d959075,requirements/static/py3.7/windows.txt,CWE-310,b03e79ca8fe91aec8c2dd80e8a276d02f2f3d631,Merge pull request #56625 from s0undt3ch/hotfix/crypto,Upgrade etcd to > 0.4.2,,2025-05-15 08:48:00,salt_security_analysis
commit-cc8c3f09c6e91f4bb80fe46ede4028a5b25ef8d9,requirements/static/py3.9/linux.txt,CWE-310,b03e79ca8fe91aec8c2dd80e8a276d02f2f3d631,Merge pull request #56625 from s0undt3ch/hotfix/crypto,Update static requirements to include Py3.8 and Py3.9 (except windows) Windows required package pywin32 doesn't state that it support any python version above Py3.7,,2025-05-15 08:48:01,salt_security_analysis
commit-ffd1a8ab0f2a0b78ca8004ba911f34443e80b49a,salt/master.py,CWE-362,9f1fe42b3cca0809616e2782a13b8bbf4dd4e3c9,Call os.fork less to avoid race conditions,"Introduce ""log_fmt_jid"" and ensure we are passing opts to the RequestContext so we have control the format of what the JID will look like in the logs.",racescondition,2025-05-15 09:20:07,salt_security_analysis
commit-d162a886298a957f9e8eaac883d03a1320d29a9e,salt/metaproxy/proxy.py,CWE-362,9f1fe42b3cca0809616e2782a13b8bbf4dd4e3c9,Call os.fork less to avoid race conditions,Adding salt/metaproxy/proxy.py and tests/unit/modules/test_match.py,racescondition,2025-05-15 09:20:07,salt_security_analysis
commit-f57dce2224f428a997cc1dede284f3f032c82d54,salt/cloud/clouds/proxmox.py,CWE-362,49599475b1072ac8222e175ad35fa5f21e528103,Race condition still exists at one second timeout.,Correct usage of 'CLI Example' in documentation blocks This mass-edit was done using the following shell command: ack --python -l '^(\s*)CLI Example::$' \ | xargs sed -i \ 's/^\(\s*\)CLI Example::/\1CLI Example:\n\n\1.. code-block:: bash/g',racescondition,2025-05-15 09:23:40,salt_security_analysis
commit-2bedadfadb63a3becafb57bc00acd09dfdc2fcc7,tests/integration/modules/test_win_pkg.py,CWE-362,e5ea3f195694177cfe03812d12ae0eba59e77b87,Try running fsync to avoid fs caching race condition,Add windows pkg module integration tests,racescondition,2025-05-15 09:23:40,salt_security_analysis
commit-ffcfad1570ba1eefb3f00e24d977c1bfe99b16da,salt/runners/manage.py,CWE-362,2ac70cfab5eae46f2abe38981cf28fc22dfc0310,Fix a race condition in manage runner,Include localhost minions in presence detection for runner Closes #30739,racescondition,2025-05-15 09:24:03,salt_security_analysis
commit-ebc57b978ff71923fc015fe6c8f513d8d9003d01,salt/states/git.py,CWE-362,093c0c2f7767b8f9bdd66671a2407a9e53b858b3,Fix race condition in git.latest,"Demo of saltstack/salt#2417 module standards choice ""1"" I left a note in ""salt/modules/git.py"" for the _git_run method. For ""salt/states/git.py""; the two public methods illustrate the two different methods utilizing the proposed module standards in a salt state. * ""git.latest"" uses ""try[..]catch"" blocks to return the error from the module   as part of the state's return output. * errors from modules called in ""git.present"" pass through to the minion which   ""[...]itself does catch all published executions exceptions and returns based   on that information"" [1] As you will see; implementing the standard is quick; easy; simple; and non invasive. In fact; most of my time was spent writing this commit message. [1] thatch45; https://github.com/saltstack/salt/issues/2417#issuecomment-9969939",racescondition,2025-05-15 09:24:08,salt_security_analysis
commit-39bc21530e72cf03dea466fbcac3a90aba239294,salt/cloud/clouds/vultrpy.py,CWE-362,aae3d14ea4758a7c0e5d05eb2adb53b76f3859ff,fix vultr cloud race condition to match on 0*,Initial commit of Vultr driver,racescondition,2025-05-15 09:24:20,salt_security_analysis
commit-fe7ee7a4705a1b9a6e7997eed1c91b13f374d523,salt/returners/local_cache.py,CWE-362,21b7123a60c647df0d56ff6fdb42ff91a6ff97fc,Catch oserror for race condition,Fix crashing Maintenence process The first time through the loop we deleted the dir and then stack traced the second time through the loop if we hit the other conditional. Resolves #33544,racescondition,2025-05-15 09:24:46,salt_security_analysis
commit-fe62ce513fdaf804b58656bfab0622ee3fadadbe,salt/minion.py,CWE-362,fb968f58d6fbcd0d972db37c6a16cee92da7bec8,Fix race condition with self.connected on TCP transport,Handle errors sending mine datas to master Fix for #25720,racescondition,2025-05-15 09:24:47,salt_security_analysis
commit-ff510664635119302a3d603171c983a47fcbe891,salt/config/__init__.py,CWE-552,e5da261c71fed8a80fe941d72144d521f0500779,fix bug introduced by moving config into directory,Possible fix for #5649 * Rewrite a client's interface directive to localhost if it's set to 0.0.0.0.,,2025-05-15 09:24:53,salt_security_analysis
commit-5ba28e4b8c4757d978ec199804e4b03543a8a463,salt/log/handlers/fluent_mod.py,CWE-362,32d0e8d0281d01494852543a195b65754f7448ae,Fixed race condition in fluent_log_handler,Adding a new log handler to support fluent protocol.,racescondition,2025-05-15 09:26:43,salt_security_analysis
commit-1697094b0bb2fb27cbc5f03832bbad4e70e59c51,salt/utils/raetevent.py,CWE-362,bf3b20a787e2a848af0146b0c5ff69e7822a3681,Stop calling destroy on __del__ as there is a race condition where modules are unloaded so the close of the stack.server will fail with exception. Need to call destroy manually when done using the stack,Add RunnerEvent to rat,racescondition,2025-05-15 09:28:42,salt_security_analysis
commit-fe8553d11d988b481967911249e7594a44bfda6f,salt/daemons/flo/master.flo,CWE-362,182f4b08f054eab056fe69285adfd9fc3579cbfc,Fix race condition with Raet Salt Caller where the minion caller could cleanup (erase) the cli salt-call lanestack,Use self.opts within the behaviors This uses the move to have port etc defined in the behaviors and not in the floscript,racescondition,2025-05-15 09:28:46,salt_security_analysis
commit-8ef2fce934e38e135898b707a1491edf56d675ac,salt/client/raet/__init__.py,CWE-362,c6e3775e1a90845d57ad5f86b1315b236730167f,Now using new raet.nacling.uuid function to generate the yard names this should prevent any race conditions in yard names that were occuring with the old way of using gen_jid which was only microsecond rsolution and therefore might generate two yards with the same name.,Add raet LocalClient - just starting,racescondition,2025-05-15 09:30:20,salt_security_analysis
commit-f4db34b64aea2917d44128e0b69c4da3a05e25df,salt/utils/raetevent.py,CWE-362,c6e3775e1a90845d57ad5f86b1315b236730167f,Now using new raet.nacling.uuid function to generate the yard names this should prevent any race conditions in yard names that were occuring with the old way of using gen_jid which was only microsecond rsolution and therefore might generate two yards with the same name.,Fix exception in yid management,racescondition,2025-05-15 09:30:21,salt_security_analysis
commit-d2f3addfd588ccf4119469ce7ef73b4bfdfeeaf7,salt/transport/road/raet/raeting.py,CWE-119,3d250eefdff89b4a26dee25e27e9b24748947475,Fixed bug where the buffer size of the udp socket reads did not match the raet max packet size Also changed names of packet size limits to match semantics better,Initial add of raet backend libs,,2025-05-15 09:33:57,salt_security_analysis
commit-fc245b08c9833969f1863c81534a67491a715890,salt/transport/road/raet/stacking.py,CWE-119,3d250eefdff89b4a26dee25e27e9b24748947475,Fixed bug where the buffer size of the udp socket reads did not match the raet max packet size Also changed names of packet size limits to match semantics better,Swith names of Joiner and Joinee Joinee is now initiating transaction from device that wishes to join and Joiner is corresponding transaction of device that is accepting the join request More consistent naming,,2025-05-15 09:33:57,salt_security_analysis
commit-fb6a01c22db41c9e41996e853f3a93c424936b8f,salt/transport/road/raet/test/test_stacking.py,CWE-119,3d250eefdff89b4a26dee25e27e9b24748947475,Fixed bug where the buffer size of the udp socket reads did not match the raet max packet size Also changed names of packet size limits to match semantics better,Basic support in packeting for segmentation and desegmentation Now need to add to message transaction,,2025-05-15 09:33:58,salt_security_analysis
commit-ce3e1ca09ccb298b096b59f2c28808501796b587,pkg/rpm/salt-minion,CWE-664,73a839d6372f3acf88f2b4ca5494d32612377399,Fix bug to allow for multiple PIDs to be returned,changing locations of python and salt binaries to be variables in init scripts; also changing how daemon functio nis called so it uses the full path,,2025-05-15 09:35:11,salt_security_analysis
commit-ea29aaefa91efe248f6e4510381cc929f489bd79,salt/cloud/clouds/cloudstack.py,CWE-79,3dd63bcebb97ced3d2f6ca7ac4b9c3b4c51ae809,Merge pull request #8688 from techhat/fixsshuser,Adding Windows support for cloudstack,XSScross-ssitesscripting,2025-05-15 09:36:09,salt_security_analysis
commit-f06d21ebf982569050e25f69b2a4b6f6756b591c,salt/cloud/clouds/digital_ocean.py,CWE-79,3dd63bcebb97ced3d2f6ca7ac4b9c3b4c51ae809,Merge pull request #8688 from techhat/fixsshuser,Only include `deploy_kwargs` in output if `show_deploy_args` is True.,XSScross-ssitesscripting,2025-05-15 09:36:09,salt_security_analysis
commit-e55c4271cd5cc84ad6e2ba474e13846f34336b2c,salt/cloud/clouds/gogrid.py,CWE-79,3dd63bcebb97ced3d2f6ca7ac4b9c3b4c51ae809,Merge pull request #8688 from techhat/fixsshuser,Change namespaced events from dots to slashes,XSScross-ssitesscripting,2025-05-15 09:36:09,salt_security_analysis
commit-fdda1f5a2ffa7da5cf91e1d9bc4e220c1d7c7d8f,salt/cloud/clouds/joyent.py,CWE-79,3dd63bcebb97ced3d2f6ca7ac4b9c3b4c51ae809,Merge pull request #8688 from techhat/fixsshuser,Add missing imports and make pylint happy.,XSScross-ssitesscripting,2025-05-15 09:36:10,salt_security_analysis
commit-fac6ef3c7fb08b2a6a07cf3124c5e72a76a9b879,salt/cloud/clouds/linode.py,CWE-79,3dd63bcebb97ced3d2f6ca7ac4b9c3b4c51ae809,Merge pull request #8688 from techhat/fixsshuser,Let linode driver use salt outputter,XSScross-ssitesscripting,2025-05-15 09:36:10,salt_security_analysis
commit-faab84570be4e37965ea1aba7eb665e4c428e8d7,salt/cloud/clouds/parallels.py,CWE-79,3dd63bcebb97ced3d2f6ca7ac4b9c3b4c51ae809,Merge pull request #8688 from techhat/fixsshuser,Initial commit of parallels driver (sans create),XSScross-ssitesscripting,2025-05-15 09:36:10,salt_security_analysis
commit-f943486ab73d50da114e3cce4fcf4058692e0454,salt/cloud/clouds/rackspace.py,CWE-79,3dd63bcebb97ced3d2f6ca7ac4b9c3b4c51ae809,Merge pull request #8688 from techhat/fixsshuser,Adding events to legacy rackspace,XSScross-ssitesscripting,2025-05-15 09:36:10,salt_security_analysis
commit-98cda60faa7097d70890b378330c58a67fade15c,salt/cloud/clouds/softlayer-hw.py,CWE-79,3dd63bcebb97ced3d2f6ca7ac4b9c3b4c51ae809,Merge pull request #8688 from techhat/fixsshuser,Allow sudo_password to be user-configurable,XSScross-ssitesscripting,2025-05-15 09:36:11,salt_security_analysis
commit-e7e96b10440c3d73a0f8d7116e5652c162eb527b,salt/cloud/clouds/softlayer.py,CWE-79,3dd63bcebb97ced3d2f6ca7ac4b9c3b4c51ae809,Merge pull request #8688 from techhat/fixsshuser,Fix typo with win_installer,XSScross-ssitesscripting,2025-05-15 09:36:11,salt_security_analysis
commit-fb432983831da429d302bb1cf0c175ce938750db,saltcloud/cli.py,CWE-88,8aaada1039edf3c7531cbc868bd46f15d216bdfe,Fix bug in cli argument parsing,Allow EC2 driver to use salt outputter,,2025-05-15 09:40:40,salt_security_analysis
commit-69b47b579bccc95d554ecbf2ac7824be4abec35d,third_party/xla/xla/hlo/tools/hlo_diff/BUILD,CWE-502,f7c804e3b4502e0ea53f99793b499db2f0519fd9,Add DiffResult serialization and deserialization.,Hlo-Diff is a semantic diff tool for HLO modules. It compares the graph structure of two HLO Modules focusing on the computational differences ignoring irrelevant changes such as instruction names; parameter ordering; layouts (in some instances) etc. The tool supports: 1. Diffing of large HLO Modules (>100k) nodes in <1 minute. 2. Summarized output of diffs highlighting what has changed for updated HLO instructions. Note only XLA's HLO format is supported at the moment. PiperOrigin-RevId: 744111765,deserialization,2025-05-14 15:56:57,tensorflow_security_analysis
commit-c4ebe045afaef3416d794623a72cf4eab41e8bb4,third_party/xla/xla/tools/multihost_hlo_runner/BUILD,CWE-502,bba7fc38d654b7430a1bddfd154639b3043c174c,Use custom HLO deserialization for HloUnoptimizedSnapshot.,[XLA][NFC] Minor cleanups to the functional HLO runner. PiperOrigin-RevId: 574452162,deserialization,2025-05-14 15:57:09,tensorflow_security_analysis
commit-ff81112eeb0677aa9364f528bb8378e053b6c104,third_party/xla/third_party/triton/temporary/series.bzl,CWE-362,3995a7e53ec766ac3475b87ab7fcfa6ec47d7f89,Fix race condition in FenceInsertionPass,[XLA:GPU] Move `triton_gpu.sparse_dot` conversion to LLVM pattern from Triton patch (`convert-triton-gpu-to-llvm` pass) to OpenXLA (`sparse-dot-to-llvm` pass). This relands a previous change; but this time the pattern is applied in a pass after `convert-triton-gpu-to-llvm` instead of before; which prevents an out-of-bounds access during axis analysis. Reverts 80f36caf93bc5adf6591d381c8a5a68dbf441fc2 PiperOrigin-RevId: 648304162,racescondition,2025-05-14 15:57:11,tensorflow_security_analysis
commit-d1a7c8ce9fc48eb61920db26a57f16cca02c4ce6,third_party/xla/xla/backends/gpu/runtime/cudnn_thunk.cc,CWE-502,c33c39a91736858f73e3ce35f2259c379c66773c,PR #21412: [GPU] Use single cuDNN handle for graph deserialization.,PR #9650: [XLA:GPU] Add cuDNN GEMM fusions. Imported from GitHub PR https://github.com/openxla/xla/pull/9650 This adds a new fusion compilation and execution path with corresponding tests. It will not trigger automatically yet; the mechanism constructing such fusions will be added in another commit. Also capture of CUDA graphs and wider support of fusions will be added in further commits. Functionality is intentionally limited to minimal testable for now to make reviewing easier. Copybara import of the project: -- 9071b7951009e587998bf6f20f69ca8c81d56167 by Ilia Sergachev <isergachev@nvidia.com>: [XLA:GPU] Add cuDNN GEMM fusions. This commit adds a new fusion compilation and execution path with corresponding tests. It will not trigger automatically yet; the mechanism constructing such fusions will be added in another commit. Also capture of CUDA graphs and wider support of fusions will be added in further commits. Merging this change closes #9650 PiperOrigin-RevId: 609467714,deserialization,2025-05-14 15:57:13,tensorflow_security_analysis
commit-dc7596271f87485d18d6b70e18c69348042d6d03,third_party/xla/xla/stream_executor/cuda/cuda_dnn.h,CWE-502,c33c39a91736858f73e3ce35f2259c379c66773c,PR #21412: [GPU] Use single cuDNN handle for graph deserialization.,"Removes XLA uses of tsl::OpDeterminismRequired(). With this change; the --xla_gpu_deterministic_ops flag is now used wherever tsl::OpDeterminismRequired() was used previously. For XLA users who don't use TF (like JAX); --xla_gpu_deterministic_ops is now sufficient to get determinism on NVIDIA GPUs. Even without this change; the tf2xla bridge set --xla_gpu_deterministic_ops when OpDeterminismRequired() is true; so TF will still be deterministic by making OpDeterminismRequired() return true. I didn't remove all calls to OpDeterminismRequired() in the ROCm files yet (rocm_dnn.cc; rocm_blas.cc). Calling OpDeterminismRequired() from XLA has historically caused many linking issues in TF. Hopefully this fixes them. I created a NumericOptions struct with a single ""require_determinism"" bool. The struct is passed around in a lot of places. I created it because I plan on removing  uses of `tensor_float_32_execution_enabled()` from XLA as well; by adding a TF32 bool to the struct. PiperOrigin-RevId: 527079738",deserialization,2025-05-14 15:57:14,tensorflow_security_analysis
commit-fc92f6956e433673bb5f74251216b20f5afe94aa,third_party/xla/xla/stream_executor/dnn.h,CWE-502,c33c39a91736858f73e3ce35f2259c379c66773c,PR #21412: [GPU] Use single cuDNN handle for graph deserialization.,Remove wire-through only method StreamExecutor::createRnnStateTensorDescriptor. While here; changed the DnnSupport version to match XLA style. PiperOrigin-RevId: 602867362,deserialization,2025-05-14 15:57:15,tensorflow_security_analysis
commit-dd3cb34772ed6a70eb3b00f0a9206d814a21418a,third_party/xla/xla/backends/cpu/runtime/all_reduce_thunk.h,CWE-502,841fb442a023cf89154ad4824c198c0f6a43545f,[XLA:CPU] Implement deserialization from proto to thunks,[xla:cpu] Add trivial all-reduce thunk Add a minimal implementation to pass jax tests PiperOrigin-RevId: 644261274,deserialization,2025-05-14 15:57:16,tensorflow_security_analysis
commit-54c0be296a188dbd8311f4b47af1e68a572cf68d,third_party/xla/xla/backends/cpu/runtime/thunk.cc,CWE-502,841fb442a023cf89154ad4824c198c0f6a43545f,[XLA:CPU] Implement deserialization from proto to thunks,[xla:cpu] Add initial Thunk-based runtime implementation to XLA:CPU backend Using XLA:GPU Thunks as an example start XLA:CPU interpreter runtime from a basic definition of Thunk and BufferAllocations. Long term CPU and GPU Thunks will be unified under a shared XLA runtime. PiperOrigin-RevId: 636945087,deserialization,2025-05-14 15:57:19,tensorflow_security_analysis
commit-f89b28a16013511105ae2c8d45e0c76b22cda799,third_party/xla/xla/backends/cpu/runtime/thunk.h,CWE-502,841fb442a023cf89154ad4824c198c0f6a43545f,[XLA:CPU] Implement deserialization from proto to thunks,[xla:cpu] Add BufferUses vector to all XLA:CPU thunks Track read/write buffer slices for all Thunks to be able to infer correct concurrent schedule from a thunk sequence (coming next). PiperOrigin-RevId: 640533791,deserialization,2025-05-14 15:57:19,tensorflow_security_analysis
commit-fabcb276d1d19b013a31f97322064fe5ad214e95,third_party/xla/xla/backends/cpu/runtime/while_thunk.h,CWE-502,841fb442a023cf89154ad4824c198c0f6a43545f,[XLA:CPU] Implement deserialization from proto to thunks,[xla:cpu] Make WhileThunk non-blocking BlockUntilReady inside Thunk:Execute is illegal and leads to deadlocks. Run while loop asynchronously relying on AndThen callbacks. PiperOrigin-RevId: 655561921,deserialization,2025-05-14 15:57:20,tensorflow_security_analysis
commit-eafa8dbf71ff11a1cea5a0465f2f52ef74084e85,tensorflow/compiler/mlir/tensorflow/tests/xla_call_module_serialization.mlir,CWE-502,c391a3299dc40c40db47fe36f45fd4229607b89c,Set the XlaCallModule's StableHLO payload version during deserialization so that it can be used in re-serialization.,Add a pass to serialize stablehlo functions called by `tf.XlaCallModule` into bytecode and embed in the `module` attribute. PiperOrigin-RevId: 533560354,deserialization,2025-05-14 15:57:29,tensorflow_security_analysis
commit-f4c35ee538b52153ea34e6133f9004519f0f59b2,tensorflow/compiler/mlir/tfrt/transforms/ifrt/testdata/xla_call_host_callback.mlir,CWE-502,c391a3299dc40c40db47fe36f45fd4229607b89c,Set the XlaCallModule's StableHLO payload version during deserialization so that it can be used in re-serialization.,Test host callback with XlaCallModule. PiperOrigin-RevId: 605202727,deserialization,2025-05-14 15:57:30,tensorflow_security_analysis
commit-2d264f38fdf254caa340e7ddf35fd55289f15f69,tensorflow/core/kernels/BUILD,CWE-362,d4d41956d58299764ab19a020fb3abd65875b930,Fix race condition in sparse optimizers. We should always be holding an exclusive lock when modifying var->tensor() in `EnsureSparseVariableAccess`. If a shared lock is used during this modification; there is a possibility that de-allocated memory is read during (1) operations such as ResourceGather which uses shared locks for accessing tensors; and (2) a second thread that calls `EnsureSparseVariableAccess` with shared locks. This leads to segfaults.,Refactor training helper functions to separate library. Change: 154613254,racescondition,2025-05-14 15:57:53,tensorflow_security_analysis
commit-f27e37b646b12b731d4cabbc8d072447b6dac7e8,third_party/xla/xla/python/profiler.cc,CWE-502,03850ed22ff4ea3f3325b82698dd1e311f7146cb,[JAX] Fix FDO profile deserialization.,[JAX] Automatically share PGO data for GPU latency-hiding scheduler. Overall the idea is to collect profile data for each module given amount of times (which can be configured) then recompile the module with the aggregated profile data. 1. We need to track how many times each module were profiled and collect profiling results. For this i added a ProfileSessionRunner class at profile.py. The class can track how many times an instance of it was called to profile a session and also can aggregate profile results. 2. We need associate profiling session to the module at the interpreter. To do this i added a dictionary to pjit.py which associates Jaxpr with profile session runner. 3. The profile session runner should be passed to pxla.py and then called. 4. We need to correctly deal with fast path at the interpreter level; so JAX won't use HLO directly if PGLE need to be collected; but also JAX will not recompiled the module only for PGLE. See changes in pjit.py and in lru_cache.h 5. Once FDO is collected we need to share it between hosts to keep deterministic compilation. PiperOrigin-RevId: 638197166,deserialization,2025-05-14 15:58:03,tensorflow_security_analysis
commit-f833f2f9f055b8e1395bd9405b7dda2dfd9855f7,third_party/xla/xla/pjrt/BUILD,CWE-502,9e0b776952de3071cafe0bb20b637fbf88c2989e,Correctly propagate deserialization errors from `HloProgramSerDes`,[PJRT] Update PjRtBuffer::layout() to return PjRtLayout. Also updates callers (dlpack and similar code in py_array.cc). This further breaks the GPU plugin because I haven't updated the C API to use something similar to PjRtLayout. I will do so in a future series of changes. I went back and forth on whether layout() should return by value or reference (unique_ptr or const ref). I went with value to make the memory management easier -- it's hard to copy a PjRtLayout& without access to the subclass definition; and at least in Python we'll want layout objects to potentially outlive the buffers or executables they came from. PiperOrigin-RevId: 612971532,deserialization,2025-05-14 15:58:10,tensorflow_security_analysis
commit-c851db84f3dabd05abc1c498daa6ffb391437b24,third_party/xla/xla/pjrt/pjrt_executable.h,CWE-502,0fdf949b7bd6507495848a84705caaf3e2da61ab,Fix CompileMemoryStats::output_size_in_bytes field deserialization from proto.,[jax] Expose executable input layouts and add test for setting input layouts. This just does the underlying PJRT; IFRT; and pybind plumbing and doesn't expose this functionality directly in jax yet. PiperOrigin-RevId: 573331198,deserialization,2025-05-14 15:58:14,tensorflow_security_analysis
commit-fc8840beeed935cca32087475c7ad0267195feab,tensorflow/core/data/service/snapshot/BUILD,CWE-362,3ac48c8d5c36dd40db805dfe4694487d8b26ad8d,#tf-data-service Fix a race condition in ParallelTFRecordWriter.,#tf-data-service Add a class to read distributed snapshots. This is useful for unit tests for now. Later it can be extended to implement the distributed `load` op. PiperOrigin-RevId: 503467987,racescondition,2025-05-14 15:58:15,tensorflow_security_analysis
commit-fbe587c4c05d30a87712d5f23fe2112a6ab4330f,tensorflow/core/tfrt/saved_model/saved_model.cc,CWE-502,23e1e06854bc89b01d053a4145bb1eca364572c6,Add tsl metric to track deserialization of BEF and MLIR.,Change lazy loading to never be used with AOT PiperOrigin-RevId: 595793849,deserialization,2025-05-14 15:58:21,tensorflow_security_analysis
commit-fd8e184a6169c708bddce9e6cb34f70d3bb2d7f6,tensorflow/python/data/experimental/kernel_tests/service/distributed_save_test.py,CWE-362,254f993c51ea8c503082b66777bdffb43199509d,#tf-data-service Fix a race condition.,#tf-data-service Require fault tolerant mode for distributed snapshots. Otherwise; the dispatcher can't restore the list of snapshots and their splits. PiperOrigin-RevId: 597117178,racescondition,2025-05-14 15:58:25,tensorflow_security_analysis
commit-f7227a6ff131b2470e02231fb5238606926b9c1d,tensorflow/python/data/experimental/kernel_tests/service/distributed_save_load_ft_test.py,CWE-362,a099073ecfe5864df11679c3927d7bbe3150c8e3,#tf-data-service Fix a potential race condition in GetSnapshotSplit.,#tf-data-service Cancel split providers when the dispatcher shuts down. When the dispatcher shuts down; it will not accept heartbeat requests; and workers cannot report snapshot DONE progress. The in-flight split providers' GetNext may block infinitely. The fix is to cancel split providers when the dispatcher shuts down; so that in-flight requests can return a cancelled error; which the callers will retry. PiperOrigin-RevId: 592354282,racescondition,2025-05-14 15:58:25,tensorflow_security_analysis
commit-91f63a19775eb2f734362c02dee3ee9eecb14531,tensorflow/core/common_runtime/eager/context.h,CWE-362,7494487575eecff08ddbffc12e038661876ee835,Fix race condition in kernel caching.,Cache the op's device so it is not computed every time PiperOrigin-RevId: 444933239,racescondition,2025-05-14 15:58:27,tensorflow_security_analysis
commit-c0699c42222bbd8df8ac13525390c192bfd26fdd,tensorflow/compiler/mlir/quantization/tensorflow/BUILD,CWE-502,5f7a14ffdbe60a3c41c1ad3e2125840c8d08c6c5,Group the set of passes required for XlaCallModuleOp deserialization into a separate function.,quantizer: add GCE compatibility to TF quantizer & add build target for quantization passes PiperOrigin-RevId: 471556027,deserialization,2025-05-14 15:58:42,tensorflow_security_analysis
commit-fee881376914381062deb767759d144d0f07d760,tensorflow/compiler/mlir/quantization/tensorflow/python/BUILD,CWE-502,5f7a14ffdbe60a3c41c1ad3e2125840c8d08c6c5,Group the set of passes required for XlaCallModuleOp deserialization into a separate function.,Add TF Quantizer to TensorFlow pip package The list of APIs: - tf.experimental.quantization.quantize_saved_model - tf.experimental.quantization.QuantizationOptions - tf.experimental.quantization.QuantizationMethod - tf.experimental.quantization.QuantizationComponentSpec - tf.experimental.quantization.UnitWiseQuantizationSpec - tf.experimental.quantization.TfRecordRepresentativeDatasetSaver PiperOrigin-RevId: 557831935,deserialization,2025-05-14 15:58:43,tensorflow_security_analysis
commit-85c518b8d306204cd7111f321a4b7b204fc554f4,tensorflow/lite/simple_memory_arena.cc,CWE-120,4b4e10413f1f0caecf05ae8ac622a3ead4d73406,"Checking if offsets are under the allocation size allows for a buffer overflow; as ""zero"" offset is already an up-aligned index in the buffer. Use the data size instead.",Handle zero-sized TFLite tensor allocations PiperOrigin-RevId: 200277562,buffersoverflow,2025-05-14 15:58:45,tensorflow_security_analysis
commit-ff93129764edff1688fdefd30f6a673a8a91d4c1,tensorflow/core/common_runtime/eager/BUILD,CWE-362,7fcb746bc98b8b10042aca8c415e6619e981ac61,Fix race condition when two concurrent function executions use the same resource input.,Added a required dependency to BUILD file,racescondition,2025-05-14 15:58:54,tensorflow_security_analysis
commit-9ef3c85ff97c6c891a35d453668b19b742160413,tensorflow/core/data/service/snapshot/snapshot_manager.cc,CWE-362,f85a264ba0e393d4863f89d3616d7884c99e0a0f,Fix race condition in SnapshotAssignmentManager,#tf-data-service Limit workers' stream assignments across snapshots. PiperOrigin-RevId: 540747599,racescondition,2025-05-14 15:58:56,tensorflow_security_analysis
commit-6287abad3acc96346586e12a362a51dbbc93aa1a,tensorflow/compiler/mlir/tfrt/BUILD,CWE-502,85d5a350394b8b26baed04fbba0c019e1a5693b0,Added unit tests; aot check for loadsavedmodel; deserialization process for aot_packages if found; a new aot model and according unit testing.,Dynamically register tpu compiler passes This is to 1) Reduce binary size for cpu-only use cases; 2) Add interface for registering compiler passes for different TPU backends. PiperOrigin-RevId: 517175856,deserialization,2025-05-14 15:58:59,tensorflow_security_analysis
commit-c3bf33e372326de99935bea00a945170cf70d3f5,tensorflow/core/tfrt/saved_model/utils/BUILD,CWE-502,85d5a350394b8b26baed04fbba0c019e1a5693b0,Added unit tests; aot check for loadsavedmodel; deserialization process for aot_packages if found; a new aot model and according unit testing.,Re-enable TFRT in OSS PiperOrigin-RevId: 549134963,deserialization,2025-05-14 15:59:00,tensorflow_security_analysis
commit-fe06787177c93c2fb2ec1000593bbbc9672d961e,tensorflow/compiler/xla/python/ifrt/BUILD,CWE-502,45829c3e1fcdcf71c2bd59d44409d388d9d9ab23,[IFRT] Make Sharding deserialization to use a function to lookup devices,Migrate third_party/tensorflow/compiler/xla/python/ifrt/BUILD to use xla_cc_test PiperOrigin-RevId: 494848632,deserialization,2025-05-14 15:59:11,tensorflow_security_analysis
commit-cd35adffd39a87cc35ac9e29beeaf6efd08bb51a,tensorflow/compiler/xla/python/ifrt/device.cc,CWE-502,45829c3e1fcdcf71c2bd59d44409d388d9d9ab23,[IFRT] Make Sharding deserialization to use a function to lookup devices,[IFRT] Roll forward with fix: Add serialization/deserialization for shardings This change adds serialization/deserialization for the following IFRT sharding types: * `SingleDeviceSharding` * `OpaqueSharding` * `ConcreteSharding` * `ConcreteEvenSharding` * `HloSharding` `ShardingParamSharding` serialization/deserialization is not yet supported. Fix: Sharding serialization and deserialization are seperate library targets that are always linked. This makes its registration mechanism to always run even when the whole binary target is built using full static linking. PiperOrigin-RevId: 548020248,deserialization,2025-05-14 15:59:11,tensorflow_security_analysis
commit-f051c512a34943edd7d3702ec0c2906b391bb08d,tensorflow/compiler/xla/python/pjrt_ifrt/BUILD,CWE-502,45829c3e1fcdcf71c2bd59d44409d388d9d9ab23,[IFRT] Make Sharding deserialization to use a function to lookup devices,Change how test filter is set up to not disable --gtest_filter flag. PiperOrigin-RevId: 540723464,deserialization,2025-05-14 15:59:12,tensorflow_security_analysis
commit-6b89bd093bec28803131781de1f525a29e460872,tensorflow/compiler/xla/python/ifrt/BUILD,CWE-502,7b565ef16ba828224a63209f754d82831c5b0ef3,Add a deserialization option to `SerDes`,"Implement an extensible serialization interface for IFRT objects Many IFRT objects are ""open set""; where the base IFRT is not aware of all derived types. This makes it difficult to implement object serialization and deserialization because deserialization must be able to handle objects that are defined outside IFRT; which requires the base IFRT to discover deserialization methods for such objects. This CL implements a framework for implementing serializable objects in IFRT while keeping the open-set philosophy. In this framework; base IFRT objects that can be made serializable (e.g.; `xla::ifrt::CompileOptions`) inherit `Serializable`. Then; a separate `SerDes` class is implemented for such a type to define serialization/deserialization schemes and is registered to the base IFRT via `RegisterSerDes()`. Then; the base IFRT's `Serialize()` and `Deserialize()` use registered serdes objects to implement type-polymorphic serialization and deserialization. PiperOrigin-RevId: 543610582",deserialization,2025-05-14 15:59:22,tensorflow_security_analysis
commit-7685781da9fab54353ab732319189dda17a8ad73,tensorflow/compiler/xla/python/ifrt/compiler.cc,CWE-502,7b565ef16ba828224a63209f754d82831c5b0ef3,Add a deserialization option to `SerDes`,"[IFRT] IFRT API initial prototype IFRT (the Interim Framework Runtime) is a high-level ML runtime API that is designed to be used as the interface between a user-facing framework; such as JAX; PyTorch; or TensorFlow; and the runtimes below. The purpose of the IFRT is to make a framework portable across as wide a range of hardware configurations as possible. IFRT allows the framework to more or less declaratively express the work that needs to be done; and delegate policy choices about how to efficiently execute that work to the runtime implementations. The status quo is that PjRt (""pretty much just another runtime""); which is a low-level ML runtime API for XLA computations; doubles as a high-level ML runtime API in several deployment scenarios. This low-level ML runtime API was originally designed to abstract away implementation details of underlying hardware attached to a single local host; for example masking minor differences between generations of TPUs/GPUs and CPUs. However; PjRt nowadays is being asked to embrace vastly different scenarios such as scaling to distributed execution spanning thousands of accelerators on modern shared infrastructure. We believe that we have reached a point where we should bifurcate the current PjRt API; and allow the PjRt API and a new API; IFRT; to deviate to better support their intended use cases. Initially; because we are bifurcating the APIs rather than inventing a fundamentally new API; it is a design goal that it will be easy to migrate from PjRt to IFRT. Over time as the APIs deviate; such migration may become harder. IFRT requires careful prototyping as it is a new portable layer that would interact with multiple user-facing frameworks and low-level runtimes. Our initial prototyping effort aims at demonstrating that an IFRT implementation for PjRt enables existing PjRt users to use IFRT with little friction; removing several complexities caused by direct interaction with low-level runtime APIs. An IFRT prototype in the XLA source tree will accelerate this prototyping effort by sharing the building and testing infrastructure with XLA and will ensure coherent development of XLA and IFRT. Once early IFRT prototyping is complete we will consult with stakeholders to ensure both that all requirements are met; and also that there is a simple migration path from PjRt to IFRT for teams who will benefit from migration. PiperOrigin-RevId: 489016127",deserialization,2025-05-14 15:59:22,tensorflow_security_analysis
commit-8b089aa79708addcd178345f69afe9f1857dabbd,tensorflow/compiler/xla/python/ifrt/mock.h,CWE-502,7b565ef16ba828224a63209f754d82831c5b0ef3,Add a deserialization option to `SerDes`,Fully qualify PjRt symbols in mock.h Otherwise; `PjRtClient` may be resolved into `xla::ifrt::PjRtClient` instead of `xla::PjRtClient` depending on the #include order. PiperOrigin-RevId: 543490806,deserialization,2025-05-14 15:59:23,tensorflow_security_analysis
commit-5638b18264197492820e6e11619523261bcfcf15,tensorflow/compiler/xla/python/pjrt_ifrt/pjrt_compiler.h,CWE-502,7b565ef16ba828224a63209f754d82831c5b0ef3,Add a deserialization option to `SerDes`,[IFRT] Add PjRt-IFRT implementation (pjrt_ifrt) Add an initial implmentation of the IFRT API for PjRt. This prototype forwards most IFRT API calls to PjRt APIs; while there are a small number of the implmentations (such as `PjRtLoadedExecutable::Create()`) that will close the gap between PjRt and the current IFRT API prototype. The new classes provide temporary escape hatches (e.g.; `PjRtArray::pjrt_buffers()`) to facilitate upcoming changes in JAX Python bindings. This allows introducing IFRT integration incrementally without requiring the current IFRT API prototype to support all PjRt specialization. Also add basic tests that run against IFRT implementations. PiperOrigin-RevId: 489293465,deserialization,2025-05-14 15:59:23,tensorflow_security_analysis
commit-e887aff4818c7d9f04f6f8123606ce7629970fd0,tensorflow/compiler/xla/python/py_compile_only_client.cc,CWE-502,7b565ef16ba828224a63209f754d82831c5b0ef3,Add a deserialization option to `SerDes`,"Add subclasses of compile/deserialize options for XLA `xla::ifrt::CompileOptions` and (new) `xla::ifrt::DeserializeOptions` will be abstract option classes that are not specific to XLA. XLA gets `xla::ifrt::XlaCompileOptions` and `xla::ifrt::XlaDeserializeOptions`; which include `xla::CompileOptions` (note that this is not in ""ifrt""). Subsequently; these XLA-specific options and the existing executable test are moved to a ""pjrt_ifrt"" directory to make ""ifrt"" directory less reliant on XLA. In a subsequent CL; host callbacks will be supplied in these specialized options; to allow a compiler to bind them to the main computation at compilation/loading time. PiperOrigin-RevId: 533489426",deserialization,2025-05-14 15:59:24,tensorflow_security_analysis
commit-c5175e7648238bf3ea80172f1cba9eb56aef13c5,tensorflow/compiler/mlir/tensorflow/tests/xla_call_module_deserialization.mlir,CWE-502,9c4626206d607344410d4fa88e095a026661e322,Avoid renaming StableHLO functions in `XlaCallModuleDeserializationPass` when their names have no conflict with existing TF functions,Add a pass to deserialize the StableHLO module embedded in `tf.XlaCallModule` and lift the StableHLO functions to the top level module. PiperOrigin-RevId: 533464010,deserialization,2025-05-14 15:59:28,tensorflow_security_analysis
commit-f679cb4c61b0e4f1268cd8ccfc83753bb6b4c202,tensorflow/compiler/xla/pjrt/BUILD,CWE-362,2f1a31a27ea0a21e421e77a957cfd573973f2a65,Fixes race condition in tfrt_cpu_pjrt_client,[PJRT] Enable layering_check in the Bazel BUILD. PiperOrigin-RevId: 446190811,racescondition,2025-05-14 15:59:34,tensorflow_security_analysis
commit-36f61945c062aa30633aec1c0cc9b3e6dcc07249,tensorflow/compiler/mlir/tf2xla/BUILD,CWE-362,af6cc87d649e5f64df5616e421ccc4dddf443285,Guard canonicalization pass registration with a mutex to fix data race condition.,Move compile_util_mlir.{h;cc} to dedicated TF2XLA bridge directory. PiperOrigin-RevId: 510306172,racescondition,2025-05-14 15:59:47,tensorflow_security_analysis
commit-febdd26ae594133d24f82544706b1e012a5cf1ea,tensorflow/core/summary/summary_db_writer.cc,CWE-120,88f1d0042b3f495a2a721e806f0f03aca0022dd7,Fix buffer overflow in summary_db_writer,Add reservoir sampling to DB summary writer This thing is kind of cool. It's able to turn a 350mB event log into a 35mB SQLite file at 80mBps with one Macbook core. Best of all; this was accomplished using a normalized schema without the embedded protos. PiperOrigin-RevId: 181676380,buffersoverflow,2025-05-14 16:00:13,tensorflow_security_analysis
commit-f38eea2aec56f7cdbee11d354e5753a097943c94,tensorflow/compiler/xla/service/gpu/cusolver_rewriter.cc,CWE-664,e2cbc486f8c87816f1fa9c428b043d19d00899c0,[XLA:GPU] Fix bug that led to GPU solver context being repeatedly re-initialized.,[XLA:GPU] Add implementation of Cholesky that calls into cuSolver. PiperOrigin-RevId: 236123818,,2025-05-14 16:00:15,tensorflow_security_analysis
commit-82fc78bb3c200c2c8b57fd09b74d89942dbc9b3c,tensorflow/compiler/xla/autotune_serialize.cc,CWE-502,b2d4d33f5dca4b17fb89c12f4e7fc5014f11ff85,[XLA:GPU] Fix error message when autotune deserialization fails.,Roll forward cl/488525761 with fix: [XLA:GPU] Implement ahead-of-time autotuning Fixed an issue where we could race in gpu_conv_algorithm_picker.  In a multi-gpu machine; two threads could autotune the same conv on two different GPUs.  One would win; and then the other thread would CHECK-fail because it couldn't insert its value into the cache. Now we allow this race and throw away the autotuning results of the second thread. PiperOrigin-RevId: 489246207,deserialization,2025-05-14 16:00:21,tensorflow_security_analysis
commit-fe33f393b86904913898d25c5fd7f263058ed5a6,tensorflow/core/distributed_runtime/eager/eager_service_impl_test.cc,CWE-362,7910da08adf6ecbd6df4907b061252d77847ffff,Fixed another race condition: Worker 1 tries to connect and accesses the Coordination Service; but Coordination Service on worker 0 is being enabled; and we have a read/write race.,Allowing `tf.debugging.set_log_device_placement` to control logging of device placement of tf.functions. PiperOrigin-RevId: 314746176 Change-Id: I2516ec91e99f5d2b21db11b1cbfa2fdd1d5ef796,racescondition,2025-05-14 16:00:33,tensorflow_security_analysis
commit-fed1cf9bc0d107eaa028bc6c375f750404ede5f0,tensorflow/core/distributed_runtime/rpc/grpc_server_lib.cc,CWE-362,7910da08adf6ecbd6df4907b061252d77847ffff,Fixed another race condition: Worker 1 tries to connect and accesses the Coordination Service; but Coordination Service on worker 0 is being enabled; and we have a read/write race.,Roll back a broken change. PiperOrigin-RevId: 372934102 Change-Id: I6eb42f00e639f6f3e7e96e23665d1e46bf4630a0,racescondition,2025-05-14 16:00:35,tensorflow_security_analysis
commit-f196351cd4e21ed6c17dcf544e0fa6cfa3030b4e,tensorflow/core/distributed_runtime/session_mgr.cc,CWE-362,7910da08adf6ecbd6df4907b061252d77847ffff,Fixed another race condition: Worker 1 tries to connect and accesses the Coordination Service; but Coordination Service on worker 0 is being enabled; and we have a read/write race.,"Allow non-isolated worker sessions to borrow `WorkerEnv::device_mgr`. Without this change; a shared resource (e.g. an Iterator) could not be created in one session `s1`; and used in a later session `s2` after `s1` was closed; because the iterator might indirectly capture devices from the previous session; and use them after they are freed when the `WorkerSession` was deleted. The current change only affects the singleton ""legacy"" WorkerSession; which is never deleted; but this is necessary to switch all sessions to use separate WorkerSession objects. PiperOrigin-RevId: 193541426",racescondition,2025-05-14 16:00:38,tensorflow_security_analysis
commit-86b3c0b640392d5a0691515392a9b4127963d20c,tensorflow/tsl/distributed_runtime/coordination/coordination_service_rpc_handler.h,CWE-362,7910da08adf6ecbd6df4907b061252d77847ffff,Fixed another race condition: Worker 1 tries to connect and accesses the Coordination Service; but Coordination Service on worker 0 is being enabled; and we have a read/write race.,Fixed another race condition: Worker 1 tries to connect and accesses the Coordination Service; but Coordination Service on worker 0 is being enabled; and we have a read/write race. PiperOrigin-RevId: 488489540,racescondition,2025-05-14 16:00:40,tensorflow_security_analysis
commit-fb32792881f068df48f13e4d3367f467ec020777,tensorflow/core/distributed_runtime/BUILD,CWE-362,86b3c0b640392d5a0691515392a9b4127963d20c,Fixed another race condition: Worker 1 tries to connect and accesses the Coordination Service; but Coordination Service on worker 0 is being enabled; and we have a read/write race.,Shard RecentRequestIds based on the number of tasks in the cluster. When training in the large cluster; lots of requests will be generated and the mutex in RecentRequestIds can become the bottleneck. PiperOrigin-RevId: 469756362,racescondition,2025-05-14 16:00:42,tensorflow_security_analysis
commit-39a66ecbe0f195625a83f6e7ccfc4b3e987c3bf4,tensorflow/core/distributed_runtime/eager/eager_service_impl_test.cc,CWE-362,86b3c0b640392d5a0691515392a9b4127963d20c,Fixed another race condition: Worker 1 tries to connect and accesses the Coordination Service; but Coordination Service on worker 0 is being enabled; and we have a read/write race.,Allow dynamic specification of clusters for eager remote execution. PiperOrigin-RevId: 201586130,racescondition,2025-05-14 16:00:43,tensorflow_security_analysis
commit-f8347ceebbad0e06552633fcdf8e63f52246ba62,tensorflow/core/distributed_runtime/server_lib.h,CWE-362,86b3c0b640392d5a0691515392a9b4127963d20c,Fixed another race condition: Worker 1 tries to connect and accesses the Coordination Service; but Coordination Service on worker 0 is being enabled; and we have a read/write race.,Remove THIRD_PARTY_ from #include guards They don't make sense in the open source repository. PiperOrigin-RevId: 183140889,racescondition,2025-05-14 16:00:45,tensorflow_security_analysis
commit-5206c83a2350484f62a70ae86fc0191ed0486d86,tensorflow/core/distributed_runtime/session_mgr_test.cc,CWE-362,86b3c0b640392d5a0691515392a9b4127963d20c,Fixed another race condition: Worker 1 tries to connect and accesses the Coordination Service; but Coordination Service on worker 0 is being enabled; and we have a read/write race.,[TF] [NFC] s/absl::make_unique/std::make_unique PiperOrigin-RevId: 454206737,racescondition,2025-05-14 16:00:46,tensorflow_security_analysis
commit-56973fb11a0c00df2f559feab6a4b725514a7e51,tensorflow/lite/kernels/internal/reference/conv3d_transpose.h,CWE-120,72c0bdcb25305b0b36842d746cc61d72658d2941,Fix a potential buffer overflow issue in reference kernel of the CONV_3D_TRANSPOSE,Fixed header guards to match style guide conventions. PiperOrigin-RevId: 471080363,buffersoverflow,2025-05-14 16:00:57,tensorflow_security_analysis
commit-f7365b58bb433f4da2fec20d1af95879ae39be25,tensorflow/core/kernels/data/multi_device_iterator_ops.cc,CWE-362,c04fc7ea4bda1435a766785092126b6d7034b92f,#tf-data Fix some more potential race conditions.,[tf.data] Improving the runtime of several commonly used operations from O(n) to O(1) (w.r.t. to the size of the function library). This CL: - Modifies FunctionLibraryRuntimeImpl::CreateKernel signature; replacing FunctionLibraryDefinition argument with FunctionLibraryRuntime; which makes it possible to properly propagate function library overlays through recursive kernel creations. - Adds an argument to FunctionLibraryRuntime::Clone and ProcessFunctionLibraryRuntime::Clone to indicate whether the method should return an empty function library (instead of cloning the existing one). This is used by tf.data; which manages function libraries independently and passes them into FunctionLibraryRuntime through an overlay. - Removes (now) unnecessary function library copy from IteratorResource::SetIteratorFromDataset(). - Replaces uses of 'lib' with 'flr' as a variable name for instances of FunctionLibraryRuntime. PiperOrigin-RevId: 243636667,racescondition,2025-05-14 16:01:56,tensorflow_security_analysis
commit-677e128d59e47b8deb05d48eeae7be33b5c87380,tensorflow/core/kernels/data/parallel_batch_dataset_op.cc,CWE-362,c04fc7ea4bda1435a766785092126b6d7034b92f,#tf-data Fix some more potential race conditions.,[tf.data] Adding `interleave_depth` information of tunable datasets to trace_me. PiperOrigin-RevId: 398543857 Change-Id: I3dd249bf036959525f620c51e77cf126dc71ff5e,racescondition,2025-05-14 16:01:56,tensorflow_security_analysis
commit-8d46773e6aa6b2eb44b62e422b3c7ccc4adb79b6,tensorflow/core/kernels/data/parallel_filter_dataset_op.cc,CWE-362,c04fc7ea4bda1435a766785092126b6d7034b92f,#tf-data Fix some more potential race conditions.,[tf.data] Add kernel implementation of `ParallelFilter` transformation. PiperOrigin-RevId: 434782693,racescondition,2025-05-14 16:01:57,tensorflow_security_analysis
commit-d2bd4afee7fb31415704f24b0766ab26d0d2a87f,tensorflow/core/kernels/data/prefetch_dataset_op.cc,CWE-362,c04fc7ea4bda1435a766785092126b6d7034b92f,#tf-data Fix some more potential race conditions.,Refactor {Range;Map;Prefectch}Dataset using name_utils,racescondition,2025-05-14 16:01:58,tensorflow_security_analysis
commit-fb3bde1994d4ed7d6cb928326e8e2a1777930e5e,tensorflow/core/kernels/data/experimental/parse_example_dataset_op.cc,CWE-362,9322d0dc701375dab282879c30422641eb8aa308,#tf-data Fix another potential race condition.,[tf.data] Implements `dataset` transformation `parse_example_dataset(..)` which will replace dataset.map(parsing_ops.parse_example(..)). PiperOrigin-RevId: 209836033,racescondition,2025-05-14 16:02:00,tensorflow_security_analysis
commit-70e675ebcf44a86a1a7b0b0070bfc116e26e3a32,tensorflow/core/protobuf/saved_object_graph.proto,CWE-502,043459d6e9e8a7dfd822b13d8a2772c60faa53ae,Implement `_trackable_children` and `_deserialization_dependencies` for `def_function.Function`.,Merge pull request #36387 from jhseu:go_fix PiperOrigin-RevId: 293046050 Change-Id: Ia81bf682f62293faa591d6de191dbeda3fed7138,deserialization,2025-05-14 16:02:07,tensorflow_security_analysis
commit-59e882af21831eea9e24d74c9af4242cc1514c6e,tensorflow/python/saved_model/registration/registration_saving_test.py,CWE-502,610b72692feba13655ec4680a9806d09127d83d2,"Pass results from `_trackable_children` instead of allowing ""None"" returns when calling `_deserialization_dependencies`",Add deserialization dependencies to `Trackable`; which are passed to registered objects when loading. `GraphView.list_dependencies` is now renamed to `list_children` to clarify the differences between `Trackable` children and dependencies. PiperOrigin-RevId: 402636806 Change-Id: I371505147dcb2c0bede0672fbf93bb47df343a30,deserialization,2025-05-14 16:02:09,tensorflow_security_analysis
commit-fc4d04406900e07de33be77d1a128d58eda2d580,tensorflow/python/saved_model/save.py,CWE-502,610b72692feba13655ec4680a9806d09127d83d2,"Pass results from `_trackable_children` instead of allowing ""None"" returns when calling `_deserialization_dependencies`",Fix bug which skips asset copying when checkpoints are not copied. PiperOrigin-RevId: 396480638 Change-Id: I238e0a1e96f93682bb6a827d59200266f72949ac,deserialization,2025-05-14 16:02:10,tensorflow_security_analysis
commit-ed05566b7ca9b1ecc31d30be7f11e4218efac244,tensorflow/python/saved_model/load.py,CWE-502,2e4182fc3cab0f869c893e6e3ff26613f5529530,[SavedModel TODO Audit] Update TODOs to bug IDs in save.py; load.py; signature_serialization.py; load_v1_in_v2.py; function_deserialization.py.,(SavedModel loading change) Revive layers and models from config when available. When the config is not available or invalid; then load from SavedModel as a backup. Note that child objects (e.g. variables; sublayers) may be created as a result of a layer being revived from the config. These child objects may also be in the SavedModel object graph. This CL ensures that only one copy of each object is created. All of the current SavedModel saving/loading tests pass (with minor adjustments to one test). I've also added additional tests to ensure that structures with nested layers load correctly. Metrics loading will be addressed after this CL is submitted. Bug fixes that should be submitted before this CL: - cl/282123850 Ensure that nested layer losses are saved/reset properly - cl/282125214 Functional and Sequential models should export their config even if there's an error when serializing a layer PiperOrigin-RevId: 287864300 Change-Id: Ia015f3fe5bb2155fbd3563b5b9bbff0624e16797,deserialization,2025-05-14 16:03:26,tensorflow_security_analysis
commit-e9330cec5397ef4f465ed736baccfd9a1c0b81e6,tensorflow/python/saved_model/load_v1_in_v2.py,CWE-502,2e4182fc3cab0f869c893e6e3ff26613f5529530,[SavedModel TODO Audit] Update TODOs to bug IDs in save.py; load.py; signature_serialization.py; load_v1_in_v2.py; function_deserialization.py.,Start on a 1.x-compat codepath for tf.saved_model.load Allows selecting between multiple MetaGraphs and loading them into 2.x. Variables are OK as long as they're resource variables. Signatures are available in the same format as for 2.x-exported SavedModels; concrete functions which take only keyword arguments and return dictionaries. Stuff that still needs doing:   - Lift any variables at all out into the eager context   - Fix ref variables (running the restore function isn't initializing them for some reason)   - Assets PiperOrigin-RevId: 233135086,deserialization,2025-05-14 16:03:27,tensorflow_security_analysis
commit-5e92f41df836dd634b82067af3603cd50fb59c4f,tensorflow/python/saved_model/signature_serialization.py,CWE-502,2e4182fc3cab0f869c893e6e3ff26613f5529530,[SavedModel TODO Audit] Update TODOs to bug IDs in save.py; load.py; signature_serialization.py; load_v1_in_v2.py; function_deserialization.py.,Add signatures to the return value of tf.saved_model.load() Only works with models exported from tf.saved_model.save(). We still need a different path for restoring other SavedModels; but hopefully we can make the signature representations identical (keywords in; dict out). In order to make this work I had to wrap exported signatures in another layer of function. I should either clean that up; or more likely we should come up with an easy API for inspecting the graphs of nested function calls. PiperOrigin-RevId: 232742842,deserialization,2025-05-14 16:03:28,tensorflow_security_analysis
commit-ffcafbeaac2a67c7dc9c957b9445026db42b22f8,tensorflow/python/saved_model/BUILD,CWE-502,59e882af21831eea9e24d74c9af4242cc1514c6e,Add deserialization dependencies to `Trackable`; which are passed to registered objects when loading.,Simplify CapturableResource and TrackableResource deleter API PiperOrigin-RevId: 362070589 Change-Id: I067251281788e013fd05cb2896542710539f2250,deserialization,2025-05-14 16:03:31,tensorflow_security_analysis
commit-ae4e7b70c96780b1d2b03dafd63354fada51b801,tensorflow/python/saved_model/signature_serialization.py,CWE-502,59e882af21831eea9e24d74c9af4242cc1514c6e,Add deserialization dependencies to `Trackable`; which are passed to registered objects when loading.,Improve error messages in tensorflow/python/saved_model. PiperOrigin-RevId: 389912136 Change-Id: I27ae3ce83ceeb66356b487e4126216558c7c42fa,deserialization,2025-05-14 16:03:32,tensorflow_security_analysis
commit-d8ef5888c245827add7693f8cc70caa1837ca41e,tensorflow/tools/api/golden/v2/tensorflow.__internal__.tracking.-object-graph-view.pbtxt,CWE-502,59e882af21831eea9e24d74c9af4242cc1514c6e,Add deserialization dependencies to `Trackable`; which are passed to registered objects when loading.,Expose ObjectGraphView as tf.__internal__ API. PiperOrigin-RevId: 365157570 Change-Id: I348b05681399b43afaa319e2e3f2069405f924c6,deserialization,2025-05-14 16:03:33,tensorflow_security_analysis
commit-f8ba03dfd976278a605e53ac741210fbab14c7ae,tensorflow/core/kernels/conv_grad_ops_3d.cc,CWE-502,883a3a1ba63812687f4d903e1ba49bb48661001e,Merge ConvParameters; FusedConvParameters and FusedConvBiasActivationParameters into one ConvParameters class and reimplement it with protobuf. This enables convenient serialization/deserialization of autotune maps.,[ROCm] Fix the ROCm CSB breakage - 200110 PR # (which enabled MIOpen Immediate Mode API for convolutions) was merged yesterday; but it causes the following test to fail ``` //tensorflow/python/keras:convolutional_test_gpu ``` The cause of the failure is because the above test calls the convolution API with cudnn_use_autotune set to false. With the new MIOpen Immediate Mode API; we need to have an explicit call to GetMIOpenConvolveAlgorithms; when convolution kernel is called for the first time for a given conv_paramereters set. That call gets skipped if cudnn_use_autotune is set to false; and hence the test failure. This fix essentially disables the cudnn_use_autotune functionality for convolution kernel calls in the ROCm flow.,deserialization,2025-05-14 16:03:56,tensorflow_security_analysis
commit-ffe5249f13bb7eb7db435c8ca6a76f7b00cd2742,tensorflow/core/kernels/conv_ops.cc,CWE-502,883a3a1ba63812687f4d903e1ba49bb48661001e,Merge ConvParameters; FusedConvParameters and FusedConvBiasActivationParameters into one ConvParameters class and reimplement it with protobuf. This enables convenient serialization/deserialization of autotune maps.,Added support for some use of libxsmm to apply convolutions. Change: 140678566,deserialization,2025-05-14 16:03:58,tensorflow_security_analysis
commit-fe3bd66099d6e27bf45dabbe7f4cc34276194fc3,tensorflow/core/kernels/conv_ops_3d.cc,CWE-502,883a3a1ba63812687f4d903e1ba49bb48661001e,Merge ConvParameters; FusedConvParameters and FusedConvBiasActivationParameters into one ConvParameters class and reimplement it with protobuf. This enables convenient serialization/deserialization of autotune maps.,ENH: register float64 GPU kernel for Conv3d,deserialization,2025-05-14 16:03:59,tensorflow_security_analysis
commit-f3e7ae3965c3c2e3e5dfb7d89c4f672a636f53e2,tensorflow/core/kernels/data/BUILD,CWE-502,d0fd0aea2e35cb493ab166774265418b8862f0d2,[tf.data] Adding serialization and deserialization support for window datasets.,[tf.data] Implements the parallel version of BatchDataset. The dataset will do the copying elements work of BatchDataset parallelly. The CL also updates the modeling of the AsyncKnownRatio node to correctly model the dataset. PiperOrigin-RevId: 355056363 Change-Id: Ie3326d0827783d9621b7df4324a3d80df5b29eba,deserialization,2025-05-14 16:04:06,tensorflow_security_analysis
commit-8ef1ece7d0ecdec633a22a8100fdae05cfbacb3e,tensorflow/core/kernels/data/window_dataset_op.cc,CWE-502,d0fd0aea2e35cb493ab166774265418b8862f0d2,[tf.data] Adding serialization and deserialization support for window datasets.,"[tf.data] Introducing `tf.data.Dataset.window(size; shift; stride; drop_remainder)`; which can be used for combining elements of input dataset into ""windows"". A window is itself a finite dataset and; among other things; can be used for generalized batching (see https://github.com/tensorflow/community/pull/5 for details). PiperOrigin-RevId: 213360134",deserialization,2025-05-14 16:04:08,tensorflow_security_analysis
commit-c536fdd9de6abcb24922f9cb8d969c043704391a,tensorflow/core/kernels/data/experimental/snapshot_dataset_op.h,CWE-502,ff0a8fe634c810f19220b6775080d56fdc378202,[tf.data] Adding serialization and deserialization support for snapshot reader datasets so that they can be saved to and restored from a checkpoint.,[tf.data] Moving tf.data utilities from core/kernels/data to core/data. PiperOrigin-RevId: 371199599 Change-Id: I28e7c4d9a110b91cfd17c957111ba013273d7557,deserialization,2025-05-14 16:04:10,tensorflow_security_analysis
commit-3ae2c6691b7c6e0986d97b150c9283e5cc52c15f,tensorflow/core/kernels/quantized_resize_bilinear_op.cc,CWE-120,f851613f8f0fb0c838d160ced13c134f778e3ce7,Fix heap buffer overflow caused by rounding.,Adding 'half_pixel_centers' bool attribute (default False) to resize ops which when true; assumes that pixels are 0.5;0.5. This gives more correct resizes. The legacy resize ops will be called by the new resize wrapper with half_pixel_centers=True. PiperOrigin-RevId: 235742526,buffersoverflow,2025-05-14 16:04:31,tensorflow_security_analysis
commit-fe4aad10960e3a0461e106436703958e342c88e8,tensorflow/compiler/mlir/tensorflow/transforms/passes.h,CWE-362,f9302f480c9c1c39b385755bc17297b5edaa5ed0,Fix a race condition cluster_tf_ops_pass. Change it from FunctionPass to ModulePass to avoid inserting new FuncOp in parallel.,Add resource op lifting pass. Lifts resource stores and loads out of tf_device.launch so that device computations do not interact with external resource variables. This is useful because a lot of accelerator devices can not directly access TensorFlow resource variables. PiperOrigin-RevId: 272516522,racescondition,2025-05-14 16:04:56,tensorflow_security_analysis
commit-cd69284e548b375a0afd75072b3ea3f6d1774e94,tensorflow/core/profiler/internal/cpu/host_tracer_utils.cc,CWE-362,c72f87064318873e9d2fbb041e32c0c1fe18ef0b,race condition exists between start TraceMeRecorder and capture start wall time. make sure start_timestamp_ns_ is smaller than any traceMe events. also drop any events that is not for the peace of mind.,make the host tf-op event name consistent with internal tools. PiperOrigin-RevId: 305924010 Change-Id: Iffb05aca0b01df9eaae38fdaaf2f5102b6024eb5,racescondition,2025-05-14 16:05:17,tensorflow_security_analysis
commit-f76fd43898bef35be09c41987cae31d0e2b7b9dd,tensorflow/lite/kernels/internal/types.h,CWE-120,8ee24e7949a203d234489f9da2c5bf45a7d5157d,[tflite] Ensure `MatchingDim` does not allow buffer overflow.,Merge pull request #39868 from mansnils:relu PiperOrigin-RevId: 321655082 Change-Id: I652e24e2c6a990e808b1ca54507e846abc0f323c,buffersoverflow,2025-05-14 16:05:37,tensorflow_security_analysis
commit-ef9e548c5ffe2c9486f18da62b85bdb76f7cdecc,tensorflow/core/tpu/kernels/tpu_compilation_cache_interface.cc,CWE-502,b4ee2c429428da3a3f7023ac692997e9d42fe910,Implement Serialization/Deserialization for remote compilation cache.,Refactor `TpuCompilationCacheEntry` interface to return `TpuProgramGroupInterface` and `core_index` and makes CacheEntry less transparent and move application specific logics outside of cache. PiperOrigin-RevId: 325120711 Change-Id: I36f03ff585d80dc09a4d468c1b86e01a73e15859,deserialization,2025-05-14 16:05:41,tensorflow_security_analysis
commit-9b276a859f6674a47bd54548892cc98c0d634727,tensorflow/core/tpu/kernels/tpu_compilation_cache_rpc_lookup.cc,CWE-502,b4ee2c429428da3a3f7023ac692997e9d42fe910,Implement Serialization/Deserialization for remote compilation cache.,Adding TpuCompilationRpcLookup class for distributed cache support. PiperOrigin-RevId: 327894710 Change-Id: Iac493500325f49b6a0cc5158b3b3962d022935dd,deserialization,2025-05-14 16:05:41,tensorflow_security_analysis
commit-fcdadc0b1ffacb21b0fbf1d42eeff0f08b6d3604,tensorflow/core/distributed_runtime/rpc/rpc_rendezvous_mgr.cc,CWE-362,bd98ba765aac3e20c9db89131aa3016964749133,Fix cancellation race condition in BaseRendezvousMgr::RegisterCall,Automated rollback of commit 8c521f81b10c60de8e690749b732c85197798d03 PiperOrigin-RevId: 270295458,racescondition,2025-05-14 16:06:15,tensorflow_security_analysis
commit-1e904bd524771c851421860de39091976ef8616e,tensorflow/python/keras/losses.py,CWE-502,10fdfcf50e34f6ff994b8a114b3c1bc39a8dfeb0,Fix a number of deserialization error messages. While `print(string; obj)` is valid syntax; `ValueError(string; obj)` is not.,This CL allows sparse losses to work in Keras even if they take a different dtype for the labels than the model outputs produce. PiperOrigin-RevId: 222299347,deserialization,2025-05-14 16:06:29,tensorflow_security_analysis
commit-688b902589364ee8cffe059c066973c60e0fc0b9,tensorflow/python/keras/metrics.py,CWE-502,10fdfcf50e34f6ff994b8a114b3c1bc39a8dfeb0,Fix a number of deserialization error messages. While `print(string; obj)` is valid syntax; `ValueError(string; obj)` is not.,Add metrics SavedModel serialization and tests (built-in classes only). PiperOrigin-RevId: 297716151 Change-Id: I8fcf26a73b0fa7a0aee697b1a972478243b37131,deserialization,2025-05-14 16:06:29,tensorflow_security_analysis
commit-fceded98095d7ea7c4fba5442ac64d4fa505702f,tensorflow/python/keras/engine/base_layer.py,CWE-502,076ac2e8e0ad09feb8272931c2b7d94823311382,Include InputLayer (when available) in Sequential config; so as not to lose a custom input name or dtype upon deserialization; if the user-defined model starts with an `Input` object.,Support `trainable=False` for updates with `run_eagerly=True`. `add_update` can now be passed a zero-arg callable in order to support turning off the update when setting `trainable=False` on a Layer of a Model compiled with `run_eagerly=True`. PiperOrigin-RevId: 242704465,deserialization,2025-05-14 16:06:36,tensorflow_security_analysis
commit-568427acbfd71ffeae73833215bb8ee376045342,tensorflow/python/keras/saving/saved_model/load.py,CWE-502,076ac2e8e0ad09feb8272931c2b7d94823311382,Include InputLayer (when available) in Sequential config; so as not to lose a custom input name or dtype upon deserialization; if the user-defined model starts with an `Input` object.,(SavedModel loading change) Revive layers and models from config when available. When the config is not available or invalid; then load from SavedModel as a backup. Note that child objects (e.g. variables; sublayers) may be created as a result of a layer being revived from the config. These child objects may also be in the SavedModel object graph. This CL ensures that only one copy of each object is created. All of the current SavedModel saving/loading tests pass (with minor adjustments to one test). I've also added additional tests to ensure that structures with nested layers load correctly. Metrics loading will be addressed after this CL is submitted. PiperOrigin-RevId: 290166617 Change-Id: I0da4d7fbd365fc505e727b16b873120c9e9c6c00,deserialization,2025-05-14 16:06:37,tensorflow_security_analysis
commit-2fdfa026f7e756f96771e63bd0b592413597d20c,tensorflow/python/eager/pywrap_gradient_exclusions.cc,CWE-362,e24331bf116f5efc8d42bc888a0dbd271aa92aab,Fix race condition in TensorArrayWrite grad.,Autogen exclusion lists for op.inputs/outputs for GradientTape. PiperOrigin-RevId: 293176753 Change-Id: I68e99e9032ebff28506aaaa70a3ffac0c44da9f1,racescondition,2025-05-14 16:06:40,tensorflow_security_analysis
commit-b84cc997427594a52200c8949c36928ba3aad123,tensorflow/python/keras/engine/base_layer.py,CWE-502,6766a8ee3e74ce511c271f070c57ad3846a33a17,Make Keras deserialization aware of enable/disable_v2_behavior switches.,Improve readability of base_layer.py to improve the experience of users who use the code as a form of documentation (in particular people who subclass Layer). The general principle is to: - Have the Layer class come first in the file - Have subclassable methods come first in the list of methods - Then other public methods; roughly in order of importance - Then private methods - Move auxiliary utilities to a dedicated file PiperOrigin-RevId: 222916181,deserialization,2025-05-14 16:06:41,tensorflow_security_analysis
commit-89e7164769f905c85066a576fd648e3f21fce3e9,tensorflow/python/keras/engine/base_layer_v1.py,CWE-502,6766a8ee3e74ce511c271f070c57ad3846a33a17,Make Keras deserialization aware of enable/disable_v2_behavior switches.,Update Keras layer to not relying the class name for sub layer tracking. PiperOrigin-RevId: 296466417 Change-Id: Id24ff48d5fee7c382fb98a1c00d152704a1eb828,deserialization,2025-05-14 16:06:41,tensorflow_security_analysis
commit-de05ebe296d83607ca0ab1803bd8eed6afa7f74f,tensorflow/tools/api/golden/v1/tensorflow.keras.initializers.uniform.pbtxt,CWE-502,95199568f9eeea0bee58777f96bdd40c2cc5cbe5,Make internal deserialization utilities see the initializers corresponding to the correct TF version.,Keras Initializers change to default values for RandomUniform; RandomNormal; and TruncatedNormal. PiperOrigin-RevId: 210999565,deserialization,2025-05-14 16:06:55,tensorflow_security_analysis
commit-eaa673fd2b1e7ea5928beb9c5af97747ef1e1cbe,tensorflow/core/kernels/eigen_spatial_convolutions_test.cc,CWE-310,6d40b8f587c59d4bfcf5b3234b09dab17a5d89a1,Fix bug in padding detection in contraction packing,Add benchmark for the SpatialConvolution specialized gemm_pack_rhs. PiperOrigin-RevId: 219839163,,2025-05-14 16:07:42,tensorflow_security_analysis
commit-ea125c27974135fbad6bcb75b720499c68d52357,tensorflow/compiler/xla/service/cpu/BUILD,CWE-362,ea475b0b11d716c3077c269f4acdadaef4c82bfe,[XLA/CPU] Fix race condition in all-reduce CPU implementation,[XLA] Pass shape/layout information in calls to the CPU runtime routines. Previously the CPU runtime wouldn't know how the data that was being outfed was laid out by the XLA LayoutAssignment pass; which could result in transposed-value results. This also allows us to validate the contract between the host program and the compiled XLA program with (reified) runtime type checks. PiperOrigin-RevId: 161895093,racescondition,2025-05-14 16:07:52,tensorflow_security_analysis
commit-f3919b99b1e0f8f3efe7634a43731e1dd9c220a0,tensorflow/python/saved_model/function_deserialization.py,CWE-502,4da00100a47d84c48ead8ebd0d27f686d6bd4c37,Update function_deserialization.py,Add test for repeated saving/loading and make it work. Also adding one more test for kwargs and concrete_functions. Note that cycling (repeated save/restore) does not work for nested functions yet; but I am submitting this test to prevent more damage in the future: every new feature should ensure that cycling works properly with it. PiperOrigin-RevId: 230516944,deserialization,2025-05-14 16:07:59,tensorflow_security_analysis
commit-d779103acdc7a54603006089fd253913d298bad9,tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc,CWE-362,bde64280c15beac1c8524213f895a07228ea93e1,NFC: Use local scope when printing operations to avoid thread race conditions.,Add util to dump or log MLIR operations. This is based on DumpGraphToFile where dumping and logging is typically triggered with VLOG(1). PiperOrigin-RevId: 280007662 Change-Id: Iad1783dd08fb3ce52f3d65a5d471f4495b47bdd8,racescondition,2025-05-14 16:08:00,tensorflow_security_analysis
commit-c1625cac3e3eca2ed42960a04cf3b05c556c9b07,tensorflow/core/common_runtime/eager/eager_executor.cc,CWE-362,852b9f95c19d494d50c2111c71fc955ee0c3f0d0,Fix a race condition in EagerExecutor,Let EagerExecutor::WaitForAllPendingNodes support AsyncNode. PiperOrigin-RevId: 267211323,racescondition,2025-05-14 16:08:28,tensorflow_security_analysis
commit-e94b94c0fc47c9bbb92f64087b4c2f1f7bd83594,tensorflow/core/common_runtime/eager/context.h,CWE-362,0b69e6ed798b40b64aecea24a97aa2f198120688,Fix two race conditions found in eager/c_api_test: 1. context_id shouldn't be read during update. 2. EagerExecutor::state_ should be set before creating EagerExecutor::thread_,Fix two issues in EagerContext destructor: 1. Move clear cache out from !IS_MOBILE_PLATFORM 2. Close remote context before resetting keep_alive_thread. PiperOrigin-RevId: 257879598,racescondition,2025-05-14 16:08:40,tensorflow_security_analysis
commit-f0ecd84dd695dcfee14091624d94339a0583521f,tensorflow/python/framework/func_graph.py,CWE-502,4067058d43c06090e3bfd0393a70447f64fb1e36,Update SavedModel function-deserialization to handle TypeSpecs.,Copies only summary collections from the default graph to FuncGraph collections. PiperOrigin-RevId: 218223095,deserialization,2025-05-14 16:08:48,tensorflow_security_analysis
commit-88686b308146887a88903c883bed7affc650e076,tensorflow/core/kernels/segment_reduction_ops.h,CWE-120,db4f9717c41bccc3ce10099ab61996b246099892,Fix heap buffer overflow in UnsortedSegmentSum.,Custom GPU kernel for UnsortedSegmentSumOp. Change: 129665429,buffersoverflow,2025-05-14 16:09:00,tensorflow_security_analysis
commit-ffc9481e26021b6442e050dbe82dd1a6cd220204,tensorflow/python/BUILD,CWE-502,e62dc433fcce833313b4174e20fc24c418593d27,Fix serial/deserialization issue for rnn wrapper.,Make `timeline` build rule public; so other projects can properly depend on it. Change: 151718829,deserialization,2025-05-14 16:09:21,tensorflow_security_analysis
commit-fec769a899962e2b4792041b4b6baf80b30111c6,tensorflow/python/keras/optimizer_v2/optimizer_v2.py,CWE-502,8cfbcc53cf2b277f7c99d19650e856a30fc5a336,Pass custom object to Keras learning rate scheduler deserialization logic.,Enable optimizer v2 lr with eager. PiperOrigin-RevId: 229254683,deserialization,2025-05-14 16:09:41,tensorflow_security_analysis
commit-f86b96d87b56f46c6d56ed81f9dbb6e78f77fc2d,lib/Transforms/LoopTiling.cpp,CWE-369,bbc71ba46b03d2e06cfb9f7e845bdb289c4c3a83,Fix bug in LoopTiling where a loop with trip count of 1 caused a division by zero,Add support for basic remark diagnostics. This is the minimal functionality needed to separate notes from remarks. It also provides a starting point to start building out better remark infrastructure. -- PiperOrigin-RevId: 246175216,,2025-05-14 16:09:44,tensorflow_security_analysis
commit-fbb9d4ea863c051ac6748d95166c321fe4bc7cdf,tensorflow/python/keras/BUILD,CWE-502,0f371719b10617d6f7da6622c345aa3b7b00175e,Fix serialization/deserialization for BatchNorm v1 and v2.,Change the Keras model_iteration() to correctly infer the size of validation datasets when validation_steps is None. PiperOrigin-RevId: 235112144,deserialization,2025-05-14 16:10:18,tensorflow_security_analysis
commit-f49f801276154d0f693c5d57db6977a7eb32f017,tensorflow/python/keras/layers/serialization.py,CWE-502,0f371719b10617d6f7da6622c345aa3b7b00175e,Fix serialization/deserialization for BatchNorm v1 and v2.,Bring the Keras API in contrib. Change: 150237453,deserialization,2025-05-14 16:10:20,tensorflow_security_analysis
commit-f22e833a2bedce23b4fcea6455b7797df9792223,tensorflow/tools/api/golden/v1/tensorflow.layers.-batch-normalization.pbtxt,CWE-502,0f371719b10617d6f7da6622c345aa3b7b00175e,Fix serialization/deserialization for BatchNorm v1 and v2.,Initial support for mixed precision policies. A tf.keras.mixed_precision.experimental.Policy determines the dtype of layer computations and variables. In this initial implementation; policies only determine layer variable dtypes; and support for determining layer computation dtypes will come later. Co-authored-by: James Qin <jamesqin@google.com> PiperOrigin-RevId: 236010048,deserialization,2025-05-14 16:10:21,tensorflow_security_analysis
commit-d19f1e45fcb7418fe07333fc99d102214129be3e,tensorflow/python/autograph/pyct/templates.py,CWE-394,8d3dda24f00a457678eb5f986bce80ec8fc6e2a5,Fix bug in handling of return statements. Relax the restriction that all code paths have a return value; allowing for None returns when the control flow creating them is not staged.,Allow completely stateless(i.e.; with no outputs) loops. Simplify the handling of stateless conditionals. This change will still not support stateless loops pre-v2 until we add auto deps. However; it works properly in tf.function. PiperOrigin-RevId: 224876064,,2025-05-14 16:10:47,tensorflow_security_analysis
commit-7830dce1d574eadfa2c62782acee8904db0aaaff,tensorflow/compiler/xla/service/dynamic_parameter_binding.h,CWE-502,29970780c7e2aaf55040f09e10e5c1f6649cfd32,Add tests for dynamic parameter binding's serialization and deserialization behaviors.,Dynamic parameter binding. Dynamic parameter binding is the minimum API to start working on dynamic padder and unblock the bridge to start integrating dynamic shapes features. PiperOrigin-RevId: 221726042,deserialization,2025-05-14 16:10:48,tensorflow_security_analysis
commit-fe4dd168744b39daca4761d5e6ccf5c93458f023,tensorflow/core/kernels/training_op_helpers.h,CWE-362,806ccc2cf778407edacfc78bb864a3be01033f06,Fixes race condition.,Forward the status from LookupResource to GetInputTensorFromVariable rather than returning a generic error status PiperOrigin-RevId: 192382499,racescondition,2025-05-14 16:11:05,tensorflow_security_analysis
commit-eaaa0b93852054dee086a3ed5373cf8bbe3d2fb3,tensorflow/python/keras/BUILD,CWE-502,178b4349ae1710869c625ec843213584253faeb1,Adds string deserialization support for V2 Optimizers,Move the Keras API to tf.keras. PiperOrigin-RevId: 167638421,deserialization,2025-05-14 16:11:11,tensorflow_security_analysis
commit-efcbf6e34e4519172d38be76c08c2d99792fd7be,tensorflow/compiler/xla/service/BUILD,CWE-502,78e4ce52aeda5a10ddaf5e64ea8958f439a2f9f2,Add proto serialization/deserialization testing to the HLO parser tests. Many of the HLO parser tests verify that an text form of an HLO module preserves all information when running through ToString then parsing. It makes sense to also use these tests to exercise proto serialization/deserialization. This is done by adding additional instantiations of the parameterized parsing tests. This caught several bugs which are fixed in this CL:,Supported in this CL:   * Attaching sharding descriptors to HLO ops   * Partitioning the HLO graph into per-device computations based on those sharding descriptors.   * All operator support for device placement and ops replicated on all devices.   * Elementwise op support for tiled shardings.   * 2D Convolution support for tiled shardings (no stride or dilation support). PiperOrigin-RevId: 173946036,deserialization,2025-05-14 16:11:36,tensorflow_security_analysis
commit-1b7d13181843631f59c515a00a73c21711ec5802,tensorflow/contrib/timeseries/python/timeseries/math_utils.py,CWE-362,847b38406a28546991b62193278ee87910cd3d74,TFTS: Fix an input statistics race condition,Initial commit of time series models PiperOrigin-RevId: 161014271,racescondition,2025-05-14 16:11:45,tensorflow_security_analysis
commit-fa1d92f70adf52d9258384e8528f9a7203a141dd,tensorflow/compiler/xla/service/hlo_computation.h,CWE-502,c07b719ab030c46f19c8e5cdd92730eaec38a8fb,[XLA] Make hlo deserialization stable for HloModule by sorting by ids when creating from proto.,Add infrastructure for a backend-specific configuration for each op. This is intentionally not exposed in ComputationBuilder and is not intended for use or to be set at all prior to the last backend-specific part of compilation. PiperOrigin-RevId: 195493500,deserialization,2025-05-14 16:12:32,tensorflow_security_analysis
commit-fe8406149feec453250905965a14285465cd2063,tensorflow/compiler/xla/service/hlo_instruction.h,CWE-502,c07b719ab030c46f19c8e5cdd92730eaec38a8fb,[XLA] Make hlo deserialization stable for HloModule by sorting by ids when creating from proto.,Merge changes from github. PiperOrigin-RevId: 178185697,deserialization,2025-05-14 16:12:32,tensorflow_security_analysis
commit-fdf4ad4c35e925bf3d944dac5b91efcc64b2c8b3,tensorflow/core/kernels/pack_op.cc,CWE-502,f88cd9195589e41f011c68995d61d760dc2e1a83,Adding variant-based serialization and deserialization for sparse tensors.,Add GPU kernel registrations for int64 tf.concat; tf.stack PiperOrigin-RevId: 162008248,deserialization,2025-05-14 16:13:33,tensorflow_security_analysis
commit-fd85d42d5d8203b4ce17c2825fd003411c78fbe6,tensorflow/python/ops/hidden_ops.txt,CWE-502,f88cd9195589e41f011c68995d61d760dc2e1a83,Adding variant-based serialization and deserialization for sparse tensors.,Copy sparse_feature_cross to sparse_ops. Two ops will be exposed as sparse_ops._sparse_cross and sparse_ops._sparse_cross_hashed. This cl does not touch the kernels and ops in contrib. PiperOrigin-RevId: 155520054,deserialization,2025-05-14 16:13:34,tensorflow_security_analysis
commit-e722358e7e96dd2aa20d7e2c56336e76845daa6a,tensorflow/tools/api/golden/tensorflow.pbtxt,CWE-502,f88cd9195589e41f011c68995d61d760dc2e1a83,Adding variant-based serialization and deserialization for sparse tensors.,Merge changes from github. END_PUBLIC --- Commit 607816029 authored by Eugene Brevdo<ebrevdo@google.com> Committed by TensorFlower Gardener<gardener@tensorflow.org>: Extended ScratchSpace to expose its underlying scratch tensor object. PiperOrigin-RevId: 167649551 --- Commit db43fe68e authored by A. Unique TensorFlower<gardener@tensorflow.org> Committed by TensorFlower Gardener<gardener@tensorflow.org>: Add fast math attributes to all generated methods when fast math enabled. RELNOTES: n/a PiperOrigin-RevId: 167646637 --- Commit aebe8cc6f authored by A. Unique TensorFlower<gardener@tensorflow.org> Committed by TensorFlower Gardener<gardener@tensorflow.org>: Call HloComputation.Accept instead of HloInstruction.Accept to get all instructions profiled. RELNOTES: n/a PiperOrigin-RevId: 167640259 --- Commit 0ab137cd8 authored by A. Unique TensorFlower<gardener@tensorflow.org> Committed by TensorFlower Gardener<gardener@tensorflow.org>: BEGIN_PUBLIC Automated g4 rollback of changelist 167604306 PiperOrigin-RevId: 167800256,deserialization,2025-05-14 16:13:35,tensorflow_security_analysis
commit-1e67c90e2caceeff82d09793d1ef5fa0300d219b,tensorflow/compiler/xla/tests/local_client_test_base.h,CWE-362,2f8d3387c3b27cd77509efb69732c336479e014c,[XLA] Fix race condition in LocalClientTestBase.,Initial open-source release of XLA: Accelerated Linear Algebra. XLA is a compiler-based linear algebra execution engine that targets CPUs; GPUs and custom accelerators. XLA is still experimental; we are releasing it early to get the community involved. Change: 143990941,racescondition,2025-05-14 16:13:49,tensorflow_security_analysis
commit-8b482260bdbec735de1570aefae5519a0f116e89,tensorflow/contrib/tpu/python/tpu/tpu_estimator.py,CWE-362,eebcc861ac0e720bfccf728a98036cceaae60841,Fixed the race condition between multi eval step increments.,Updates the eval step counter for TPUEstimator.evaluate. PiperOrigin-RevId: 165634525,racescondition,2025-05-14 16:14:07,tensorflow_security_analysis
commit-ef2a926ec05dfd337d84279aafa58b22f0f36123,tensorflow/core/debug/debug_io_utils.h,CWE-362,525b0f05839779e40d0ca9cc2967a3886b6a0f4d,tfdbg: fix race condition in picking graph file names,tfdbg core: implement gRPC debug URLs Change: 139976177,racescondition,2025-05-14 16:14:20,tensorflow_security_analysis
commit-fa19f2f86d2ba53fdea895efbcc372d87d037008,tensorflow/python/debug/lib/debug_data.py,CWE-362,525b0f05839779e40d0ca9cc2967a3886b6a0f4d,tfdbg: fix race condition in picking graph file names,tfdbg: Fix a bug in DebugNumericSummaryOp's min / max calculation algorithm Change: 148178117,racescondition,2025-05-14 16:14:21,tensorflow_security_analysis
commit-dff1e63098a0980304fe3ba1ba81cedac3362b3a,tensorflow/python/platform/googletest.py,CWE-362,832f9a79af2040c3f190adecd6642c6b979b0ab3,Create a new tempdir for each test to fix the race condition for sharded tests. Change: 151403279,Fixing some implicit int64->32 downcast errors.  (In most cases; by having the ops explicitly return a failure that they can't handle overly-large inputs).  Most of these should never affect correct tf programs until people get a lot more memory in their machines. Change: 118476613,racescondition,2025-05-14 16:14:40,tensorflow_security_analysis
commit-96cb8f886ad84202e363c5a9da56cdbce4eaf408,tensorflow/core/grappler/utils.cc,CWE-362,73394f4c06c19265e44a65728c6cf25b0fab25f9,Fixed a race condition in the single_cluster code Change: 150345708,Started to open source Grappler. First application is the GPU layout optimizer. Change: 149558284,racescondition,2025-05-14 16:14:42,tensorflow_security_analysis
commit-a771598ad83ca33eb42594d7e804859371ba4ca9,tensorflow/core/common_runtime/sycl/sycl_device_context.cc,CWE-362,3347811389a34b0f1776f23a781ff59c4a26aa4f,Made sure that the copy from gpu to cpu completes before processding further. This solves a race condition that made some test flaky,Merge changes from github. Change: 138675832,racescondition,2025-05-14 16:15:14,tensorflow_security_analysis
commit-26d51ae7aae4cc8fe4807bde1aeec86f0e0c0fc2,tensorflow/python/kernel_tests/conditional_accumulator_test.py,CWE-362,f137144bd761bb33d542db4a26055270bc6ea577,Fixed a race condition in direct sessions: we shouldn't call RecvOutputs if the call to Run has been cancelled otherwise RecvOutputs may block forever. Change: 139352917,Adding a ConditionalAccumulator class; which allows us to accumulate non-stale gradients. Also adds SparseConditionalAccumulator; which supports IndexedSlices. Change: 135037419,racescondition,2025-05-14 16:15:25,tensorflow_security_analysis
commit-84953e40cf41941d59b5df36f8d385f1e3c04d6a,tensorflow/python/kernel_tests/sparse_conditional_accumulator_test.py,CWE-362,f137144bd761bb33d542db4a26055270bc6ea577,Fixed a race condition in direct sessions: we shouldn't call RecvOutputs if the call to Run has been cancelled otherwise RecvOutputs may block forever. Change: 139352917,Adding int32 support to SparseConditionalAccumulator.apply_grad. Change: 135970600,racescondition,2025-05-14 16:15:26,tensorflow_security_analysis
commit-d200c18c8cc89da4721ce89c252a52c3a81f1d50,tensorflow/contrib/learn/python/learn/monitors.py,CWE-362,93b2d5cdf04f2e15657400a52f7d8f6355c6125f,"Don't skip evaluation if latest_path is None. When save_checkpoints_secs is small (note that the smaller this value is; the more frequent we checkpoint); say 1 second; there is a race condition that could lead to a None latest_path and None self._latest_path_step; which further results to an error; when the file ""checkpoint"" is read at the same time it is being updated. Change: 127470621",Add unit tests and state checking for monitors. Change: 125134620,racescondition,2025-05-14 16:16:06,tensorflow_security_analysis
commit-e08122e3eed90f91d5d3588918e8107b3eaf7f0c,tensorflow/core/BUILD,CWE-362,35f66e516a02aa46ae0380d66c5a17e3f42b9504,Eliminate gpu_allocator_retry_test flakiness by no longer relying on real race conditions for testing; but instead forcing parallel threads to strictly alternate so that the interesting 'race' conditions deterministically arise. Change: 124560962,Restore missing ops_util to gpu/gpu_stream_test that was removed in earlier github import Change: 118692010,racescondition,2025-05-14 16:16:20,tensorflow_security_analysis
commit-97c5c72fa069e57a4c6fab0467a03a52c465bcd9,tensorflow/core/kernels/example_parsing_ops.cc,CWE-502,57ab45bfc6f84b4cef1e225253d9b31191200a80,Adjust unit cost estimate for example_parsing_ops. The estimate was (mainly; I think) underestimating the cost of deserialization and dictionary lookup per dense key.,Multi-thread ParseExample on CPU to decrease latency by up to 75%. Run on REDACTED (12 X 3501 MHz CPUs); 2016/04/27-14:18:22 CPU: Intel Ivybridge with HyperThreading (6 cores) dL1:32KB dL2:256KB dL3:12MB Benchmark                             Base (ns)  New (ns) Improvement --------------------------------------------------------------------- BM_ParseDenseStringExample_128_10        861255    853096       +0.9% BM_ParseDenseStringExample_128_100      7219918   3804429      +47.3% BM_ParseDenseStringExample_128_1000    80430295  16822333      +79.1% BM_ParseDenseStringExample_128_10000  987209113 292466011      +70.4% Note that the reported times are wall clock times; not total CPU time; which increases as a result of the multi-threading. Change: 121029107,deserialization,2025-05-14 16:16:20,tensorflow_security_analysis
commit-f7918e1dcd5b0c1f8114f488fc35a63a81e94535,tensorflow/python/training/input.py,CWE-502,c9eb57fe7675f353e1366fd045b28a283b9676f6,Fix deserialization of SparseTensors of unknown rank. Change: 119777702,TensorFlow: Removal of large assets and small other fixes. Changes: - Remove all large assets from the repoistory; incuding the other 50MiB   model protobuf and a lot of images in our g3doc directory. We will   maintain these assets externally for now.  g3doc images may be   broken for a little bit; but the website will be fine; which   is the important resource. By @vrv and @petewarden.  Updates   READMES to reflect the external model resources. - Fix to saver's latest_checkpoint function by Zhifeng - Made protos visibility public by @vrv - Updates to docs by @mrry; Andy - Embed tensorboard resource for summary icon by Daniel - More updates to backwars compat by @josh11b Base CL: 108194981,deserialization,2025-05-14 16:16:31,tensorflow_security_analysis
commit-e774fa829a1d74ab2d410cefc62cbd47e20b0317,tensorflow/core/kernels/BUILD,CWE-362,725e968a934419eec45b9acaf4bf8dc5f5f0574e,Remove race conditions from TensorShapeUtils::MakeShape,Changes to make custom user ops not statically include tensorflow/core:framework. - Made a header only cc_library target for tensorflow/core:framework - Added a tf_custom_op_library macro to cut down the boiler plate - Added ability to compile custom user ops using CUDA Fixes #1378; #1419 Change: 116991629,racescondition,2025-05-14 16:16:34,tensorflow_security_analysis
commit-edeb0debc62875ddb094ba3445d00ce2282c9fe3,tensorflow/core/BUILD,CWE-362,80344f3f7d22b39b5b74d93dabe7ba66cc32b214,Remove race conditions from TensorShapeUtils::MakeShape,TensorFlow: use GOOGLE_CUDA to prevent gpu library code from needing to be linked into CPU-only binaries. Change: 116473970,racescondition,2025-05-14 16:16:35,tensorflow_security_analysis
commit-f0d630445fbe7fa7538ea6acf52f58cbf12bf1c1,tensorflow/core/kernels/BUILD,CWE-362,80344f3f7d22b39b5b74d93dabe7ba66cc32b214,Remove race conditions from TensorShapeUtils::MakeShape,Remove redundant filegroup definitions from tensorflow/core/BUILD and just use filegroups from tensorflow/core/kernels/BUILD for Android targets. Change: 116688861,racescondition,2025-05-14 16:16:36,tensorflow_security_analysis
commit-fe056f0b5e52db86766761f5e6446a89c1aa3938,tensorflow/tensorflow.bzl,CWE-697,5c9f4f8973d0958d13e30be574f9403df43b87d7,TensorFlow: fix bug in StringPiece::contains which made it always return true.  Add a unittest to catch this type of regression in the future. Change: 115573280,Merge changes from github. Change: 114882676,,2025-05-14 16:16:38,tensorflow_security_analysis
commit-f2102f4e2c1c87f1d1bf9ab856a2849c54478760,tensorflow/tensorboard/components/tf-graph-common/lib/scene/node.ts,CWE-484,41bd9ebacd388fa0451bce90fef36754fae89a88,Fixed bug with fall-through switch statement,TensorFlow: upstream changes from the afternoon. Changes: - futurize --stage2 changes for Python 3 compatibility by @girving. - Small updates to documentation by @vrv; schuster and others - Account for failure of std::thread::hardware_concurrency by @ebrevdo. - More changes for backwards-compatibility tests by Josh - Updates to python op doc generation by Josh - Added support for using the best-fit allocator via ConfigProto by @vrv. - Rename LocalSession to DirectSession; since local was a bad name for   it. - Enable tf.nn.moments() to work with tensors of unknown shape by @mrry.   GITHUB_ISSUE: 139 - Changes for Android build by Andrew. Base CL: 107645181,,2025-05-14 16:16:42,tensorflow_security_analysis
commit-9b70316263eb74476ab96b7c0f300c4d90223425,tensorflow/tensorboard/dist/tf-tensorboard.html,CWE-484,41bd9ebacd388fa0451bce90fef36754fae89a88,Fixed bug with fall-through switch statement,Running our linter on a lot of files. Change: 112920860,,2025-05-14 16:16:42,tensorflow_security_analysis
commit-eb9b374e0f4c9dd1939a9d16ac5d252868b9001b,package.json,CWE-79,ea1d0b9af9b28b57166d4ca67bece21650221a04,fix(deps): upgrade rollup 4.22.4+ to ensure avoiding XSS (#18180),workflow: switch to simple-git-hooks (#6219),XSScross-ssitesscripting,2025-05-14 20:16:42,vite_security_analysis
commit-fbf7ab40a81f92e474f924a6d3fcdabf107ff1ac,packages/vite/package.json,CWE-79,ea1d0b9af9b28b57166d4ca67bece21650221a04,fix(deps): upgrade rollup 4.22.4+ to ensure avoiding XSS (#18180),wip: trasnform,XSScross-ssitesscripting,2025-05-14 20:16:42,vite_security_analysis
commit-ffedc06cab6357fe8857a2bc432d57adef3c34d3,packages/vite/src/node/plugins/importAnalysis.ts,CWE-79,ea1d0b9af9b28b57166d4ca67bece21650221a04,fix(deps): upgrade rollup 4.22.4+ to ensure avoiding XSS (#18180),fix(hmr): trigger hmr for missing file import errored module after file creation (#16303),XSScross-ssitesscripting,2025-05-14 20:16:44,vite_security_analysis
commit-e0a6ef2b9e6f1df8c5e71efab6182b7cf662d18d,packages/vite/package.json,CWE-833,fd9de0473e075c8d69bb3a8867ab15300506e67b,fix(esbuild): update tsconfck to fix bug that could cause a deadlock  (#16124),fix(deps): update all non-major dependencies (#15803) Co-authored-by: bluwy <bjornlu.dev@gmail.com>,,2025-05-14 20:16:46,vite_security_analysis
